name: Benchmark Redis vs KeyDB vs Dragonfly

on:
  workflow_dispatch:
    branches: [master]
  push:
    branches:
      - master
    paths-ignore:
      - '.gitignore'
      - 'readme.txt'
      - 'readme.md'

jobs:
  benchmark:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: System Info
      run: |
        echo "==== Kernel ===="
        uname -r

        echo "==== CPU Info ===="
        lscpu
    
        echo "==== Memory Info ===="
        free -m
    
        echo "==== Disk Info ===="
        df -hT

    - name: Update System
      run: |
        sudo apt-get update -y
        sudo DEBIAN_FRONTEND=noninteractive apt-get upgrade -y
        sudo DEBIAN_FRONTEND=noninteractive apt-get dist-upgrade -y

    - name: Generate Distinct CA, Server, and Client Certificates
      run: |
        # Generate CA's private key and self-signed certificate
        openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -out ca.key
        openssl req -new -x509 -days 365 -key ca.key -out ca.crt -subj "/C=US/ST=Some-State/O=OrganizationName/OU=OrganizationalUnit/CN=CA"
        
        # Generate server's private key and certificate signing request (CSR)
        openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -out test.key
        openssl req -new -key test.key -out test.csr -subj "/C=US/ST=Some-State/O=OrganizationName/OU=OrganizationalUnit/CN=test.com"
        
        # Sign the server's CSR with the CA's private key to get the server's certificate
        openssl x509 -req -in test.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out test.crt -days 365
        
        # Generate client's private key and CSR
        openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -out client_priv.pem
        openssl req -new -key client_priv.pem -out client.csr -subj "/C=US/ST=Some-State/O=OrganizationName/OU=OrganizationalUnit/CN=test.server.com"
        
        # Sign the client's CSR with the CA's private key to get the client's certificate
        openssl x509 -req -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out client_cert.pem -days 365

    - name: Update Redis Configuration for non-TLS
      run: |
        echo "io-threads 2" >> redis.conf
        echo "io-threads-do-reads yes" >> redis.conf
        echo "io-threads 2" >> keydb.conf
        echo "io-threads-do-reads yes" >> keydb.conf

    - name: Update Redis Configuration for TLS
      run: |
        echo "tls-port 6390" >> redis-tls.conf
        echo "tls-cert-file /tls/test.crt" >> redis-tls.conf
        echo "tls-key-file /tls/test.key" >> redis-tls.conf
        echo "tls-ca-cert-file /tls/ca.crt" >> redis-tls.conf
    
    - name: Update KeyDB Configuration for TLS
      run: |
        echo "tls-port 6391" >> keydb-tls.conf
        echo "tls-cert-file /tls/test.crt" >> keydb-tls.conf
        echo "tls-key-file /tls/test.key" >> keydb-tls.conf
        echo "tls-ca-cert-file /tls/ca.crt" >> keydb-tls.conf
    
    - name: Update Dragonfly Configuration for TLS
      run: |
        echo "tls-port 6392" >> dragonfly-tls.conf
        echo "tls-cert-file /tls/test.crt" >> dragonfly-tls.conf
        echo "tls-key-file /tls/test.key" >> dragonfly-tls.conf
        echo "tls-ca-cert-file /tls/ca.crt" >> dragonfly-tls.conf

    - name: Update Valkey Configuration for non-TLS
      run: |
        echo '' >> valkey.conf

    - name: Update Valkey Configuration for TLS
      run: |
        echo "tls-port 6393" >> valkey-tls.conf
        echo "tls-cert-file /tls/test.crt" >> valkey-tls.conf
        echo "tls-key-file /tls/test.key" >> valkey-tls.conf
        echo "tls-ca-cert-file /tls/ca.crt" >> valkey-tls.conf
        echo "tls-auth-clients no" >> valkey-tls.conf

    - name: Build Redis Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-redis
        load: true
        tags: redis:latest

    - name: Build KeyDB Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-keydb
        load: true
        tags: keydb:latest

    - name: Build Dragonfly Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-dragonfly
        load: true
        tags: dragonfly:latest

    - name: Build Redis Docker image with TLS
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-redis-tls
        load: true
        tags: redis-tls:latest
    
    - name: Build KeyDB Docker image with TLS
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-keydb-tls
        load: true
        tags: keydb-tls:latest
    
    - name: Build Dragonfly Docker image with TLS
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-dragonfly-tls
        load: true
        tags: dragonfly-tls:latest

    - name: Build Valkey Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-valkey
        load: true
        tags: valkey:latest

    - name: Build Valkey Docker image with TLS
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile-valkey-tls
        load: true
        tags: valkey-tls:latest

    - name: Run Redis container
      run: |
        docker run -d --name redis -p 6379:6379 --ulimit memlock=-1 redis:latest
        sleep 20

    - name: Run KeyDB container
      run: |
        docker run -d --name keydb -p 6380:6379 --ulimit memlock=-1 keydb:latest
        sleep 20

    - name: Run Dragonfly container
      run: |
        docker run -d --name dragonfly -p 6381:6379 --ulimit memlock=-1 dragonfly:latest
        sleep 20

    - name: Run Redis container with TLS
      run: |
        docker run -d --name redis-tls -p 6390:6390 --ulimit memlock=-1 redis-tls:latest
        sleep 20
    
    - name: Run KeyDB container with TLS
      run: |
        docker run -d --name keydb-tls -p 6391:6391 --ulimit memlock=-1 keydb-tls:latest
        sleep 20
    
    - name: Run Dragonfly container with TLS
      run: |
        docker run -d --name dragonfly-tls -p 6392:6392 --ulimit memlock=-1 dragonfly-tls:latest
        sleep 20

    - name: Run Valkey container
      run: |
        docker run -d --name valkey -p 6380:6379 --ulimit memlock=-1 valkey:latest
        sleep 20

    - name: Run Valkey container with TLS
      run: |
        docker run -d --name valkey-tls -p 6393:6393 --ulimit memlock=-1 valkey-tls:latest
        sleep 20

    - name: Check Redis logs
      run: docker logs redis

    # - name: Check Redis config
    #   run: |
    #     docker exec redis ls -lAh /etc/redis/
    
    - name: Test Redis Connectivity
      run: docker exec redis redis-cli -h 127.0.0.1 -p 6379 PING

    - name: Check KeyDB logs
      run: docker logs keydb

    # - name: Check KeyDB config
    #   run: |
    #     docker exec keydb ls -lAh /etc/keydb/
    
    - name: Test KeyDB Connectivity
      run: docker exec keydb keydb-cli -h 127.0.0.1 -p 6379 PING

    - name: Check Dragonfly logs
      run: docker logs dragonfly

    # - name: Check Dragonfly config
    #   run: |
    #     docker exec dragonfly ls -lAh /etc/dragonfly/
    
    - name: Test Dragonfly Connectivity
      run: docker exec dragonfly redis-cli -h 127.0.0.1 -p 6379 PING

    - name: Inspect Dragonfly Help
      run: |
        docker exec dragonfly dragonfly --help || true

    - name: Check Redis TLS logs
      run: docker logs redis-tls

    # - name: Check Redis TLS config
    #   run: |
    #     docker exec redis-tls ls -lAh /usr/local/etc/redis/
    
    - name: Test Redis TLS Connectivity
      run: docker exec redis-tls redis-cli -h 127.0.0.1 -p 6390 --tls --insecure --cert /tls/test.crt --key /tls/test.key --cacert /tls/ca.crt PING

    - name: Check KeyDB TLS logs
      run: docker logs keydb-tls

    # - name: Check KeyDB TLS config
    #   run: |
    #     docker exec keydb-tls ls -lAh /etc/keydb/
    
    - name: Test KeyDB TLS Connectivity
      run: docker exec keydb-tls keydb-cli -h 127.0.0.1 -p 6391 --tls --insecure --cert /tls/test.crt --key /tls/test.key --cacert /tls/ca.crt PING

    - name: Check Dragonfly TLS logs
      run: docker logs dragonfly-tls

    # - name: Check Dragonfly TLS config
    #   run: |
    #     docker exec dragonfly-tls ls -lAh /etc/dragonfly/
   
    # - name: Test Dragonfly TLS Connectivity
    #   run: |
    #     docker exec dragonfly-tls redis-cli --help
    #     docker exec dragonfly-tls redis-cli -h 127.0.0.1 -p 6392 --cert /tls/test.crt --key /tls/test.key --cacert /tls/ca.crt --password V3ryS3cur3P@sswOrd PING

    - name: Check Valkey logs
      run: docker logs valkey

    - name: Test Valkey Connectivity
      run: docker exec valkey redis-cli -h 127.0.0.1 -p 6379 PING

    - name: Check Valkey TLS logs
      run: docker logs valkey-tls

    - name: Test Valkey TLS Connectivity
      run: docker exec valkey-tls redis-cli -h 127.0.0.1 -p 6393 --tls --insecure --cert /tls/test.crt --key /tls/test.key --cacert /tls/ca.crt PING

    - name: Install memtier_benchmark
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential autoconf automake libpcre3-dev libevent-dev pkg-config zlib1g-dev libssl-dev
        git clone https://github.com/RedisLabs/memtier_benchmark.git
        cd memtier_benchmark
        autoreconf -ivf
        ./configure
        make
        sudo make install

    - name: Inspect memtier_benchmark Help
      run: |
        memtier_benchmark --help || true

    - name: Create Benchmark Logs Directory
      run: mkdir -p ./benchmarklogs

    - name: Memtier 1 Threads Benchmark Redis
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6379 --protocol=redis -t 1 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/redis_benchmarks_1threads.txt || true

    - name: Memtier 1 Threads Benchmark KeyDB
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6380 --protocol=redis -t 1 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/keydb_benchmarks_1threads.txt || true

    - name: Memtier 1 Threads Benchmark Dragonfly
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6381 --protocol=redis -t 1 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/dragonfly_benchmarks_1threads.txt || true

    - name: Memtier 1 Threads Benchmark Valkey
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6380 --protocol=redis -t 1 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/valkey_benchmarks_1threads.txt || true

    - name: Memtier 2 Threads Benchmark Redis
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6379 --protocol=redis -t 2 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/redis_benchmarks_2threads.txt || true

    - name: Memtier 2 Threads Benchmark KeyDB
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6380 --protocol=redis -t 2 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/keydb_benchmarks_2threads.txt || true

    - name: Memtier 2 Threads Benchmark Dragonfly
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6381 --protocol=redis -t 2 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/dragonfly_benchmarks_2threads.txt || true

    - name: Memtier 2 Threads Benchmark Valkey
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6380 --protocol=redis -t 2 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/valkey_benchmarks_2threads.txt || true

    - name: Memtier 8 Threads Benchmark Redis
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6379 --protocol=redis -t 8 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/redis_benchmarks_8threads.txt || true

    - name: Memtier 8 Threads Benchmark KeyDB
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6380 --protocol=redis -t 8 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/keydb_benchmarks_8threads.txt || true

    - name: Memtier 8 Threads Benchmark Dragonfly
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6381 --protocol=redis -t 8 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/dragonfly_benchmarks_8threads.txt || true

    - name: Memtier 8 Threads Benchmark Valkey
      run: memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6380 --protocol=redis -t 8 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/valkey_benchmarks_8threads.txt || true

    - name: Memtier 1 Threads Benchmark Redis with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6390 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt --tls-skip-verify -t 1 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/redis_benchmarks_1threads_tls.txt || true
    
    - name: Memtier 1 Threads Benchmark KeyDB with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6391 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt --tls-skip-verify -t 1 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/keydb_benchmarks_1threads_tls.txt || true
    
    - name: Memtier 1 Threads Benchmark Dragonfly with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6392 --protocol=redis --tls --cert=${PWD}/client_cert.pem --key=${PWD}/client_priv.pem --cacert=${PWD}/ca.crt --password V3ryS3cur3P@sswOrd -t 1 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/dragonfly_benchmarks_1threads_tls.txt || true
    
    - name: Memtier 1 Threads Benchmark Valkey with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6393 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt --tls-skip-verify -t 1 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/valkey_benchmarks_1threads_tls.txt || true

    - name: Memtier 2 Threads Benchmark Redis with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6390 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt --tls-skip-verify -t 2 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/redis_benchmarks_2threads_tls.txt || true
    
    - name: Memtier 2 Threads Benchmark KeyDB with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6391 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt --tls-skip-verify -t 2 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/keydb_benchmarks_2threads_tls.txt || true
    
    - name: Memtier 2 Threads Benchmark Dragonfly with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6392 --protocol=redis --tls --cert=${PWD}/client_cert.pem --key=${PWD}/client_priv.pem --cacert=${PWD}/ca.crt --password V3ryS3cur3P@sswOrd -t 2 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/dragonfly_benchmarks_2threads_tls.txt || true
    
    - name: Memtier 2 Threads Benchmark Valkey with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6393 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt --tls-skip-verify -t 2 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/valkey_benchmarks_2threads_tls.txt || true

    - name: Memtier 8 Threads Benchmark Redis with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6390 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt --tls-skip-verify -t 8 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/redis_benchmarks_8threads_tls.txt || true
    
    - name: Memtier 8 Threads Benchmark KeyDB with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6391 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt --tls-skip-verify -t 8 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/keydb_benchmarks_8threads_tls.txt || true
    
    - name: Memtier 8 Threads Benchmark Dragonfly with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6392 --protocol=redis --tls --cert=${PWD}/client_cert.pem --key=${PWD}/client_priv.pem --cacert=${PWD}/ca.crt --password V3ryS3cur3P@sswOrd -t 8 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/dragonfly_benchmarks_8threads_tls.txt || true

    - name: Memtier 8 Threads Benchmark Valkey with TLS
      run: |
        memtier_benchmark -s 127.0.0.1 --ratio=1:15 -p 6393 --protocol=redis --tls --cert=${PWD}/test.crt --key=${PWD}/test.key --cacert=${PWD}/ca.crt --tls-skip-verify -t 8 --distinct-client-seed --hide-histogram --requests=2000 --clients=100 --pipeline=1 --data-size=384 | tee ./benchmarklogs/valkey_benchmarks_8threads_tls.txt || true

    - name: Convert Redis 1 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_1threads.txt "Redis 1 Thread"
        cat ./benchmarklogs/redis_benchmarks_1threads.md

    - name: Convert KeyDB 1 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_1threads.txt "KeyDB 1 Thread"
        cat ./benchmarklogs/keydb_benchmarks_1threads.md

    - name: Convert Dragonfly 1 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_1threads.txt "Dragonfly 1 Threads"
        cat ./benchmarklogs/dragonfly_benchmarks_1threads.md

    - name: Convert Redis 2 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_2threads.txt "Redis 2 Threads"
        cat ./benchmarklogs/redis_benchmarks_2threads.md

    - name: Convert KeyDB 2 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_2threads.txt "KeyDB 2 Threads"
        cat ./benchmarklogs/keydb_benchmarks_2threads.md

    - name: Convert Dragonfly 2 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_2threads.txt "Dragonfly 2 Thread"
        cat ./benchmarklogs/dragonfly_benchmarks_2threads.md

    - name: Convert Redis 8 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_8threads.txt "Redis 8 Threads"
        cat ./benchmarklogs/redis_benchmarks_8threads.md

    - name: Convert KeyDB 8 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_8threads.txt "KeyDB 8 Threads"
        cat ./benchmarklogs/keydb_benchmarks_8threads.md

    - name: Convert Dragonfly 8 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_8threads.txt "Dragonfly 8 Threads"
        cat ./benchmarklogs/dragonfly_benchmarks_8threads.md

    - name: Convert Redis 1 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_1threads_tls.txt "Redis TLS 1 Thread"
        cat ./benchmarklogs/redis_benchmarks_1threads_tls.md
    
    - name: Convert KeyDB 1 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_1threads_tls.txt "KeyDB TLS 1 Thread"
        cat ./benchmarklogs/keydb_benchmarks_1threads_tls.md
    
    - name: Convert Dragonfly 1 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_1threads_tls.txt "Dragonfly TLS 1 Thread"
        cat ./benchmarklogs/dragonfly_benchmarks_1threads_tls.md
    
    - name: Convert Redis 2 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_2threads_tls.txt "Redis TLS 2 Threads"
        cat ./benchmarklogs/redis_benchmarks_2threads_tls.md
    
    - name: Convert KeyDB 2 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_2threads_tls.txt "KeyDB TLS 2 Threads"
        cat ./benchmarklogs/keydb_benchmarks_2threads_tls.md
    
    - name: Convert Dragonfly 2 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_2threads_tls.txt "Dragonfly TLS 2 Threads"
        cat ./benchmarklogs/dragonfly_benchmarks_2threads_tls.md
    
    - name: Convert Redis 8 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/redis_benchmarks_8threads_tls.txt "Redis TLS 8 Threads"
        cat ./benchmarklogs/redis_benchmarks_8threads_tls.md
    
    - name: Convert KeyDB 8 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/keydb_benchmarks_8threads_tls.txt "KeyDB TLS 8 Threads"
        cat ./benchmarklogs/keydb_benchmarks_8threads_tls.md
    
    - name: Convert Dragonfly 8 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/dragonfly_benchmarks_8threads_tls.txt "Dragonfly TLS 8 Threads"
        cat ./benchmarklogs/dragonfly_benchmarks_8threads_tls.md

    - name: Convert Valkey 1 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/valkey_benchmarks_1threads.txt "Valkey 1 Thread"
        cat ./benchmarklogs/valkey_benchmarks_1threads.md

    - name: Convert Valkey 2 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/valkey_benchmarks_2threads.txt "Valkey 2 Threads"
        cat ./benchmarklogs/valkey_benchmarks_2threads.md

    - name: Convert Valkey 8 Threads Benchmark to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/valkey_benchmarks_8threads.txt "Valkey 8 Threads"
        cat ./benchmarklogs/valkey_benchmarks_8threads.md

    - name: Convert Valkey 1 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/valkey_benchmarks_1threads_tls.txt "Valkey TLS 1 Thread"
        cat ./benchmarklogs/valkey_benchmarks_1threads_tls.md

    - name: Convert Valkey 2 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/valkey_benchmarks_2threads_tls.txt "Valkey TLS 2 Threads"
        cat ./benchmarklogs/valkey_benchmarks_2threads_tls.md

    - name: Convert Valkey 8 Threads Benchmark with TLS to MD
      run: |
        python scripts/parse_memtier_to_md.py ./benchmarklogs/valkey_benchmarks_8threads_tls.txt "Valkey TLS 8 Threads"
        cat ./benchmarklogs/valkey_benchmarks_8threads_tls.md

    - name: Combine Redis Benchmark MD Table
      run: |
        python scripts/combine_markdown_results.py "./benchmarklogs/redis_benchmarks_1threads.md ./benchmarklogs/redis_benchmarks_2threads.md ./benchmarklogs/redis_benchmarks_8threads.md" redis
        cat ./benchmarklogs/combined_redis_results.md

    - name: Combine KeyDB Benchmark MD Table
      run: |
        python scripts/combine_markdown_results.py "./benchmarklogs/keydb_benchmarks_1threads.md ./benchmarklogs/keydb_benchmarks_2threads.md ./benchmarklogs/keydb_benchmarks_8threads.md" keydb
        cat ./benchmarklogs/combined_keydb_results.md

    - name: Combine Dragonfly Benchmark MD Table
      run: |
        python scripts/combine_markdown_results.py "./benchmarklogs/dragonfly_benchmarks_1threads.md ./benchmarklogs/dragonfly_benchmarks_2threads.md ./benchmarklogs/dragonfly_benchmarks_8threads.md" dragonfly
        cat ./benchmarklogs/combined_dragonfly_results.md

    - name: Combine Redis TLS Benchmark MD Table
      run: |
        python scripts/combine_markdown_results.py "./benchmarklogs/redis_benchmarks_1threads_tls.md ./benchmarklogs/redis_benchmarks_2threads_tls.md ./benchmarklogs/redis_benchmarks_8threads_tls.md" "redis-tls"
        cat ./benchmarklogs/combined_redis-tls_results.md

    - name: Combine KeyDB TLS Benchmark MD Table
      run: |
        python scripts/combine_markdown_results.py "./benchmarklogs/keydb_benchmarks_1threads_tls.md ./benchmarklogs/keydb_benchmarks_2threads_tls.md ./benchmarklogs/keydb_benchmarks_8threads_tls.md" "keydb-tls"
        cat ./benchmarklogs/combined_keydb-tls_results.md

    - name: Combine Dragonfly TLS Benchmark MD Table
      run: |
        python scripts/combine_markdown_results.py "./benchmarklogs/dragonfly_benchmarks_1threads_tls.md ./benchmarklogs/dragonfly_benchmarks_2threads_tls.md ./benchmarklogs/dragonfly_benchmarks_8threads_tls.md" "dragonfly-tls"
        cat ./benchmarklogs/combined_dragonfly-tls_results.md

    - name: Combine Valkey Benchmark MD Table
      run: |
        python scripts/combine_markdown_results.py "./benchmarklogs/valkey_benchmarks_1threads.md ./benchmarklogs/valkey_benchmarks_2threads.md ./benchmarklogs/valkey_benchmarks_8threads.md" valkey
        cat ./benchmarklogs/combined_valkey_results.md

    - name: Combine Valkey TLS Benchmark MD Table
      run: |
        python scripts/combine_markdown_results.py "./benchmarklogs/valkey_benchmarks_1threads_tls.md ./benchmarklogs/valkey_benchmarks_2threads_tls.md ./benchmarklogs/valkey_benchmarks_8threads_tls.md" "valkey-tls"
        cat ./benchmarklogs/combined_valkey-tls_results.md

    - name: Upload Benchmark Logs
      uses: actions/upload-artifact@v4
      with:
        name: benchmark_logs
        path: benchmarklogs/*

    - name: Cleanup
      run: |
        docker stop redis
        docker stop keydb
        docker stop dragonfly
        docker stop valkey
        docker stop redis-tls
        docker stop keydb-tls
        docker stop dragonfly-tls
        docker stop valkey-tls