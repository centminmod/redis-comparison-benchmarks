WordPress Object Cache Test with Predis - Configured Runner
============================================================
Implementation: Predis (Pure PHP Redis Client)
Enhanced TLS Support: Yes
Statistical Analysis: 13 iterations with confidence intervals

üìã Loading configuration from: tests/php/test_config_predis.php
‚úÖ Configuration loaded successfully

üìä Test Configuration:
  Implementation: Predis (Pure PHP)
  Duration per iteration: 30s
  Test iterations: 13
  Output directory: ./benchmarklogs-2t
  TLS testing: Enabled
  Flush before test: Yes
  Thread variant: 2
  Connection timeout: 5s
  Read/write timeout: 5s
  Connection retries: 3
  Persistent connections: No
  Thread configuration:
    redis_io_threads: 2 threads
    keydb_server_threads: 2 threads
    dragonfly_proactor_threads: 2 threads
    valkey_io_threads: 2 threads
  Database configurations:
    Redis: 127.0.0.1:6379 (TLS: 6390) (IO threads: 2)
    KeyDB: 127.0.0.1:6380 (TLS: 6391) (Server threads: 2)
    Dragonfly: 127.0.0.1:6381 (TLS: 6392) (Proactor threads: 2)
    Valkey: 127.0.0.1:6382 (TLS: 6393) (IO threads: 2)

======================================================================

üîç Checking Predis availability...
‚úÖ Predis library available

üöÄ Starting Predis WordPress Object Cache Test...

Starting WordPress Object Cache Test (Predis)...
Timestamp: 2025-06-10 06:48:18 UTC
Predis Version: unknown
PHP Version: 8.4.8
Enhanced Testing Configuration (Predis):
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
- Connection timeout: 5s
- Read/write timeout: 5s
- Connection retry attempts: 3
- Persistent connections: Disabled
- TCP keepalive: Enabled
Thread Variant: 2
Thread Configuration:
  redis_io_threads: 2 threads
  keydb_server_threads: 2 threads
  dragonfly_proactor_threads: 2 threads
  valkey_io_threads: 2 threads
TLS Certificates: Found and validated (Predis-compatible)

Checking TLS readiness (Predis)...
  Redis: TLS port accessible ‚úì
  KeyDB: TLS port accessible ‚úì
  Dragonfly: TLS port accessible ‚úì
  Valkey: TLS port accessible ‚úì

Predis TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis with Predis...
  Configuration: IO Threads: 2
  Running 13 iterations for Redis (non-TLS-Predis)...
  Initial keys in database: 395215
  Flushing database before test...
  Database flushed in 221.94ms. Keys remaining: 0
    Iteration 1/13... 9318 ops/sec, 0.107ms latency
    Iteration 2/13... 9940 ops/sec, 0.100ms latency
    Iteration 3/13... 10146 ops/sec, 0.098ms latency
    Iteration 4/13... 10267 ops/sec, 0.097ms latency
    Iteration 5/13... 10312 ops/sec, 0.096ms latency
    Iteration 6/13... 10333 ops/sec, 0.096ms latency
    Iteration 7/13... 10281 ops/sec, 0.097ms latency
    Iteration 8/13... 10342 ops/sec, 0.096ms latency
    Iteration 9/13... 10378 ops/sec, 0.096ms latency
    Iteration 10/13... 10454 ops/sec, 0.095ms latency
    Iteration 11/13... 10474 ops/sec, 0.095ms latency
    Iteration 12/13... 10458 ops/sec, 0.095ms latency
    Iteration 13/13... 10478 ops/sec, 0.095ms latency
  Redis (non-TLS-Predis): 10244.83¬±316.00 ops/sec (CV: 3.1%), 0.097¬±0.003ms latency, Quality: good
  Final keys in database: 61468
üîê Attempting TLS connection to Redis at 127.0.0.1:6390 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Redis (TLS-Predis)...
  Initial keys in database: 394346
  Flushing database before test...
  Database flushed in 205.67ms. Keys remaining: 0
    Iteration 1/13... 7202 ops/sec, 0.138ms latency
    Iteration 2/13... 7641 ops/sec, 0.130ms latency
    Iteration 3/13... 7844 ops/sec, 0.127ms latency
    Iteration 4/13... 7883 ops/sec, 0.126ms latency
    Iteration 5/13... 7952 ops/sec, 0.125ms latency
    Iteration 6/13... 7987 ops/sec, 0.125ms latency
    Iteration 7/13... 8048 ops/sec, 0.124ms latency
    Iteration 8/13... 7984 ops/sec, 0.125ms latency
    Iteration 9/13... 8067 ops/sec, 0.123ms latency
    Iteration 10/13... 8091 ops/sec, 0.123ms latency
    Iteration 11/13... 8091 ops/sec, 0.123ms latency
    Iteration 12/13... 8035 ops/sec, 0.124ms latency
    Iteration 13/13... 8090 ops/sec, 0.123ms latency
  Redis (TLS-Predis): 7916.46¬±249.84 ops/sec (CV: 3.2%), 0.126¬±0.004ms latency, Quality: good
  Final keys in database: 61373

Testing KeyDB with Predis...
  Configuration: Server Threads: 2
  Running 13 iterations for KeyDB (non-TLS-Predis)...
  Initial keys in database: 394366
  Flushing database before test...
  Database flushed in 198.99ms. Keys remaining: 0
    Iteration 1/13... 11656 ops/sec, 0.085ms latency
    Iteration 2/13... 12307 ops/sec, 0.081ms latency
    Iteration 3/13... 12521 ops/sec, 0.079ms latency
    Iteration 4/13... 12572 ops/sec, 0.079ms latency
    Iteration 5/13... 12703 ops/sec, 0.078ms latency
    Iteration 6/13... 12674 ops/sec, 0.078ms latency
    Iteration 7/13... 12707 ops/sec, 0.078ms latency
    Iteration 8/13... 12687 ops/sec, 0.078ms latency
    Iteration 9/13... 12701 ops/sec, 0.078ms latency
    Iteration 10/13... 12693 ops/sec, 0.078ms latency
    Iteration 11/13... 12706 ops/sec, 0.078ms latency
    Iteration 12/13... 12789 ops/sec, 0.078ms latency
    Iteration 13/13... 12719 ops/sec, 0.078ms latency
  KeyDB (non-TLS-Predis): 12571.84¬±301.24 ops/sec (CV: 2.4%), 0.079¬±0.002ms latency, Quality: good
  Final keys in database: 61495
üîê Attempting TLS connection to KeyDB at 127.0.0.1:6391 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for KeyDB (TLS-Predis)...
  Initial keys in database: 393411
  Flushing database before test...
  Database flushed in 212.39ms. Keys remaining: 0
    Iteration 1/13... 8707 ops/sec, 0.114ms latency
    Iteration 2/13... 9263 ops/sec, 0.107ms latency
    Iteration 3/13... 9504 ops/sec, 0.105ms latency
    Iteration 4/13... 9497 ops/sec, 0.105ms latency
    Iteration 5/13... 9522 ops/sec, 0.104ms latency
    Iteration 6/13... 9603 ops/sec, 0.104ms latency
    Iteration 7/13... 9587 ops/sec, 0.104ms latency
    Iteration 8/13... 9666 ops/sec, 0.103ms latency
    Iteration 9/13... 9642 ops/sec, 0.103ms latency
    Iteration 10/13... 9666 ops/sec, 0.103ms latency
    Iteration 11/13... 9615 ops/sec, 0.103ms latency
    Iteration 12/13... 9546 ops/sec, 0.104ms latency
    Iteration 13/13... 9741 ops/sec, 0.102ms latency
  KeyDB (TLS-Predis): 9504.68¬±266.44 ops/sec (CV: 2.8%), 0.105¬±0.003ms latency, Quality: good
  Final keys in database: 61447

Testing Dragonfly with Predis...
  Configuration: Proactor Threads: 2
  Running 13 iterations for Dragonfly (non-TLS-Predis)...
  Initial keys in database: 388973
  Flushing database before test...
  Database flushed in 21.36ms. Keys remaining: 0
    Iteration 1/13... 9744 ops/sec, 0.102ms latency
    Iteration 2/13... 10242 ops/sec, 0.097ms latency
    Iteration 3/13... 10293 ops/sec, 0.097ms latency
    Iteration 4/13... 10386 ops/sec, 0.096ms latency
    Iteration 5/13... 10381 ops/sec, 0.096ms latency
    Iteration 6/13... 10553 ops/sec, 0.094ms latency
    Iteration 7/13... 10507 ops/sec, 0.095ms latency
    Iteration 8/13... 10664 ops/sec, 0.093ms latency
    Iteration 9/13... 10775 ops/sec, 0.092ms latency
    Iteration 10/13... 10596 ops/sec, 0.094ms latency
    Iteration 11/13... 10667 ops/sec, 0.093ms latency
    Iteration 12/13... 10754 ops/sec, 0.092ms latency
    Iteration 13/13... 10765 ops/sec, 0.092ms latency
  Dragonfly (non-TLS-Predis): 10486.69¬±286.21 ops/sec (CV: 2.7%), 0.095¬±0.003ms latency, Quality: good
  Final keys in database: 61321
üîê Attempting TLS connection to Dragonfly at 127.0.0.1:6392 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üîê Adding Dragonfly authentication to connection parameters...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Dragonfly (TLS-Predis)...
  Initial keys in database: 389136
  Flushing database before test...
  Database flushed in 26.65ms. Keys remaining: 0
    Iteration 1/13... 7957 ops/sec, 0.125ms latency
    Iteration 2/13... 8291 ops/sec, 0.120ms latency
    Iteration 3/13... 8460 ops/sec, 0.118ms latency
    Iteration 4/13... 8476 ops/sec, 0.117ms latency
    Iteration 5/13... 8386 ops/sec, 0.119ms latency
    Iteration 6/13... 8594 ops/sec, 0.116ms latency
    Iteration 7/13... 8702 ops/sec, 0.114ms latency
    Iteration 8/13... 8613 ops/sec, 0.116ms latency
    Iteration 9/13... 8515 ops/sec, 0.117ms latency
    Iteration 10/13... 8334 ops/sec, 0.119ms latency
    Iteration 11/13... 8637 ops/sec, 0.115ms latency
    Iteration 12/13... 8468 ops/sec, 0.118ms latency
    Iteration 13/13... 8618 ops/sec, 0.115ms latency
  Dragonfly (TLS-Predis): 8465.40¬±196.35 ops/sec (CV: 2.3%), 0.118¬±0.003ms latency, Quality: good
  Final keys in database: 61313

Testing Valkey with Predis...
  Configuration: IO Threads: 2
  Running 13 iterations for Valkey (non-TLS-Predis)...
  Initial keys in database: 390854
  Flushing database before test...
  Database flushed in 0.10ms. Keys remaining: 0
    Iteration 1/13... 13318 ops/sec, 0.075ms latency
    Iteration 2/13... 14175 ops/sec, 0.070ms latency
    Iteration 3/13... 14587 ops/sec, 0.068ms latency
    Iteration 4/13... 14628 ops/sec, 0.068ms latency
    Iteration 5/13... 14773 ops/sec, 0.067ms latency
    Iteration 6/13... 14383 ops/sec, 0.069ms latency
    Iteration 7/13... 14509 ops/sec, 0.068ms latency
    Iteration 8/13... 14433 ops/sec, 0.069ms latency
    Iteration 9/13... 14561 ops/sec, 0.068ms latency
    Iteration 10/13... 14597 ops/sec, 0.068ms latency
    Iteration 11/13... 14604 ops/sec, 0.068ms latency
    Iteration 12/13... 14539 ops/sec, 0.068ms latency
    Iteration 13/13... 14442 ops/sec, 0.069ms latency
  Valkey (non-TLS-Predis): 14426.86¬±362.74 ops/sec (CV: 2.5%), 0.069¬±0.002ms latency, Quality: good
  Final keys in database: 61506
üîê Attempting TLS connection to Valkey at 127.0.0.1:6393 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Valkey (TLS-Predis)...
  Initial keys in database: 389476
  Flushing database before test...
  Database flushed in 0.14ms. Keys remaining: 0
    Iteration 1/13... 9448 ops/sec, 0.105ms latency
    Iteration 2/13... 9965 ops/sec, 0.100ms latency
    Iteration 3/13... 10228 ops/sec, 0.097ms latency
    Iteration 4/13... 10462 ops/sec, 0.095ms latency
    Iteration 5/13... 10364 ops/sec, 0.096ms latency
    Iteration 6/13... 10591 ops/sec, 0.094ms latency
    Iteration 7/13... 10526 ops/sec, 0.094ms latency
    Iteration 8/13... 10439 ops/sec, 0.095ms latency
    Iteration 9/13... 10395 ops/sec, 0.096ms latency
    Iteration 10/13... 10453 ops/sec, 0.095ms latency
    Iteration 11/13... 10335 ops/sec, 0.096ms latency
    Iteration 12/13... 10597 ops/sec, 0.094ms latency
    Iteration 13/13... 10418 ops/sec, 0.095ms latency
  Valkey (TLS-Predis): 10324.69¬±310.38 ops/sec (CV: 3.0%), 0.096¬±0.003ms latency, Quality: good
  Final keys in database: 61475

Enhanced Predis results saved:
  CSV: ./benchmarklogs-2t/wordpress_object_cache_test_predis_predis.csv
  JSON: ./benchmarklogs-2t/wordpress_object_cache_test_predis_predis.json
  Markdown: ./benchmarklogs-2t/wordpress_object_cache_test_predis_predis.md
  Raw Data: ./benchmarklogs-2t/wordpress_object_cache_test_predis_predis_raw.json
============================================================
Enhanced Predis test suite completed!
Total execution time: 3,175.52 seconds
Total tests run: 8
Statistical iterations per test: 13
Results saved to ./benchmarklogs-2t/
Redis implementation: Predis (pure PHP)

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY (Predis)
Thread Variant: 2 | Iterations per test: 13
====================================================================================================
Rank Database                       Ops/sec   ¬±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey (Predis)              14427      363    2.5%  0.069ms üü°good    14,226-14,628      ‚úÖ
#2  KeyDB (Predis)               12572      301    2.4%  0.079ms üü°good    12,405-12,739      ‚úÖ
#3  Dragonfly (Predis)           10487      286    2.7%  0.095ms üü°good    10,328-10,645      ‚úÖ
#4  Valkey (TLS-Predis)          10325      310    3.0%  0.096ms üü°good    10,153-10,497      ‚úÖ
#5  Redis (Predis)               10245      316    3.1%  0.097ms üü°good    10,070-10,420      ‚úÖ
#6  KeyDB (TLS-Predis)            9505      266    2.8%  0.105ms üü°good     9,357-9,652      ‚úÖ
#7  Dragonfly (TLS-Predis)        8465      196    2.3%  0.118ms üü°good     8,356-8,574      ‚úÖ
#8  Redis (TLS-Predis)            7916      250    3.2%  0.126ms üü°good     7,778-8,055      ‚úÖ
====================================================================================================
Implementation: Predis (Pure PHP Redis Client)
üìà Compare with phpredis results to see implementation trade-offs

============================================================
TLS vs NON-TLS PERFORMANCE COMPARISON (Predis)
Thread Variant: 2
============================================================
Redis      | Non-TLS:    10245¬±316  | TLS:     7916¬±250  | Impact: +22.7% *
KeyDB      | Non-TLS:    12572¬±301  | TLS:     9505¬±266  | Impact: +24.4% *
Dragonfly  | Non-TLS:    10487¬±286  | TLS:     8465¬±196  | Impact: +19.3% *
Valkey     | Non-TLS:    14427¬±363  | TLS:    10325¬±310  | Impact: +28.4% *
------------------------------------------------------------
* = Statistically significant difference (95% confidence)
Implementation: Predis (Pure PHP)
============================================================

================================================================================
STATISTICAL INSIGHTS (Predis)
Thread Variant: 2 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  üü° Good      :  8 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 2.8% (lower is better)
  Range: 2.3% - 3.2%
  üìä Good measurement consistency with Predis

Predis Implementation Notes:
  üì° Connection management: Automatic (no manual close required)
  üîí TLS handling: Enhanced SSL context support
  üîÑ Error recovery: Built-in retry logic with exponential backoff
  üìä Performance characteristics: Pure PHP (higher latency, more consistent)
================================================================================

================================================================================
PREDIS-SPECIFIC INSIGHTS
Thread Variant: 2 | Implementation: Predis (Pure PHP)
================================================================================
TLS Connection Reliability:
  ‚úÖ Predis TLS connections: 4/4 databases
  üìä All TLS connections established successfully
  üîí SSL context handling: Reliable (Predis manages SSL internally)

Predis Configuration Analysis:
  üîó Connection timeout: 5s
  üì° Read/write timeout: 5s
  üîÑ Connection retry attempts: 3
  ‚ö° TCP keepalive: Enabled
  üîó Persistent connections: Disabled

Performance Characteristics:
  üìà Average non-TLS performance: 11,933 ops/sec
  üîí Average TLS performance: 9,053 ops/sec
  üìä TLS overhead: 24.1%
  ‚ÑπÔ∏è  Note: 25-40% TLS overhead is normal for Redis over SSL

Predis Advantages:
  ‚úÖ Better TLS reliability compared to phpredis extension
  ‚úÖ Enhanced SSL context handling
  ‚úÖ No extension compilation dependencies
  ‚úÖ Consistent behavior across PHP versions
  ‚ö†Ô∏è  Trade-off: Lower raw performance due to pure PHP implementation
================================================================================

======================================================================
‚úÖ Predis WordPress Object Cache test completed successfully!
üìÅ Results saved to: ./benchmarklogs-2t
üìä Implementation: Predis (Pure PHP Redis Client)
üîí TLS Support: Enhanced reliability compared to phpredis

üìÑ Generated files:
  php_wordpress_test_phpredis.log (32KB)
  php_wordpress_test_predis.log (16.8KB)
  wordpress_object_cache_test_predis_predis.csv (1.8KB)
  wordpress_object_cache_test_predis_predis.json (99.6KB)
  wordpress_object_cache_test_predis_predis.md (2.7KB)
  wordpress_object_cache_test_predis_predis_raw.json (87.2KB)
