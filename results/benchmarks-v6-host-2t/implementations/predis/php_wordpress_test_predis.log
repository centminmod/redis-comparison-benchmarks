WordPress Object Cache Test with Predis - Configured Runner
============================================================
Implementation: Predis (Pure PHP Redis Client)
Enhanced TLS Support: Yes
Statistical Analysis: 13 iterations with confidence intervals

📋 Loading configuration from: tests/php/test_config_predis.php
✅ Configuration loaded successfully

📊 Test Configuration:
  Implementation: Predis (Pure PHP)
  Duration per iteration: 30s
  Test iterations: 13
  Output directory: ./benchmarklogs-2t
  TLS testing: Enabled
  Flush before test: Yes
  Thread variant: 2
  Connection timeout: 5s
  Read/write timeout: 5s
  Connection retries: 3
  Persistent connections: No
  Thread configuration:
    redis_io_threads: 2 threads
    keydb_server_threads: 2 threads
    dragonfly_proactor_threads: 2 threads
    valkey_io_threads: 2 threads
  Database configurations:
    Redis: 127.0.0.1:6379 (TLS: 6390) (IO threads: 2)
    KeyDB: 127.0.0.1:6380 (TLS: 6391) (Server threads: 2)
    Dragonfly: 127.0.0.1:6381 (TLS: 6392) (Proactor threads: 2)
    Valkey: 127.0.0.1:6382 (TLS: 6393) (IO threads: 2)

======================================================================

🔍 Checking Predis availability...
✅ Predis library available

🚀 Starting Predis WordPress Object Cache Test...

Starting WordPress Object Cache Test (Predis)...
Timestamp: 2025-06-09 09:40:41 UTC
Predis Version: unknown
PHP Version: 8.4.7
Enhanced Testing Configuration (Predis):
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
- Connection timeout: 5s
- Read/write timeout: 5s
- Connection retry attempts: 3
- Persistent connections: Disabled
- TCP keepalive: Enabled
Thread Variant: 2
Thread Configuration:
  redis_io_threads: 2 threads
  keydb_server_threads: 2 threads
  dragonfly_proactor_threads: 2 threads
  valkey_io_threads: 2 threads
TLS Certificates: Found and validated (Predis-compatible)

Checking TLS readiness (Predis)...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

Predis TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis with Predis...
  Configuration: IO Threads: 2
  Running 13 iterations for Redis (non-TLS-Predis)...
  Initial keys in database: 395330
  Flushing database before test...
  Database flushed in 227.06ms. Keys remaining: 0
    Iteration 1/13... 9343 ops/sec, 0.107ms latency
    Iteration 2/13... 9954 ops/sec, 0.100ms latency
    Iteration 3/13... 10144 ops/sec, 0.098ms latency
    Iteration 4/13... 10284 ops/sec, 0.097ms latency
    Iteration 5/13... 10307 ops/sec, 0.097ms latency
    Iteration 6/13... 10334 ops/sec, 0.096ms latency
    Iteration 7/13... 10402 ops/sec, 0.096ms latency
    Iteration 8/13... 10456 ops/sec, 0.095ms latency
    Iteration 9/13... 10388 ops/sec, 0.096ms latency
    Iteration 10/13... 10385 ops/sec, 0.096ms latency
    Iteration 11/13... 10430 ops/sec, 0.095ms latency
    Iteration 12/13... 10414 ops/sec, 0.096ms latency
    Iteration 13/13... 10404 ops/sec, 0.096ms latency
  Redis (non-TLS-Predis): 10249.77±305.37 ops/sec (CV: 3.0%), 0.097±0.003ms latency, Quality: good
  Final keys in database: 61469
🔐 Attempting TLS connection to Unknown at 127.0.0.1:6390 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  📡 Method 1: Predis 'tls' scheme with SSL context...
  🧪 Testing TLS connection with SET/GET commands...
PHP Warning:  fgets(): SSL operation failed with code 1. OpenSSL Error messages:
error:0A00045C:SSL routines::tlsv13 alert certificate required in /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/vendor/predis/predis/src/Connection/StreamConnection.php on line 313
  ❌ Predis 'tls' scheme failed: Error while reading line from the server. [tls://127.0.0.1:6390]
  📡 Method 2: Predis 'rediss' URI scheme...
PHP Warning:  fgets(): SSL operation failed with code 1. OpenSSL Error messages:
error:0A00045C:SSL routines::tlsv13 alert certificate required in /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/vendor/predis/predis/src/Connection/StreamConnection.php on line 313
  ❌ Predis 'rediss' URI failed: Error while reading line from the server. [rediss://127.0.0.1:6390]
  📡 Method 3: Predis TLS with localhost hostname...
PHP Warning:  fgets(): SSL operation failed with code 1. OpenSSL Error messages:
error:0A00045C:SSL routines::tlsv13 alert certificate required in /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/vendor/predis/predis/src/Connection/StreamConnection.php on line 313
  ❌ Predis localhost TLS failed: Error while reading line from the server. [tls://localhost:6390]
  ❌ All Predis TLS connection methods failed for Unknown at port 6390
  Note: Predis typically has better TLS reliability than phpredis extension

❌ Test failed: Failed to establish TLS connection to Unknown at 127.0.0.1:6390 via Predis

🔍 Debug Information:
  PHP Version: 8.4.7
  Working Directory: /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks
  Config File: /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/test_config_predis.php
  Predis Available: Yes
  Output Directory: ./benchmarklogs-2t
  Output Dir Exists: Yes
  Output Dir Writable: Yes

📋 Stack Trace:
#0 /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/RedisTestBase-predis.php(494): RedisTestBasePredis->connectRedis()
#1 /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/wp_object_cache_test_predis_configured.php(120): RedisTestBasePredis->run()
#2 /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/wp_object_cache_test_predis_configured.php(281): main()
#3 {main}
