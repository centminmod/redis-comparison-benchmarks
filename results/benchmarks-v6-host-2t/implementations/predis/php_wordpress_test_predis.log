WordPress Object Cache Test with Predis - Configured Runner
============================================================
Implementation: Predis (Pure PHP Redis Client)
Enhanced TLS Support: Yes
Statistical Analysis: 13 iterations with confidence intervals

üìã Loading configuration from: tests/php/test_config_predis.php
‚úÖ Configuration loaded successfully

üìä Test Configuration:
  Implementation: Predis (Pure PHP)
  Duration per iteration: 30s
  Test iterations: 13
  Output directory: ./benchmarklogs-2t
  TLS testing: Enabled
  Flush before test: Yes
  Thread variant: 2
  Connection timeout: 5s
  Read/write timeout: 5s
  Connection retries: 3
  Persistent connections: No
  Thread configuration:
    redis_io_threads: 2 threads
    keydb_server_threads: 2 threads
    dragonfly_proactor_threads: 2 threads
    valkey_io_threads: 2 threads
  Database configurations:
    Redis: 127.0.0.1:6379 (TLS: 6390) (IO threads: 2)
    KeyDB: 127.0.0.1:6380 (TLS: 6391) (Server threads: 2)
    Dragonfly: 127.0.0.1:6381 (TLS: 6392) (Proactor threads: 2)
    Valkey: 127.0.0.1:6382 (TLS: 6393) (IO threads: 2)

======================================================================

üîç Checking Predis availability...
‚úÖ Predis library available

üöÄ Starting Predis WordPress Object Cache Test...

Starting WordPress Object Cache Test (Predis)...
Timestamp: 2025-06-09 14:51:05 UTC
Predis Version: unknown
PHP Version: 8.4.7
Enhanced Testing Configuration (Predis):
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
- Connection timeout: 5s
- Read/write timeout: 5s
- Connection retry attempts: 3
- Persistent connections: Disabled
- TCP keepalive: Enabled
Thread Variant: 2
Thread Configuration:
  redis_io_threads: 2 threads
  keydb_server_threads: 2 threads
  dragonfly_proactor_threads: 2 threads
  valkey_io_threads: 2 threads
TLS Certificates: Found and validated (Predis-compatible)

Checking TLS readiness (Predis)...
  Redis: TLS port accessible ‚úì
  KeyDB: TLS port accessible ‚úì
  Dragonfly: TLS port not accessible ‚úó
  Valkey: TLS port accessible ‚úì

Predis TLS testing will be attempted for: Redis, KeyDB, Valkey
============================================================
Testing Redis with Predis...
  Configuration: IO Threads: 2
  Running 13 iterations for Redis (non-TLS-Predis)...
  Initial keys in database: 395089
  Flushing database before test...
  Database flushed in 232.19ms. Keys remaining: 0
    Iteration 1/13... 9592 ops/sec, 0.104ms latency
    Iteration 2/13... 10185 ops/sec, 0.098ms latency
    Iteration 3/13... 10327 ops/sec, 0.096ms latency
    Iteration 4/13... 10556 ops/sec, 0.094ms latency
    Iteration 5/13... 10677 ops/sec, 0.093ms latency
    Iteration 6/13... 10708 ops/sec, 0.093ms latency
    Iteration 7/13... 10722 ops/sec, 0.093ms latency
    Iteration 8/13... 10660 ops/sec, 0.093ms latency
    Iteration 9/13... 10597 ops/sec, 0.094ms latency
    Iteration 10/13... 10610 ops/sec, 0.094ms latency
    Iteration 11/13... 10637 ops/sec, 0.094ms latency
    Iteration 12/13... 10515 ops/sec, 0.095ms latency
    Iteration 13/13... 10588 ops/sec, 0.094ms latency
  Redis (non-TLS-Predis): 10490.42¬±309.96 ops/sec (CV: 3.0%), 0.095¬±0.003ms latency, Quality: good
  Final keys in database: 61467
üîê Attempting TLS connection to Unknown at 127.0.0.1:6390 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Redis (TLS-Predis)...
  Initial keys in database: 395225
  Flushing database before test...
  Database flushed in 225.03ms. Keys remaining: 0
    Iteration 1/13... 7432 ops/sec, 0.134ms latency
    Iteration 2/13... 7881 ops/sec, 0.126ms latency
    Iteration 3/13... 8020 ops/sec, 0.124ms latency
    Iteration 4/13... 8129 ops/sec, 0.122ms latency
    Iteration 5/13... 8242 ops/sec, 0.121ms latency
    Iteration 6/13... 8246 ops/sec, 0.121ms latency
    Iteration 7/13... 8277 ops/sec, 0.120ms latency
    Iteration 8/13... 8197 ops/sec, 0.121ms latency
    Iteration 9/13... 8266 ops/sec, 0.120ms latency
    Iteration 10/13... 8315 ops/sec, 0.120ms latency
    Iteration 11/13... 8379 ops/sec, 0.119ms latency
    Iteration 12/13... 8312 ops/sec, 0.120ms latency
    Iteration 13/13... 8323 ops/sec, 0.120ms latency
  Redis (TLS-Predis): 8155.38¬±256.63 ops/sec (CV: 3.1%), 0.122¬±0.004ms latency, Quality: good
  Final keys in database: 61404

Testing KeyDB with Predis...
  Configuration: Server Threads: 2
  Running 13 iterations for KeyDB (non-TLS-Predis)...
  Initial keys in database: 394594
  Flushing database before test...
  Database flushed in 217.68ms. Keys remaining: 0
    Iteration 1/13... 11857 ops/sec, 0.084ms latency
    Iteration 2/13... 12732 ops/sec, 0.078ms latency
    Iteration 3/13... 12985 ops/sec, 0.077ms latency
    Iteration 4/13... 13048 ops/sec, 0.076ms latency
    Iteration 5/13... 13068 ops/sec, 0.076ms latency
    Iteration 6/13... 13065 ops/sec, 0.076ms latency
    Iteration 7/13... 12946 ops/sec, 0.077ms latency
    Iteration 8/13... 13032 ops/sec, 0.076ms latency
    Iteration 9/13... 13036 ops/sec, 0.076ms latency
    Iteration 10/13... 13011 ops/sec, 0.076ms latency
    Iteration 11/13... 12909 ops/sec, 0.077ms latency
    Iteration 12/13... 12796 ops/sec, 0.078ms latency
    Iteration 13/13... 12795 ops/sec, 0.078ms latency
  KeyDB (non-TLS-Predis): 12867.82¬±323.90 ops/sec (CV: 2.5%), 0.077¬±0.002ms latency, Quality: good
  Final keys in database: 61500
üîê Attempting TLS connection to Unknown at 127.0.0.1:6391 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for KeyDB (TLS-Predis)...
  Initial keys in database: 394546
  Flushing database before test...
  Database flushed in 246.89ms. Keys remaining: 0
    Iteration 1/13... 8861 ops/sec, 0.112ms latency
    Iteration 2/13... 9469 ops/sec, 0.105ms latency
    Iteration 3/13... 9611 ops/sec, 0.104ms latency
    Iteration 4/13... 9855 ops/sec, 0.101ms latency
    Iteration 5/13... 9860 ops/sec, 0.101ms latency
    Iteration 6/13... 9959 ops/sec, 0.100ms latency
    Iteration 7/13... 9891 ops/sec, 0.101ms latency
    Iteration 8/13... 9932 ops/sec, 0.100ms latency
    Iteration 9/13... 9904 ops/sec, 0.100ms latency
    Iteration 10/13... 10027 ops/sec, 0.099ms latency
    Iteration 11/13... 9993 ops/sec, 0.100ms latency
    Iteration 12/13... 9938 ops/sec, 0.100ms latency
    Iteration 13/13... 9830 ops/sec, 0.101ms latency
  KeyDB (TLS-Predis): 9779.38¬±316.12 ops/sec (CV: 3.2%), 0.102¬±0.004ms latency, Quality: good
  Final keys in database: 61462

Testing Dragonfly with Predis...
  Configuration: Proactor Threads: 2
  Running 13 iterations for Dragonfly (non-TLS-Predis)...
  Initial keys in database: 390299
  Flushing database before test...
  Database flushed in 20.12ms. Keys remaining: 0
    Iteration 1/13... 10000 ops/sec, 0.099ms latency
    Iteration 2/13... 10760 ops/sec, 0.092ms latency
    Iteration 3/13... 11096 ops/sec, 0.090ms latency
    Iteration 4/13... 11052 ops/sec, 0.090ms latency
    Iteration 5/13... 10843 ops/sec, 0.092ms latency
    Iteration 6/13... 11017 ops/sec, 0.090ms latency
    Iteration 7/13... 10918 ops/sec, 0.091ms latency
    Iteration 8/13... 10961 ops/sec, 0.091ms latency
    Iteration 9/13... 11168 ops/sec, 0.089ms latency
    Iteration 10/13... 11316 ops/sec, 0.088ms latency
    Iteration 11/13... 11171 ops/sec, 0.089ms latency
    Iteration 12/13... 11034 ops/sec, 0.090ms latency
    Iteration 13/13... 11156 ops/sec, 0.089ms latency
  Dragonfly (non-TLS-Predis): 10961.01¬±324.86 ops/sec (CV: 3.0%), 0.091¬±0.003ms latency, Quality: good
  Final keys in database: 61300
  Skipping TLS test for Dragonfly (port not accessible)

Testing Valkey with Predis...
  Configuration: IO Threads: 2
  Running 13 iterations for Valkey (non-TLS-Predis)...
  Initial keys in database: 391956
  Flushing database before test...
  Database flushed in 0.09ms. Keys remaining: 0
    Iteration 1/13... 13701 ops/sec, 0.073ms latency
    Iteration 2/13... 14561 ops/sec, 0.068ms latency
    Iteration 3/13... 15087 ops/sec, 0.066ms latency
    Iteration 4/13... 15137 ops/sec, 0.066ms latency
    Iteration 5/13... 15148 ops/sec, 0.066ms latency
    Iteration 6/13... 15062 ops/sec, 0.066ms latency
    Iteration 7/13... 15211 ops/sec, 0.065ms latency
    Iteration 8/13... 15264 ops/sec, 0.065ms latency
    Iteration 9/13... 15211 ops/sec, 0.065ms latency
    Iteration 10/13... 15174 ops/sec, 0.065ms latency
    Iteration 11/13... 15179 ops/sec, 0.065ms latency
    Iteration 12/13... 15339 ops/sec, 0.065ms latency
    Iteration 13/13... 15214 ops/sec, 0.065ms latency
  Valkey (non-TLS-Predis): 15022.26¬±438.44 ops/sec (CV: 2.9%), 0.066¬±0.002ms latency, Quality: good
  Final keys in database: 61508
üîê Attempting TLS connection to Unknown at 127.0.0.1:6393 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Valkey (TLS-Predis)...
  Initial keys in database: 391049
  Flushing database before test...
  Database flushed in 0.13ms. Keys remaining: 0
    Iteration 1/13... 10021 ops/sec, 0.099ms latency
    Iteration 2/13... 10527 ops/sec, 0.094ms latency
    Iteration 3/13... 10821 ops/sec, 0.092ms latency
    Iteration 4/13... 11112 ops/sec, 0.090ms latency
    Iteration 5/13... 10962 ops/sec, 0.091ms latency
    Iteration 6/13... 11037 ops/sec, 0.090ms latency
    Iteration 7/13... 11049 ops/sec, 0.090ms latency
    Iteration 8/13... 11112 ops/sec, 0.090ms latency
    Iteration 9/13... 11026 ops/sec, 0.090ms latency
    Iteration 10/13... 10974 ops/sec, 0.091ms latency
    Iteration 11/13... 11020 ops/sec, 0.090ms latency
    Iteration 12/13... 11047 ops/sec, 0.090ms latency
    Iteration 13/13... 11025 ops/sec, 0.090ms latency
  Valkey (TLS-Predis): 10902.48¬±306.28 ops/sec (CV: 2.8%), 0.091¬±0.003ms latency, Quality: good
  Final keys in database: 61471

Enhanced Predis results saved:
  CSV: ./benchmarklogs-2t/wordpress_object_cache_test_predis_predis.csv
  JSON: ./benchmarklogs-2t/wordpress_object_cache_test_predis_predis.json
  Markdown: ./benchmarklogs-2t/wordpress_object_cache_test_predis_predis.md
  Raw Data: ./benchmarklogs-2t/wordpress_object_cache_test_predis_predis_raw.json
============================================================
Enhanced Predis test suite completed!
Total execution time: 2,779.36 seconds
Total tests run: 7
Statistical iterations per test: 13
Results saved to ./benchmarklogs-2t/
Redis implementation: Predis (pure PHP)

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY (Predis)
Thread Variant: 2 | Iterations per test: 13
====================================================================================================
Rank Database                       Ops/sec   ¬±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey (Predis)              15022      438    2.9%  0.066ms üü°good    14,779-15,265      ‚úÖ
#2  KeyDB (Predis)               12868      324    2.5%  0.077ms üü°good    12,688-13,047      ‚úÖ
#3  Dragonfly (Predis)           10961      325    3.0%  0.091ms üü°good    10,781-11,141      ‚úÖ
#4  Valkey (TLS-Predis)          10902      306    2.8%  0.091ms üü°good    10,733-11,072      ‚úÖ
#5  Redis (Predis)               10490      310    3.0%  0.095ms üü°good    10,318-10,662      ‚úÖ
#6  KeyDB (TLS-Predis)            9779      316    3.2%  0.102ms üü°good     9,604-9,955      ‚úÖ
#7  Redis (TLS-Predis)            8155      257    3.1%  0.122ms üü°good     8,013-8,298      ‚úÖ
====================================================================================================
Implementation: Predis (Pure PHP Redis Client)
üìà Compare with phpredis results to see implementation trade-offs

============================================================
TLS vs NON-TLS PERFORMANCE COMPARISON (Predis)
Thread Variant: 2
============================================================
Redis      | Non-TLS:    10490¬±310  | TLS:     8155¬±257  | Impact: +22.3% *
KeyDB      | Non-TLS:    12868¬±324  | TLS:     9779¬±316  | Impact: +24.0% *
Dragonfly  | Non-TLS:    10961¬±325  | TLS:   FAILED | Impact: N/A
Valkey     | Non-TLS:    15022¬±438  | TLS:    10902¬±306  | Impact: +27.4% *
------------------------------------------------------------
* = Statistically significant difference (95% confidence)
Implementation: Predis (Pure PHP)
============================================================

================================================================================
STATISTICAL INSIGHTS (Predis)
Thread Variant: 2 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  üü° Good      :  7 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 2.9% (lower is better)
  Range: 2.5% - 3.2%
  üìä Good measurement consistency with Predis

Predis Implementation Notes:
  üì° Connection management: Automatic (no manual close required)
  üîí TLS handling: Enhanced SSL context support
  üîÑ Error recovery: Built-in retry logic with exponential backoff
  üìä Performance characteristics: Pure PHP (higher latency, more consistent)
================================================================================

================================================================================
PREDIS-SPECIFIC INSIGHTS
Thread Variant: 2 | Implementation: Predis (Pure PHP)
================================================================================
TLS Connection Reliability:
  ‚úÖ Predis TLS connections: 3/4 databases
  üìä All TLS connections established successfully
  üîí SSL context handling: Reliable (Predis manages SSL internally)

Predis Configuration Analysis:
  üîó Connection timeout: 5s
  üì° Read/write timeout: 5s
  üîÑ Connection retry attempts: 3
  ‚ö° TCP keepalive: Enabled
  üîó Persistent connections: Disabled

Performance Characteristics:
  üìà Average non-TLS performance: 12,335 ops/sec
  üîí Average TLS performance: 9,612 ops/sec
  üìä TLS overhead: 22.1%
  ‚ÑπÔ∏è  Note: 25-40% TLS overhead is normal for Redis over SSL

Predis Advantages:
  ‚úÖ Better TLS reliability compared to phpredis extension
  ‚úÖ Enhanced SSL context handling
  ‚úÖ No extension compilation dependencies
  ‚úÖ Consistent behavior across PHP versions
  ‚ö†Ô∏è  Trade-off: Lower raw performance due to pure PHP implementation
================================================================================

======================================================================
‚úÖ Predis WordPress Object Cache test completed successfully!
üìÅ Results saved to: ./benchmarklogs-2t
üìä Implementation: Predis (Pure PHP Redis Client)
üîí TLS Support: Enhanced reliability compared to phpredis

üìÑ Generated files:
  php_wordpress_test_phpredis.log (29KB)
  php_wordpress_test_predis.log (15KB)
  wordpress_object_cache_test_predis_predis.csv (1.6KB)
  wordpress_object_cache_test_predis_predis.json (87.3KB)
  wordpress_object_cache_test_predis_predis.md (2.6KB)
  wordpress_object_cache_test_predis_predis_raw.json (76.4KB)
