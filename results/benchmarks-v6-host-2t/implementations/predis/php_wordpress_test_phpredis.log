Loaded configuration from test_config.php
Configuration: {
    "duration": 30,
    "implementation": "phpredis",
    "test_iterations": 13,
    "iteration_pause_ms": 500,
    "save_raw_results": true,
    "output_dir": ".\/benchmarklogs-2t",
    "test_tls": true,
    "flush_before_test": true,
    "debug": false,
    "thread_variant": "2",
    "thread_config": {
        "redis_io_threads": 2,
        "keydb_server_threads": 2,
        "dragonfly_proactor_threads": 2,
        "valkey_io_threads": 2
    },
    "databases": {
        "Redis": {
            "host": "127.0.0.1",
            "port": 6379,
            "tls_port": 6390,
            "io_threads": 2
        },
        "KeyDB": {
            "host": "127.0.0.1",
            "port": 6380,
            "tls_port": 6391,
            "server_threads": 2
        },
        "Dragonfly": {
            "host": "127.0.0.1",
            "port": 6381,
            "tls_port": 6392,
            "proactor_threads": 2
        },
        "Valkey": {
            "host": "127.0.0.1",
            "port": 6382,
            "tls_port": 6393,
            "io_threads": 2
        }
    }
}

Starting WordPress Object Cache Test...
Timestamp: 2025-06-09 09:38:33 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 2
Thread Configuration:
  redis_io_threads: 2 threads
  keydb_server_threads: 2 threads
  dragonfly_proactor_threads: 2 threads
  valkey_io_threads: 2 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 2
  Running 13 iterations for Redis (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.29ms. Keys remaining: 0
    Iteration 1/13... 10509 ops/sec, 0.094ms latency
    Iteration 2/13... 10495 ops/sec, 0.095ms latency
    Iteration 3/13... 10466 ops/sec, 0.095ms latency
    Iteration 4/13... 10392 ops/sec, 0.095ms latency
    Iteration 5/13... 10807 ops/sec, 0.092ms latency
    Iteration 6/13... 10808 ops/sec, 0.092ms latency
    Iteration 7/13... 10925 ops/sec, 0.091ms latency
    Iteration 8/13... 10826 ops/sec, 0.092ms latency
    Iteration 9/13... 10992 ops/sec, 0.090ms latency
    Iteration 10/13... 10997 ops/sec, 0.090ms latency
    Iteration 11/13... 11015 ops/sec, 0.090ms latency
    Iteration 12/13... 11067 ops/sec, 0.090ms latency
    Iteration 13/13... 11096 ops/sec, 0.089ms latency
  Redis (non-TLS): 10799.82±250.40 ops/sec (CV: 2.3%), 0.092±0.002ms latency, Quality: good
  Final keys in database: 395330
🔐 Attempting TLS connection to Unknown at 127.0.0.1:6390
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  📡 Method 1: Using tls:// scheme with custom port 6390...
PHP Warning:  Redis::connect(): Peer certificate CN=`test.com' did not match expected CN=`localhost' in /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/RedisTestBase.php on line 818
PHP Warning:  Redis::connect(): Failed to enable crypto in /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/RedisTestBase.php on line 818
  📡 Method 2: Fallback to IP address with port 6390...
  ✅ TLS connection successful with tls://127.0.0.1:6390
  ❌ PING failed on IP: Connection lost
  📡 Method 3: Legacy SSL context approach with port 6390...
  ✅ SSL context connection successful
  ❌ PING failed with SSL context: Connection lost
  ❌ All TLS connection methods failed for Unknown at port 6390
  Note: Keeping your custom port scheme (6390-6393) instead of standard port 6378
PHP Fatal error:  Uncaught Exception: Failed to establish TLS connection to Unknown at 127.0.0.1:6390 in /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/RedisTestBase.php:930
Stack trace:
#0 /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/RedisTestBase.php(471): RedisTestBase->connectRedis()
#1 /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/wp_object_cache_test.php(289): RedisTestBase->run()
#2 /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/wp_object_cache_test_configured.php(22): require_once('...')
#3 {main}
  thrown in /home/runner/work/redis-comparison-benchmarks/redis-comparison-benchmarks/tests/php/RedisTestBase.php on line 930
