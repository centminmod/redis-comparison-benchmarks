Loaded configuration from test_config.php
Configuration: {
    "duration": 30,
    "implementation": "phpredis",
    "test_iterations": 13,
    "iteration_pause_ms": 500,
    "save_raw_results": true,
    "output_dir": ".\/benchmarklogs-2t",
    "test_tls": true,
    "flush_before_test": true,
    "debug": false,
    "thread_variant": "2",
    "thread_config": {
        "redis_io_threads": 2,
        "keydb_server_threads": 2,
        "dragonfly_proactor_threads": 2,
        "valkey_io_threads": 2
    },
    "databases": {
        "Redis": {
            "host": "127.0.0.1",
            "port": 6379,
            "tls_port": 6390,
            "io_threads": 2
        },
        "KeyDB": {
            "host": "127.0.0.1",
            "port": 6380,
            "tls_port": 6391,
            "server_threads": 2
        },
        "Dragonfly": {
            "host": "127.0.0.1",
            "port": 6381,
            "tls_port": 6392,
            "proactor_threads": 2
        },
        "Valkey": {
            "host": "127.0.0.1",
            "port": 6382,
            "tls_port": 6393,
            "io_threads": 2
        }
    }
}

Starting WordPress Object Cache Test...
Timestamp: 2025-06-09 03:08:34 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 2
Thread Configuration:
  redis_io_threads: 2 threads
  keydb_server_threads: 2 threads
  dragonfly_proactor_threads: 2 threads
  valkey_io_threads: 2 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 2
  Running 13 iterations for Redis (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.27ms. Keys remaining: 0
    Iteration 1/13... 10685 ops/sec, 0.093ms latency
    Iteration 2/13... 10759 ops/sec, 0.092ms latency
    Iteration 3/13... 10770 ops/sec, 0.092ms latency
    Iteration 4/13... 10840 ops/sec, 0.092ms latency
    Iteration 5/13... 10996 ops/sec, 0.090ms latency
    Iteration 6/13... 11007 ops/sec, 0.090ms latency
    Iteration 7/13... 11045 ops/sec, 0.090ms latency
    Iteration 8/13... 11040 ops/sec, 0.090ms latency
    Iteration 9/13... 11139 ops/sec, 0.089ms latency
    Iteration 10/13... 11207 ops/sec, 0.089ms latency
    Iteration 11/13... 11284 ops/sec, 0.088ms latency
    Iteration 12/13... 11363 ops/sec, 0.087ms latency
    Iteration 13/13... 11402 ops/sec, 0.087ms latency
  Redis (non-TLS): 11041.31±233.29 ops/sec (CV: 2.1%), 0.090±0.002ms latency, Quality: good
  Final keys in database: 395434
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6390
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:40
      Valid to: 2026-06-09 02:48:40
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:39
      Valid to: 2026-06-09 02:48:39
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6390
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Redis (TLS)...
  ERROR: Test failed for Redis (TLS): read error on connection to 127.0.0.1:6390

Testing KeyDB...
  Configuration: Server Threads: 2
  Running 13 iterations for KeyDB (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.08ms. Keys remaining: 0
    Iteration 1/13... 13962 ops/sec, 0.071ms latency
    Iteration 2/13... 14022 ops/sec, 0.071ms latency
    Iteration 3/13... 14003 ops/sec, 0.071ms latency
    Iteration 4/13... 14111 ops/sec, 0.070ms latency
    Iteration 5/13... 14257 ops/sec, 0.069ms latency
    Iteration 6/13... 14274 ops/sec, 0.069ms latency
    Iteration 7/13... 14462 ops/sec, 0.068ms latency
    Iteration 8/13... 14407 ops/sec, 0.069ms latency
    Iteration 9/13... 14554 ops/sec, 0.068ms latency
    Iteration 10/13... 14627 ops/sec, 0.068ms latency
    Iteration 11/13... 14582 ops/sec, 0.068ms latency
    Iteration 12/13... 14701 ops/sec, 0.067ms latency
    Iteration 13/13... 14756 ops/sec, 0.067ms latency
  KeyDB (non-TLS): 14362.94±277.49 ops/sec (CV: 1.9%), 0.069±0.001ms latency, Quality: excellent
  Final keys in database: 395535
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6391
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:40
      Valid to: 2026-06-09 02:48:40
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:39
      Valid to: 2026-06-09 02:48:39
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6391
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for KeyDB (TLS)...
  ERROR: Test failed for KeyDB (TLS): read error on connection to 127.0.0.1:6391

Testing Dragonfly...
  Configuration: Proactor Threads: 2
  Running 13 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.51ms. Keys remaining: 0
    Iteration 1/13... 11379 ops/sec, 0.087ms latency
    Iteration 2/13... 11391 ops/sec, 0.087ms latency
    Iteration 3/13... 11508 ops/sec, 0.086ms latency
    Iteration 4/13... 11453 ops/sec, 0.087ms latency
    Iteration 5/13... 11687 ops/sec, 0.085ms latency
    Iteration 6/13... 11645 ops/sec, 0.085ms latency
    Iteration 7/13... 11661 ops/sec, 0.085ms latency
    Iteration 8/13... 11935 ops/sec, 0.083ms latency
    Iteration 9/13... 11704 ops/sec, 0.085ms latency
    Iteration 10/13... 11720 ops/sec, 0.085ms latency
    Iteration 11/13... 12003 ops/sec, 0.083ms latency
    Iteration 12/13... 11912 ops/sec, 0.083ms latency
    Iteration 13/13... 12011 ops/sec, 0.082ms latency
  Dragonfly (non-TLS): 11692.93±221.79 ops/sec (CV: 1.9%), 0.085±0.002ms latency, Quality: excellent
  Final keys in database: 395194
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6392
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:40
      Valid to: 2026-06-09 02:48:40
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:39
      Valid to: 2026-06-09 02:48:39
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6392
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_68465185ea19b...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for minimal SSL: read error on connection to 127.0.0.1:6392
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_68465185ea34f...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for with certificates: read error on connection to 127.0.0.1:6392
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_68465185ea807...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for full SSL context: read error on connection to 127.0.0.1:6392
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_68465185eab1b...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for TLSv1.2: read error on connection to 127.0.0.1:6392
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Dragonfly (TLS)...
  Initial keys in database: 
  Flushing database before test...
  ERROR: Test failed for Dragonfly (TLS): read error on connection to 127.0.0.1:6392

Testing Valkey...
  Configuration: IO Threads: 2
  Running 13 iterations for Valkey (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.09ms. Keys remaining: 0
    Iteration 1/13... 16017 ops/sec, 0.062ms latency
    Iteration 2/13... 16131 ops/sec, 0.061ms latency
    Iteration 3/13... 15995 ops/sec, 0.062ms latency
    Iteration 4/13... 16288 ops/sec, 0.061ms latency
    Iteration 5/13... 16419 ops/sec, 0.060ms latency
    Iteration 6/13... 17129 ops/sec, 0.058ms latency
    Iteration 7/13... 16358 ops/sec, 0.061ms latency
    Iteration 8/13... 16486 ops/sec, 0.060ms latency
    Iteration 9/13... 17143 ops/sec, 0.058ms latency
    Iteration 10/13... 16682 ops/sec, 0.059ms latency
    Iteration 11/13... 17523 ops/sec, 0.056ms latency
    Iteration 12/13... 17435 ops/sec, 0.057ms latency
    Iteration 13/13... 17118 ops/sec, 0.058ms latency
  Valkey (non-TLS): 16671.06±537.18 ops/sec (CV: 3.2%), 0.059±0.002ms latency, Quality: good
  Final keys in database: 395170
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6393
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:40
      Valid to: 2026-06-09 02:48:40
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:39
      Valid to: 2026-06-09 02:48:39
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6393
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: Connection lost
    ⚠️ Command test failed for with certificates: Connection lost
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Valkey (TLS)...
  ERROR: Test failed for Valkey (TLS): read error on connection to 127.0.0.1:6393

Enhanced results saved:
  CSV: ./benchmarklogs-2t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-2t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-2t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-2t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 423.64 seconds
Total tests run: 4
Statistical iterations per test: 13
Results saved to ./benchmarklogs-2t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 2 | Iterations per test: 13
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey                  16671      537    3.2%  0.059ms 🟡good    16,373-16,969      ✅
#2  KeyDB                   14363      277    1.9%  0.069ms 🟢excellent 14,209-14,517      ✅
#3  Dragonfly               11693      222    1.9%  0.085ms 🟢excellent 11,570-11,816      ✅
#4  Redis                   11041      233    2.1%  0.090ms 🟡good    10,912-11,171      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 4/4
- 🏆 Best: Valkey - 16,671 ops/sec
- 📊 Average precision: 2.3% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1104/sec | Heavy pages:    221/sec
KeyDB                | Light pages:   1436/sec | Heavy pages:    287/sec
Dragonfly            | Light pages:   1169/sec | Heavy pages:    234/sec
Valkey               | Light pages:   1667/sec | Heavy pages:    333/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Valkey
- 📊 Estimated capacity: 556 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS PERFORMANCE COMPARISON
Thread Variant: 2
============================================================
No successful TLS connections for performance comparison.
All databases tested with non-TLS only.
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 2 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  🟢 Excellent :  2 tests (50.0%)
  🟡 Good      :  2 tests (50.0%)

Coefficient of Variation Analysis:
  Average CV: 2.3% (lower is better)
  Range: 1.9% - 3.2%
  📊 Good measurement consistency

Performance Analysis:
  Performance range: 11041 - 16671 ops/sec (51.0% spread)
  📈 Moderate performance differences between databases

Statistical Recommendations:
  ✅ High confidence in results - good statistical reliability
================================================================================
Enhanced WordPress Object Cache Test - Statistical Analysis
=========================================================

Checking system requirements...
✅ PHP version: 8.4.7
✅ Redis extension version: 6.2.0
✅ All system requirements met

Loading configuration from test_config.php...
✅ Configuration loaded successfully from file

============================================================
ENHANCED WORDPRESS OBJECT CACHE TEST CONFIGURATION
============================================================
Test Parameters:
  Duration per iteration: 30 seconds
  Test iterations: 13
  Iteration pause: 500ms
  Operations per iteration: 100,000
  Read/Write ratio: 70% / 30%

Statistical Analysis:
  Multi-run testing: Enabled
  Raw data logging: Enabled
  Quality assessment: Enabled (CV-based)
  Confidence intervals: 95%

Thread Configuration:
  Thread variant: 2
  redis_io_threads: 2 threads
  keydb_server_threads: 2 threads
  dragonfly_proactor_threads: 2 threads
  valkey_io_threads: 2 threads

Database Configuration:
  Redis: 127.0.0.1:6379 (TLS: 6390) [IO: 2]
  KeyDB: 127.0.0.1:6380 (TLS: 6391) [Server: 2]
  Dragonfly: 127.0.0.1:6381 (TLS: 6392) [Proactor: 2]
  Valkey: 127.0.0.1:6382 (TLS: 6393) [IO: 2]

Test Environment:
  PHP version: 8.4.7
  Redis extension: Loaded
  Redis extension version: 6.2.0
  Output directory: ./benchmarklogs-2t
  TLS testing: Enabled
  Database flush: Enabled
  Debug mode: Disabled
============================================================

Initializing WordPress Object Cache Test...

Starting WordPress Object Cache Test...
Timestamp: 2025-06-09 03:15:38 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 2
Thread Configuration:
  redis_io_threads: 2 threads
  keydb_server_threads: 2 threads
  dragonfly_proactor_threads: 2 threads
  valkey_io_threads: 2 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 2
  Running 13 iterations for Redis (non-TLS)...
  Initial keys in database: 395431
  Flushing database before test...
  Database flushed in 200.99ms. Keys remaining: 0
    Iteration 1/13... 10675 ops/sec, 0.093ms latency
    Iteration 2/13... 10725 ops/sec, 0.093ms latency
    Iteration 3/13... 10831 ops/sec, 0.092ms latency
    Iteration 4/13... 10840 ops/sec, 0.092ms latency
    Iteration 5/13... 10984 ops/sec, 0.090ms latency
    Iteration 6/13... 11023 ops/sec, 0.090ms latency
    Iteration 7/13... 11112 ops/sec, 0.089ms latency
    Iteration 8/13... 11002 ops/sec, 0.090ms latency
    Iteration 9/13... 11151 ops/sec, 0.089ms latency
    Iteration 10/13... 11242 ops/sec, 0.088ms latency
    Iteration 11/13... 11301 ops/sec, 0.088ms latency
    Iteration 12/13... 11307 ops/sec, 0.088ms latency
    Iteration 13/13... 11297 ops/sec, 0.088ms latency
  Redis (non-TLS): 11037.81±220.86 ops/sec (CV: 2.0%), 0.090±0.002ms latency, Quality: good
  Final keys in database: 395251
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6390
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:40
      Valid to: 2026-06-09 02:48:40
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:39
      Valid to: 2026-06-09 02:48:39
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6390
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Redis (TLS)...
  ERROR: Test failed for Redis (TLS): read error on connection to 127.0.0.1:6390

Testing KeyDB...
  Configuration: Server Threads: 2
  Running 13 iterations for KeyDB (non-TLS)...
  Initial keys in database: 395530
  Flushing database before test...
  Database flushed in 191.69ms. Keys remaining: 0
    Iteration 1/13... 13928 ops/sec, 0.071ms latency
    Iteration 2/13... 13943 ops/sec, 0.071ms latency
    Iteration 3/13... 14024 ops/sec, 0.071ms latency
    Iteration 4/13... 14063 ops/sec, 0.070ms latency
    Iteration 5/13... 14190 ops/sec, 0.070ms latency
    Iteration 6/13... 14229 ops/sec, 0.070ms latency
    Iteration 7/13... 14374 ops/sec, 0.069ms latency
    Iteration 8/13... 14334 ops/sec, 0.069ms latency
    Iteration 9/13... 14527 ops/sec, 0.068ms latency
    Iteration 10/13... 14642 ops/sec, 0.068ms latency
    Iteration 11/13... 14644 ops/sec, 0.068ms latency
    Iteration 12/13... 14771 ops/sec, 0.067ms latency
    Iteration 13/13... 14833 ops/sec, 0.067ms latency
  KeyDB (non-TLS): 14346.39±314.52 ops/sec (CV: 2.2%), 0.069±0.002ms latency, Quality: good
  Final keys in database: 395320
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6391
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:40
      Valid to: 2026-06-09 02:48:40
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:39
      Valid to: 2026-06-09 02:48:39
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6391
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for KeyDB (TLS)...
  ERROR: Test failed for KeyDB (TLS): read error on connection to 127.0.0.1:6391

Testing Dragonfly...
  Configuration: Proactor Threads: 2
  Running 13 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 395124
  Flushing database before test...
  Database flushed in 22.41ms. Keys remaining: 0
    Iteration 1/13... 11272 ops/sec, 0.088ms latency
    Iteration 2/13... 11443 ops/sec, 0.087ms latency
    Iteration 3/13... 11597 ops/sec, 0.086ms latency
    Iteration 4/13... 11528 ops/sec, 0.086ms latency
    Iteration 5/13... 11545 ops/sec, 0.086ms latency
    Iteration 6/13... 11899 ops/sec, 0.083ms latency
    Iteration 7/13... 11698 ops/sec, 0.085ms latency
    Iteration 8/13... 11886 ops/sec, 0.083ms latency
    Iteration 9/13... 11674 ops/sec, 0.085ms latency
    Iteration 10/13... 11691 ops/sec, 0.085ms latency
    Iteration 11/13... 11997 ops/sec, 0.083ms latency
    Iteration 12/13... 11824 ops/sec, 0.084ms latency
    Iteration 13/13... 11961 ops/sec, 0.083ms latency
  Dragonfly (non-TLS): 11693.39±215.82 ops/sec (CV: 1.8%), 0.085±0.002ms latency, Quality: excellent
  Final keys in database: 394704
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6392
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:40
      Valid to: 2026-06-09 02:48:40
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:39
      Valid to: 2026-06-09 02:48:39
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6392
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_6846532e28a19...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for minimal SSL: read error on connection to 127.0.0.1:6392
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_6846532e28d78...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for with certificates: read error on connection to 127.0.0.1:6392
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_6846532e28f4f...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for full SSL context: read error on connection to 127.0.0.1:6392
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_6846532e293a3...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for TLSv1.2: read error on connection to 127.0.0.1:6392
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Dragonfly (TLS)...
  Initial keys in database: 
  Flushing database before test...
  ERROR: Test failed for Dragonfly (TLS): read error on connection to 127.0.0.1:6392

Testing Valkey...
  Configuration: IO Threads: 2
  Running 13 iterations for Valkey (non-TLS)...
  Initial keys in database: 395165
  Flushing database before test...
  Database flushed in 0.09ms. Keys remaining: 0
    Iteration 1/13... 15865 ops/sec, 0.062ms latency
    Iteration 2/13... 16528 ops/sec, 0.060ms latency
    Iteration 3/13... 16633 ops/sec, 0.060ms latency
    Iteration 4/13... 16314 ops/sec, 0.061ms latency
    Iteration 5/13... 16649 ops/sec, 0.059ms latency
    Iteration 6/13... 16445 ops/sec, 0.060ms latency
    Iteration 7/13... 16399 ops/sec, 0.060ms latency
    Iteration 8/13... 16441 ops/sec, 0.060ms latency
    Iteration 9/13... 16778 ops/sec, 0.059ms latency
    Iteration 10/13... 16876 ops/sec, 0.059ms latency
    Iteration 11/13... 17395 ops/sec, 0.057ms latency
    Iteration 12/13... 17189 ops/sec, 0.058ms latency
    Iteration 13/13... 17417 ops/sec, 0.057ms latency
  Valkey (non-TLS): 16687.00±445.18 ops/sec (CV: 2.7%), 0.059±0.002ms latency, Quality: good
  Final keys in database: 395517
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6393
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:40
      Valid to: 2026-06-09 02:48:40
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:39
      Valid to: 2026-06-09 02:48:39
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6393
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: Connection lost
    ⚠️ Command test failed for with certificates: Connection lost
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Valkey (TLS)...
  ERROR: Test failed for Valkey (TLS): read error on connection to 127.0.0.1:6393

Enhanced results saved:
  CSV: ./benchmarklogs-2t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-2t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-2t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-2t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 424.10 seconds
Total tests run: 4
Statistical iterations per test: 13
Results saved to ./benchmarklogs-2t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 2 | Iterations per test: 13
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey                  16687      445    2.7%  0.059ms 🟡good    16,440-16,934      ✅
#2  KeyDB                   14346      315    2.2%  0.069ms 🟡good    14,172-14,521      ✅
#3  Dragonfly               11693      216    1.8%  0.085ms 🟢excellent 11,574-11,813      ✅
#4  Redis                   11038      221    2.0%  0.090ms 🟡good    10,915-11,160      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 4/4
- 🏆 Best: Valkey - 16,687 ops/sec
- 📊 Average precision: 2.2% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1104/sec | Heavy pages:    221/sec
KeyDB                | Light pages:   1435/sec | Heavy pages:    287/sec
Dragonfly            | Light pages:   1169/sec | Heavy pages:    234/sec
Valkey               | Light pages:   1669/sec | Heavy pages:    334/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Valkey
- 📊 Estimated capacity: 556 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS PERFORMANCE COMPARISON
Thread Variant: 2
============================================================
No successful TLS connections for performance comparison.
All databases tested with non-TLS only.
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 2 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  🟢 Excellent :  1 tests (25.0%)
  🟡 Good      :  3 tests (75.0%)

Coefficient of Variation Analysis:
  Average CV: 2.2% (lower is better)
  Range: 1.8% - 2.7%
  📊 Good measurement consistency

Performance Analysis:
  Performance range: 11038 - 16687 ops/sec (51.2% spread)
  📈 Moderate performance differences between databases

Statistical Recommendations:
  ✅ High confidence in results - good statistical reliability
================================================================================

============================================================
TEST SUITE COMPLETED SUCCESSFULLY!
============================================================
Total execution time: 424.11 seconds
Statistical iterations per database: 13
Results saved to: ./benchmarklogs-2t

Generated files:
  JSON results: 2 files
  CSV exports: 1 files
  Markdown reports: 43 files
  📊 Raw data: Available

🎉 Enhanced benchmarking with statistical analysis complete!
📈 Results include confidence intervals and measurement quality indicators
📊 Use the enhanced chart generator to visualize statistical analysis

