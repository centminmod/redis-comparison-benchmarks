WordPress Object Cache Test with Predis - Configured Runner
============================================================
Implementation: Predis (Pure PHP Redis Client)
Enhanced TLS Support: Yes
Statistical Analysis: 13 iterations with confidence intervals

üìã Loading configuration from: tests/php/test_config_predis.php
‚úÖ Configuration loaded successfully

üìä Test Configuration:
  Implementation: Predis (Pure PHP)
  Duration per iteration: 30s
  Test iterations: 13
  Output directory: ./benchmarklogs-1t
  TLS testing: Enabled
  Flush before test: Yes
  Thread variant: 1
  Connection timeout: 5s
  Read/write timeout: 5s
  Connection retries: 3
  Persistent connections: No
  Thread configuration:
    redis_io_threads: 1 threads
    keydb_server_threads: 1 threads
    dragonfly_proactor_threads: 1 threads
    valkey_io_threads: 1 threads
  Database configurations:
    Redis: 127.0.0.1:6379 (TLS: 6390) (IO threads: 1)
    KeyDB: 127.0.0.1:6380 (TLS: 6391) (Server threads: 1)
    Dragonfly: 127.0.0.1:6381 (TLS: 6392) (Proactor threads: 1)
    Valkey: 127.0.0.1:6382 (TLS: 6393) (IO threads: 1)

======================================================================

üîç Checking Predis availability...
‚úÖ Predis library available

üöÄ Starting Predis WordPress Object Cache Test...

Starting WordPress Object Cache Test (Predis)...
Timestamp: 2025-06-09 14:44:44 UTC
Predis Version: unknown
PHP Version: 8.4.7
Enhanced Testing Configuration (Predis):
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
- Connection timeout: 5s
- Read/write timeout: 5s
- Connection retry attempts: 3
- Persistent connections: Disabled
- TCP keepalive: Enabled
Thread Variant: 1
Thread Configuration:
  redis_io_threads: 1 threads
  keydb_server_threads: 1 threads
  dragonfly_proactor_threads: 1 threads
  valkey_io_threads: 1 threads
TLS Certificates: Found and validated (Predis-compatible)

Checking TLS readiness (Predis)...
  Redis: TLS port accessible ‚úì
  KeyDB: TLS port accessible ‚úì
  Dragonfly: TLS port not accessible ‚úó
  Valkey: TLS port accessible ‚úì

Predis TLS testing will be attempted for: Redis, KeyDB, Valkey
============================================================
Testing Redis with Predis...
  Configuration: IO Threads: 1
  Running 13 iterations for Redis (non-TLS-Predis)...
  Initial keys in database: 395294
  Flushing database before test...
  Database flushed in 198.19ms. Keys remaining: 0
    Iteration 1/13... 13941 ops/sec, 0.071ms latency
    Iteration 2/13... 14732 ops/sec, 0.067ms latency
    Iteration 3/13... 15110 ops/sec, 0.066ms latency
    Iteration 4/13... 15144 ops/sec, 0.066ms latency
    Iteration 5/13... 15192 ops/sec, 0.065ms latency
    Iteration 6/13... 15271 ops/sec, 0.065ms latency
    Iteration 7/13... 15392 ops/sec, 0.064ms latency
    Iteration 8/13... 15250 ops/sec, 0.065ms latency
    Iteration 9/13... 15296 ops/sec, 0.065ms latency
    Iteration 10/13... 15158 ops/sec, 0.065ms latency
    Iteration 11/13... 15088 ops/sec, 0.066ms latency
    Iteration 12/13... 15067 ops/sec, 0.066ms latency
    Iteration 13/13... 15243 ops/sec, 0.065ms latency
  Redis (non-TLS-Predis): 15067.91¬±373.79 ops/sec (CV: 2.5%), 0.066¬±0.002ms latency, Quality: good
  Final keys in database: 61505
üîê Attempting TLS connection to Unknown at 127.0.0.1:6390 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Redis (TLS-Predis)...
  Initial keys in database: 394602
  Flushing database before test...
  Database flushed in 197.83ms. Keys remaining: 0
    Iteration 1/13... 9915 ops/sec, 0.100ms latency
    Iteration 2/13... 10617 ops/sec, 0.094ms latency
    Iteration 3/13... 10884 ops/sec, 0.091ms latency
    Iteration 4/13... 10867 ops/sec, 0.091ms latency
    Iteration 5/13... 11054 ops/sec, 0.090ms latency
    Iteration 6/13... 10882 ops/sec, 0.091ms latency
    Iteration 7/13... 10986 ops/sec, 0.090ms latency
    Iteration 8/13... 10910 ops/sec, 0.091ms latency
    Iteration 9/13... 10843 ops/sec, 0.092ms latency
    Iteration 10/13... 11076 ops/sec, 0.090ms latency
    Iteration 11/13... 10978 ops/sec, 0.091ms latency
    Iteration 12/13... 11039 ops/sec, 0.090ms latency
    Iteration 13/13... 11124 ops/sec, 0.089ms latency
  Redis (TLS-Predis): 10859.64¬±312.55 ops/sec (CV: 2.9%), 0.092¬±0.003ms latency, Quality: good
  Final keys in database: 61479

Testing KeyDB with Predis...
  Configuration: Server Threads: 1
  Running 13 iterations for KeyDB (non-TLS-Predis)...
  Initial keys in database: 394341
  Flushing database before test...
  Database flushed in 209.28ms. Keys remaining: 0
    Iteration 1/13... 11859 ops/sec, 0.084ms latency
    Iteration 2/13... 12668 ops/sec, 0.078ms latency
    Iteration 3/13... 12900 ops/sec, 0.077ms latency
    Iteration 4/13... 13061 ops/sec, 0.076ms latency
    Iteration 5/13... 13054 ops/sec, 0.076ms latency
    Iteration 6/13... 13074 ops/sec, 0.076ms latency
    Iteration 7/13... 13029 ops/sec, 0.076ms latency
    Iteration 8/13... 13076 ops/sec, 0.076ms latency
    Iteration 9/13... 13046 ops/sec, 0.076ms latency
    Iteration 10/13... 13044 ops/sec, 0.076ms latency
    Iteration 11/13... 13061 ops/sec, 0.076ms latency
    Iteration 12/13... 13032 ops/sec, 0.076ms latency
    Iteration 13/13... 13049 ops/sec, 0.076ms latency
  KeyDB (non-TLS-Predis): 12919.42¬±337.66 ops/sec (CV: 2.6%), 0.077¬±0.002ms latency, Quality: good
  Final keys in database: 61499
üîê Attempting TLS connection to Unknown at 127.0.0.1:6391 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for KeyDB (TLS-Predis)...
  Initial keys in database: 393612
  Flushing database before test...
  Database flushed in 189.44ms. Keys remaining: 0
    Iteration 1/13... 9004 ops/sec, 0.110ms latency
    Iteration 2/13... 9552 ops/sec, 0.104ms latency
    Iteration 3/13... 9705 ops/sec, 0.102ms latency
    Iteration 4/13... 9829 ops/sec, 0.101ms latency
    Iteration 5/13... 9942 ops/sec, 0.100ms latency
    Iteration 6/13... 9957 ops/sec, 0.100ms latency
    Iteration 7/13... 9994 ops/sec, 0.099ms latency
    Iteration 8/13... 10005 ops/sec, 0.099ms latency
    Iteration 9/13... 9957 ops/sec, 0.100ms latency
    Iteration 10/13... 10011 ops/sec, 0.099ms latency
    Iteration 11/13... 9945 ops/sec, 0.100ms latency
    Iteration 12/13... 9962 ops/sec, 0.100ms latency
    Iteration 13/13... 10021 ops/sec, 0.099ms latency
  KeyDB (TLS-Predis): 9837.40¬±285.21 ops/sec (CV: 2.9%), 0.101¬±0.003ms latency, Quality: good
  Final keys in database: 61458

Testing Dragonfly with Predis...
  Configuration: Proactor Threads: 1
  Running 13 iterations for Dragonfly (non-TLS-Predis)...
  Initial keys in database: 390073
  Flushing database before test...
  Database flushed in 19.97ms. Keys remaining: 0
    Iteration 1/13... 9698 ops/sec, 0.103ms latency
    Iteration 2/13... 10347 ops/sec, 0.096ms latency
    Iteration 3/13... 10534 ops/sec, 0.094ms latency
    Iteration 4/13... 10704 ops/sec, 0.093ms latency
    Iteration 5/13... 10698 ops/sec, 0.093ms latency
    Iteration 6/13... 10789 ops/sec, 0.092ms latency
    Iteration 7/13... 10745 ops/sec, 0.092ms latency
    Iteration 8/13... 10817 ops/sec, 0.092ms latency
    Iteration 9/13... 10957 ops/sec, 0.091ms latency
    Iteration 10/13... 10795 ops/sec, 0.092ms latency
    Iteration 11/13... 10849 ops/sec, 0.092ms latency
    Iteration 12/13... 10782 ops/sec, 0.092ms latency
    Iteration 13/13... 10847 ops/sec, 0.092ms latency
  Dragonfly (non-TLS-Predis): 10658.58¬±326.87 ops/sec (CV: 3.1%), 0.093¬±0.003ms latency, Quality: good
  Final keys in database: 61306
  Skipping TLS test for Dragonfly (port not accessible)

Testing Valkey with Predis...
  Configuration: IO Threads: 1
  Running 13 iterations for Valkey (non-TLS-Predis)...
  Initial keys in database: 391691
  Flushing database before test...
  Database flushed in 0.09ms. Keys remaining: 0
    Iteration 1/13... 13924 ops/sec, 0.071ms latency
    Iteration 2/13... 14718 ops/sec, 0.067ms latency
    Iteration 3/13... 15090 ops/sec, 0.066ms latency
    Iteration 4/13... 15291 ops/sec, 0.065ms latency
    Iteration 5/13... 15161 ops/sec, 0.065ms latency
    Iteration 6/13... 15219 ops/sec, 0.065ms latency
    Iteration 7/13... 15321 ops/sec, 0.065ms latency
    Iteration 8/13... 15274 ops/sec, 0.065ms latency
    Iteration 9/13... 15281 ops/sec, 0.065ms latency
    Iteration 10/13... 15121 ops/sec, 0.066ms latency
    Iteration 11/13... 15259 ops/sec, 0.065ms latency
    Iteration 12/13... 15096 ops/sec, 0.066ms latency
    Iteration 13/13... 15366 ops/sec, 0.065ms latency
  Valkey (non-TLS-Predis): 15086.17¬±386.17 ops/sec (CV: 2.6%), 0.066¬±0.002ms latency, Quality: good
  Final keys in database: 61507
üîê Attempting TLS connection to Unknown at 127.0.0.1:6393 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Valkey (TLS-Predis)...
  Initial keys in database: 390759
  Flushing database before test...
  Database flushed in 0.14ms. Keys remaining: 0
    Iteration 1/13... 9801 ops/sec, 0.101ms latency
    Iteration 2/13... 10593 ops/sec, 0.094ms latency
    Iteration 3/13... 10904 ops/sec, 0.091ms latency
    Iteration 4/13... 10974 ops/sec, 0.091ms latency
    Iteration 5/13... 10867 ops/sec, 0.091ms latency
    Iteration 6/13... 11150 ops/sec, 0.089ms latency
    Iteration 7/13... 10972 ops/sec, 0.091ms latency
    Iteration 8/13... 11002 ops/sec, 0.090ms latency
    Iteration 9/13... 10968 ops/sec, 0.091ms latency
    Iteration 10/13... 10869 ops/sec, 0.091ms latency
    Iteration 11/13... 10982 ops/sec, 0.090ms latency
    Iteration 12/13... 10821 ops/sec, 0.092ms latency
    Iteration 13/13... 11043 ops/sec, 0.090ms latency
  Valkey (TLS-Predis): 10841.91¬±339.48 ops/sec (CV: 3.1%), 0.092¬±0.003ms latency, Quality: good
  Final keys in database: 61471

Enhanced Predis results saved:
  CSV: ./benchmarklogs-1t/wordpress_object_cache_test_predis_predis.csv
  JSON: ./benchmarklogs-1t/wordpress_object_cache_test_predis_predis.json
  Markdown: ./benchmarklogs-1t/wordpress_object_cache_test_predis_predis.md
  Raw Data: ./benchmarklogs-1t/wordpress_object_cache_test_predis_predis_raw.json
============================================================
Enhanced Predis test suite completed!
Total execution time: 2,779.76 seconds
Total tests run: 7
Statistical iterations per test: 13
Results saved to ./benchmarklogs-1t/
Redis implementation: Predis (pure PHP)

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY (Predis)
Thread Variant: 1 | Iterations per test: 13
====================================================================================================
Rank Database                       Ops/sec   ¬±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey (Predis)              15086      386    2.6%  0.066ms üü°good    14,872-15,300      ‚úÖ
#2  Redis (Predis)               15068      374    2.5%  0.066ms üü°good    14,861-15,275      ‚úÖ
#3  KeyDB (Predis)               12919      338    2.6%  0.077ms üü°good    12,732-13,107      ‚úÖ
#4  Redis (TLS-Predis)           10860      313    2.9%  0.092ms üü°good    10,686-11,033      ‚úÖ
#5  Valkey (TLS-Predis)          10842      339    3.1%  0.092ms üü°good    10,654-11,030      ‚úÖ
#6  Dragonfly (Predis)           10659      327    3.1%  0.093ms üü°good    10,477-10,840      ‚úÖ
#7  KeyDB (TLS-Predis)            9837      285    2.9%  0.101ms üü°good     9,679-9,996      ‚úÖ
====================================================================================================
Implementation: Predis (Pure PHP Redis Client)
üìà Compare with phpredis results to see implementation trade-offs

============================================================
TLS vs NON-TLS PERFORMANCE COMPARISON (Predis)
Thread Variant: 1
============================================================
Redis      | Non-TLS:    15068¬±374  | TLS:    10860¬±313  | Impact: +27.9% *
KeyDB      | Non-TLS:    12919¬±338  | TLS:     9837¬±285  | Impact: +23.9% *
Dragonfly  | Non-TLS:    10659¬±327  | TLS:   FAILED | Impact: N/A
Valkey     | Non-TLS:    15086¬±386  | TLS:    10842¬±339  | Impact: +28.1% *
------------------------------------------------------------
* = Statistically significant difference (95% confidence)
Implementation: Predis (Pure PHP)
============================================================

================================================================================
STATISTICAL INSIGHTS (Predis)
Thread Variant: 1 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  üü° Good      :  7 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 2.8% (lower is better)
  Range: 2.5% - 3.1%
  üìä Good measurement consistency with Predis

Predis Implementation Notes:
  üì° Connection management: Automatic (no manual close required)
  üîí TLS handling: Enhanced SSL context support
  üîÑ Error recovery: Built-in retry logic with exponential backoff
  üìä Performance characteristics: Pure PHP (higher latency, more consistent)
================================================================================

================================================================================
PREDIS-SPECIFIC INSIGHTS
Thread Variant: 1 | Implementation: Predis (Pure PHP)
================================================================================
TLS Connection Reliability:
  ‚úÖ Predis TLS connections: 3/4 databases
  üìä All TLS connections established successfully
  üîí SSL context handling: Reliable (Predis manages SSL internally)

Predis Configuration Analysis:
  üîó Connection timeout: 5s
  üì° Read/write timeout: 5s
  üîÑ Connection retry attempts: 3
  ‚ö° TCP keepalive: Enabled
  üîó Persistent connections: Disabled

Performance Characteristics:
  üìà Average non-TLS performance: 13,433 ops/sec
  üîí Average TLS performance: 10,513 ops/sec
  üìä TLS overhead: 21.7%
  ‚ÑπÔ∏è  Note: 25-40% TLS overhead is normal for Redis over SSL

Predis Advantages:
  ‚úÖ Better TLS reliability compared to phpredis extension
  ‚úÖ Enhanced SSL context handling
  ‚úÖ No extension compilation dependencies
  ‚úÖ Consistent behavior across PHP versions
  ‚ö†Ô∏è  Trade-off: Lower raw performance due to pure PHP implementation
================================================================================

======================================================================
‚úÖ Predis WordPress Object Cache test completed successfully!
üìÅ Results saved to: ./benchmarklogs-1t
üìä Implementation: Predis (Pure PHP Redis Client)
üîí TLS Support: Enhanced reliability compared to phpredis

üìÑ Generated files:
  php_wordpress_test_phpredis.log (29KB)
  php_wordpress_test_predis.log (15.4KB)
  wordpress_object_cache_test_predis_predis.csv (1.6KB)
  wordpress_object_cache_test_predis_predis.json (87.4KB)
  wordpress_object_cache_test_predis_predis.md (2.6KB)
  wordpress_object_cache_test_predis_predis_raw.json (76.4KB)
