Loaded configuration from test_config.php
Configuration: {
    "duration": 30,
    "implementation": "phpredis",
    "test_iterations": 13,
    "iteration_pause_ms": 500,
    "save_raw_results": true,
    "output_dir": ".\/benchmarklogs-1t",
    "test_tls": true,
    "flush_before_test": true,
    "debug": false,
    "thread_variant": "1",
    "thread_config": {
        "redis_io_threads": 1,
        "keydb_server_threads": 1,
        "dragonfly_proactor_threads": 1,
        "valkey_io_threads": 1
    },
    "databases": {
        "Redis": {
            "host": "127.0.0.1",
            "port": 6379,
            "tls_port": 6390,
            "io_threads": 1
        },
        "KeyDB": {
            "host": "127.0.0.1",
            "port": 6380,
            "tls_port": 6391,
            "server_threads": 1
        },
        "Dragonfly": {
            "host": "127.0.0.1",
            "port": 6381,
            "tls_port": 6392,
            "proactor_threads": 1
        },
        "Valkey": {
            "host": "127.0.0.1",
            "port": 6382,
            "tls_port": 6393,
            "io_threads": 1
        }
    }
}

Starting WordPress Object Cache Test...
Timestamp: 2025-06-09 03:13:52 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 1
Thread Configuration:
  redis_io_threads: 1 threads
  keydb_server_threads: 1 threads
  dragonfly_proactor_threads: 1 threads
  valkey_io_threads: 1 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 1
  Running 13 iterations for Redis (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.26ms. Keys remaining: 0
    Iteration 1/13... 15639 ops/sec, 0.063ms latency
    Iteration 2/13... 15798 ops/sec, 0.063ms latency
    Iteration 3/13... 15855 ops/sec, 0.062ms latency
    Iteration 4/13... 15709 ops/sec, 0.063ms latency
    Iteration 5/13... 16439 ops/sec, 0.060ms latency
    Iteration 6/13... 16109 ops/sec, 0.061ms latency
    Iteration 7/13... 16480 ops/sec, 0.060ms latency
    Iteration 8/13... 16399 ops/sec, 0.060ms latency
    Iteration 9/13... 16729 ops/sec, 0.059ms latency
    Iteration 10/13... 16728 ops/sec, 0.059ms latency
    Iteration 11/13... 16663 ops/sec, 0.059ms latency
    Iteration 12/13... 17019 ops/sec, 0.058ms latency
    Iteration 13/13... 17050 ops/sec, 0.058ms latency
  Redis (non-TLS): 16355.25±489.38 ops/sec (CV: 3.0%), 0.061±0.002ms latency, Quality: good
  Final keys in database: 394892
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6390
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:11
      Valid to: 2026-06-09 02:49:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:10
      Valid to: 2026-06-09 02:49:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6390
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Redis (TLS)...
  ERROR: Test failed for Redis (TLS): read error on connection to 127.0.0.1:6390

Testing KeyDB...
  Configuration: Server Threads: 1
  Running 13 iterations for KeyDB (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.11ms. Keys remaining: 0
    Iteration 1/13... 13445 ops/sec, 0.074ms latency
    Iteration 2/13... 13552 ops/sec, 0.073ms latency
    Iteration 3/13... 13697 ops/sec, 0.072ms latency
    Iteration 4/13... 13682 ops/sec, 0.072ms latency
    Iteration 5/13... 13821 ops/sec, 0.072ms latency
    Iteration 6/13... 13677 ops/sec, 0.072ms latency
    Iteration 7/13... 13903 ops/sec, 0.071ms latency
    Iteration 8/13... 13827 ops/sec, 0.072ms latency
    Iteration 9/13... 14099 ops/sec, 0.070ms latency
    Iteration 10/13... 14217 ops/sec, 0.070ms latency
    Iteration 11/13... 14101 ops/sec, 0.070ms latency
    Iteration 12/13... 14234 ops/sec, 0.070ms latency
    Iteration 13/13... 14390 ops/sec, 0.069ms latency
  KeyDB (non-TLS): 13895.66±290.04 ops/sec (CV: 2.1%), 0.071±0.002ms latency, Quality: good
  Final keys in database: 395348
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6391
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:11
      Valid to: 2026-06-09 02:49:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:10
      Valid to: 2026-06-09 02:49:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6391
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for KeyDB (TLS)...
  ERROR: Test failed for KeyDB (TLS): read error on connection to 127.0.0.1:6391

Testing Dragonfly...
  Configuration: Proactor Threads: 1
  Running 13 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.50ms. Keys remaining: 0
    Iteration 1/13... 10919 ops/sec, 0.091ms latency
    Iteration 2/13... 10978 ops/sec, 0.090ms latency
    Iteration 3/13... 11280 ops/sec, 0.088ms latency
    Iteration 4/13... 11363 ops/sec, 0.087ms latency
    Iteration 5/13... 11314 ops/sec, 0.088ms latency
    Iteration 6/13... 11441 ops/sec, 0.087ms latency
    Iteration 7/13... 11390 ops/sec, 0.087ms latency
    Iteration 8/13... 11407 ops/sec, 0.087ms latency
    Iteration 9/13... 11511 ops/sec, 0.086ms latency
    Iteration 10/13... 11292 ops/sec, 0.088ms latency
    Iteration 11/13... 11648 ops/sec, 0.085ms latency
    Iteration 12/13... 11948 ops/sec, 0.083ms latency
    Iteration 13/13... 11800 ops/sec, 0.084ms latency
  Dragonfly (non-TLS): 11406.89±285.73 ops/sec (CV: 2.5%), 0.087±0.002ms latency, Quality: good
  Final keys in database: 395738
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6392
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:11
      Valid to: 2026-06-09 02:49:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:10
      Valid to: 2026-06-09 02:49:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6392
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684652a3369e9...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for minimal SSL: read error on connection to 127.0.0.1:6392
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684652a336e13...
      ✅ SET successful: false
      📖 Testing GET...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for with certificates: read error on connection to 127.0.0.1:6392
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684652a337197...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for full SSL context: read error on connection to 127.0.0.1:6392
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684652a337365...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for TLSv1.2: read error on connection to 127.0.0.1:6392
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Dragonfly (TLS)...
  Initial keys in database: 
  Flushing database before test...
  ERROR: Test failed for Dragonfly (TLS): read error on connection to 127.0.0.1:6392

Testing Valkey...
  Configuration: IO Threads: 1
  Running 13 iterations for Valkey (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.08ms. Keys remaining: 0
    Iteration 1/13... 15761 ops/sec, 0.063ms latency
    Iteration 2/13... 15904 ops/sec, 0.062ms latency
    Iteration 3/13... 15897 ops/sec, 0.062ms latency
    Iteration 4/13... 16298 ops/sec, 0.061ms latency
    Iteration 5/13... 15929 ops/sec, 0.062ms latency
    Iteration 6/13... 16157 ops/sec, 0.061ms latency
    Iteration 7/13... 16142 ops/sec, 0.061ms latency
    Iteration 8/13... 16479 ops/sec, 0.060ms latency
    Iteration 9/13... 16940 ops/sec, 0.058ms latency
    Iteration 10/13... 16763 ops/sec, 0.059ms latency
    Iteration 11/13... 16556 ops/sec, 0.060ms latency
    Iteration 12/13... 16515 ops/sec, 0.060ms latency
    Iteration 13/13... 16674 ops/sec, 0.059ms latency
  Valkey (non-TLS): 16308.79±376.28 ops/sec (CV: 2.3%), 0.061±0.001ms latency, Quality: good
  Final keys in database: 395809
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6393
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:11
      Valid to: 2026-06-09 02:49:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:10
      Valid to: 2026-06-09 02:49:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6393
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Valkey (TLS)...
  ERROR: Test failed for Valkey (TLS): read error on connection to 127.0.0.1:6393

Enhanced results saved:
  CSV: ./benchmarklogs-1t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-1t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-1t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-1t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 393.00 seconds
Total tests run: 4
Statistical iterations per test: 13
Results saved to ./benchmarklogs-1t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 1 | Iterations per test: 13
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Redis                   16355      489    3.0%  0.061ms 🟡good    16,084-16,627      ✅
#2  Valkey                  16309      376    2.3%  0.061ms 🟡good    16,100-16,518      ✅
#3  KeyDB                   13896      290    2.1%  0.071ms 🟡good    13,735-14,057      ✅
#4  Dragonfly               11407      286    2.5%  0.087ms 🟡good    11,248-11,565      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 4/4
- 🏆 Best: Redis - 16,355 ops/sec
- 📊 Average precision: 2.5% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1636/sec | Heavy pages:    327/sec
KeyDB                | Light pages:   1390/sec | Heavy pages:    278/sec
Dragonfly            | Light pages:   1141/sec | Heavy pages:    228/sec
Valkey               | Light pages:   1631/sec | Heavy pages:    326/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Redis
- 📊 Estimated capacity: 545 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS PERFORMANCE COMPARISON
Thread Variant: 1
============================================================
No successful TLS connections for performance comparison.
All databases tested with non-TLS only.
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 1 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  🟡 Good      :  4 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 2.5% (lower is better)
  Range: 2.1% - 3.0%
  📊 Good measurement consistency

Performance Analysis:
  Performance range: 11407 - 16355 ops/sec (43.4% spread)
  📈 Relatively similar performance across databases

Statistical Recommendations:
  ✅ High confidence in results - good statistical reliability
================================================================================
Enhanced WordPress Object Cache Test - Statistical Analysis
=========================================================

Checking system requirements...
✅ PHP version: 8.4.7
✅ Redis extension version: 6.2.0
✅ All system requirements met

Loading configuration from test_config.php...
✅ Configuration loaded successfully from file

============================================================
ENHANCED WORDPRESS OBJECT CACHE TEST CONFIGURATION
============================================================
Test Parameters:
  Duration per iteration: 30 seconds
  Test iterations: 13
  Iteration pause: 500ms
  Operations per iteration: 100,000
  Read/Write ratio: 70% / 30%

Statistical Analysis:
  Multi-run testing: Enabled
  Raw data logging: Enabled
  Quality assessment: Enabled (CV-based)
  Confidence intervals: 95%

Thread Configuration:
  Thread variant: 1
  redis_io_threads: 1 threads
  keydb_server_threads: 1 threads
  dragonfly_proactor_threads: 1 threads
  valkey_io_threads: 1 threads

Database Configuration:
  Redis: 127.0.0.1:6379 (TLS: 6390) [IO: 1]
  KeyDB: 127.0.0.1:6380 (TLS: 6391) [Server: 1]
  Dragonfly: 127.0.0.1:6381 (TLS: 6392) [Proactor: 1]
  Valkey: 127.0.0.1:6382 (TLS: 6393) [IO: 1]

Test Environment:
  PHP version: 8.4.7
  Redis extension: Loaded
  Redis extension version: 6.2.0
  Output directory: ./benchmarklogs-1t
  TLS testing: Enabled
  Database flush: Enabled
  Debug mode: Disabled
============================================================

Initializing WordPress Object Cache Test...

Starting WordPress Object Cache Test...
Timestamp: 2025-06-09 03:20:25 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 1
Thread Configuration:
  redis_io_threads: 1 threads
  keydb_server_threads: 1 threads
  dragonfly_proactor_threads: 1 threads
  valkey_io_threads: 1 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 1
  Running 13 iterations for Redis (non-TLS)...
  Initial keys in database: 394891
  Flushing database before test...
  Database flushed in 211.61ms. Keys remaining: 0
    Iteration 1/13... 15893 ops/sec, 0.062ms latency
    Iteration 2/13... 16252 ops/sec, 0.061ms latency
    Iteration 3/13... 15886 ops/sec, 0.062ms latency
    Iteration 4/13... 15910 ops/sec, 0.062ms latency
    Iteration 5/13... 16393 ops/sec, 0.060ms latency
    Iteration 6/13... 16640 ops/sec, 0.060ms latency
    Iteration 7/13... 17001 ops/sec, 0.058ms latency
    Iteration 8/13... 16393 ops/sec, 0.060ms latency
    Iteration 9/13... 16564 ops/sec, 0.060ms latency
    Iteration 10/13... 16731 ops/sec, 0.059ms latency
    Iteration 11/13... 17134 ops/sec, 0.058ms latency
    Iteration 12/13... 17096 ops/sec, 0.058ms latency
    Iteration 13/13... 17420 ops/sec, 0.057ms latency
  Redis (non-TLS): 16562.55±504.94 ops/sec (CV: 3.0%), 0.060±0.002ms latency, Quality: good
  Final keys in database: 394488
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6390
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:11
      Valid to: 2026-06-09 02:49:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:10
      Valid to: 2026-06-09 02:49:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6390
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Redis (TLS)...
  ERROR: Test failed for Redis (TLS): read error on connection to 127.0.0.1:6390

Testing KeyDB...
  Configuration: Server Threads: 1
  Running 13 iterations for KeyDB (non-TLS)...
  Initial keys in database: 395346
  Flushing database before test...
  Database flushed in 226.19ms. Keys remaining: 0
    Iteration 1/13... 13526 ops/sec, 0.073ms latency
    Iteration 2/13... 13603 ops/sec, 0.073ms latency
    Iteration 3/13... 13450 ops/sec, 0.074ms latency
    Iteration 4/13... 13547 ops/sec, 0.073ms latency
    Iteration 5/13... 13868 ops/sec, 0.071ms latency
    Iteration 6/13... 13831 ops/sec, 0.072ms latency
    Iteration 7/13... 13921 ops/sec, 0.071ms latency
    Iteration 8/13... 13827 ops/sec, 0.072ms latency
    Iteration 9/13... 13981 ops/sec, 0.071ms latency
    Iteration 10/13... 14222 ops/sec, 0.070ms latency
    Iteration 11/13... 14361 ops/sec, 0.069ms latency
    Iteration 12/13... 14188 ops/sec, 0.070ms latency
    Iteration 13/13... 14325 ops/sec, 0.069ms latency
  KeyDB (non-TLS): 13896.19±309.88 ops/sec (CV: 2.2%), 0.071±0.002ms latency, Quality: good
  Final keys in database: 395293
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6391
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:11
      Valid to: 2026-06-09 02:49:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:10
      Valid to: 2026-06-09 02:49:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6391
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for KeyDB (TLS)...
  ERROR: Test failed for KeyDB (TLS): read error on connection to 127.0.0.1:6391

Testing Dragonfly...
  Configuration: Proactor Threads: 1
  Running 13 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 395717
  Flushing database before test...
  Database flushed in 20.97ms. Keys remaining: 0
    Iteration 1/13... 11495 ops/sec, 0.086ms latency
    Iteration 2/13... 11551 ops/sec, 0.086ms latency
    Iteration 3/13... 11634 ops/sec, 0.085ms latency
    Iteration 4/13... 11488 ops/sec, 0.086ms latency
    Iteration 5/13... 11629 ops/sec, 0.085ms latency
    Iteration 6/13... 11740 ops/sec, 0.085ms latency
    Iteration 7/13... 11743 ops/sec, 0.084ms latency
    Iteration 8/13... 11747 ops/sec, 0.084ms latency
    Iteration 9/13... 11844 ops/sec, 0.084ms latency
    Iteration 10/13... 11716 ops/sec, 0.085ms latency
    Iteration 11/13... 11974 ops/sec, 0.083ms latency
    Iteration 12/13... 12119 ops/sec, 0.082ms latency
    Iteration 13/13... 11919 ops/sec, 0.083ms latency
  Dragonfly (non-TLS): 11738.44±188.15 ops/sec (CV: 1.6%), 0.085±0.001ms latency, Quality: excellent
  Final keys in database: 394866
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6392
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:11
      Valid to: 2026-06-09 02:49:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:10
      Valid to: 2026-06-09 02:49:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6392
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684654286c8c5...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for minimal SSL: read error on connection to 127.0.0.1:6392
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684654286cbba...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for with certificates: read error on connection to 127.0.0.1:6392
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684654286cda3...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for full SSL context: read error on connection to 127.0.0.1:6392
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684654286cf5e...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for TLSv1.2: read error on connection to 127.0.0.1:6392
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Dragonfly (TLS)...
  Initial keys in database: 
  Flushing database before test...
  ERROR: Test failed for Dragonfly (TLS): read error on connection to 127.0.0.1:6392

Testing Valkey...
  Configuration: IO Threads: 1
  Running 13 iterations for Valkey (non-TLS)...
  Initial keys in database: 395805
  Flushing database before test...
  Database flushed in 0.10ms. Keys remaining: 0
    Iteration 1/13... 15819 ops/sec, 0.063ms latency
    Iteration 2/13... 16304 ops/sec, 0.061ms latency
    Iteration 3/13... 15820 ops/sec, 0.063ms latency
    Iteration 4/13... 16079 ops/sec, 0.062ms latency
    Iteration 5/13... 15952 ops/sec, 0.062ms latency
    Iteration 6/13... 16455 ops/sec, 0.060ms latency
    Iteration 7/13... 16162 ops/sec, 0.061ms latency
    Iteration 8/13... 16550 ops/sec, 0.060ms latency
    Iteration 9/13... 16580 ops/sec, 0.060ms latency
    Iteration 10/13... 16506 ops/sec, 0.060ms latency
    Iteration 11/13... 16481 ops/sec, 0.060ms latency
    Iteration 12/13... 16472 ops/sec, 0.060ms latency
    Iteration 13/13... 16443 ops/sec, 0.060ms latency
  Valkey (non-TLS): 16278.71±279.02 ops/sec (CV: 1.7%), 0.061±0.001ms latency, Quality: excellent
  Final keys in database: 395441
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6393
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:11
      Valid to: 2026-06-09 02:49:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:49:10
      Valid to: 2026-06-09 02:49:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6393
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Valkey (TLS)...
  ERROR: Test failed for Valkey (TLS): read error on connection to 127.0.0.1:6393

Enhanced results saved:
  CSV: ./benchmarklogs-1t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-1t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-1t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-1t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 389.34 seconds
Total tests run: 4
Statistical iterations per test: 13
Results saved to ./benchmarklogs-1t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 1 | Iterations per test: 13
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Redis                   16563      505    3.0%  0.060ms 🟡good    16,282-16,843      ✅
#2  Valkey                  16279      279    1.7%  0.061ms 🟢excellent 16,124-16,433      ✅
#3  KeyDB                   13896      310    2.2%  0.071ms 🟡good    13,724-14,068      ✅
#4  Dragonfly               11738      188    1.6%  0.085ms 🟢excellent 11,634-11,843      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 4/4
- 🏆 Best: Redis - 16,563 ops/sec
- 📊 Average precision: 2.1% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1656/sec | Heavy pages:    331/sec
KeyDB                | Light pages:   1390/sec | Heavy pages:    278/sec
Dragonfly            | Light pages:   1174/sec | Heavy pages:    235/sec
Valkey               | Light pages:   1628/sec | Heavy pages:    326/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Redis
- 📊 Estimated capacity: 552 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS PERFORMANCE COMPARISON
Thread Variant: 1
============================================================
No successful TLS connections for performance comparison.
All databases tested with non-TLS only.
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 1 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  🟢 Excellent :  2 tests (50.0%)
  🟡 Good      :  2 tests (50.0%)

Coefficient of Variation Analysis:
  Average CV: 2.1% (lower is better)
  Range: 1.6% - 3.0%
  📊 Good measurement consistency

Performance Analysis:
  Performance range: 11738 - 16563 ops/sec (41.1% spread)
  📈 Relatively similar performance across databases

Statistical Recommendations:
  ✅ High confidence in results - good statistical reliability
================================================================================

============================================================
TEST SUITE COMPLETED SUCCESSFULLY!
============================================================
Total execution time: 389.35 seconds
Statistical iterations per database: 13
Results saved to: ./benchmarklogs-1t

Generated files:
  JSON results: 2 files
  CSV exports: 1 files
  Markdown reports: 43 files
  📊 Raw data: Available

🎉 Enhanced benchmarking with statistical analysis complete!
📈 Results include confidence intervals and measurement quality indicators
📊 Use the enhanced chart generator to visualize statistical analysis

