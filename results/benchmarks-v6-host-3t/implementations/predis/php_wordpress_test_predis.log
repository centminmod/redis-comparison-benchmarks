WordPress Object Cache Test with Predis - Configured Runner
============================================================
Implementation: Predis (Pure PHP Redis Client)
Enhanced TLS Support: Yes
Statistical Analysis: 13 iterations with confidence intervals

üìã Loading configuration from: tests/php/test_config_predis.php
‚úÖ Configuration loaded successfully

üìä Test Configuration:
  Implementation: Predis (Pure PHP)
  Duration per iteration: 30s
  Test iterations: 13
  Output directory: ./benchmarklogs-3t
  TLS testing: Enabled
  Flush before test: Yes
  Thread variant: 3
  Connection timeout: 5s
  Read/write timeout: 5s
  Connection retries: 3
  Persistent connections: No
  Thread configuration:
    redis_io_threads: 3 threads
    keydb_server_threads: 3 threads
    dragonfly_proactor_threads: 3 threads
    valkey_io_threads: 3 threads
  Database configurations:
    Redis: 127.0.0.1:6379 (TLS: 6390) (IO threads: 3)
    KeyDB: 127.0.0.1:6380 (TLS: 6391) (Server threads: 3)
    Dragonfly: 127.0.0.1:6381 (TLS: 6392) (Proactor threads: 3)
    Valkey: 127.0.0.1:6382 (TLS: 6393) (IO threads: 3)

======================================================================

üîç Checking Predis availability...
‚úÖ Predis library available

üöÄ Starting Predis WordPress Object Cache Test...

Starting WordPress Object Cache Test (Predis)...
Timestamp: 2025-06-10 06:46:03 UTC
Predis Version: unknown
PHP Version: 8.4.8
Enhanced Testing Configuration (Predis):
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
- Connection timeout: 5s
- Read/write timeout: 5s
- Connection retry attempts: 3
- Persistent connections: Disabled
- TCP keepalive: Enabled
Thread Variant: 3
Thread Configuration:
  redis_io_threads: 3 threads
  keydb_server_threads: 3 threads
  dragonfly_proactor_threads: 3 threads
  valkey_io_threads: 3 threads
TLS Certificates: Found and validated (Predis-compatible)

Checking TLS readiness (Predis)...
  Redis: TLS port accessible ‚úì
  KeyDB: TLS port accessible ‚úì
  Dragonfly: TLS port accessible ‚úì
  Valkey: TLS port accessible ‚úì

Predis TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis with Predis...
  Configuration: IO Threads: 3
  Running 13 iterations for Redis (non-TLS-Predis)...
  Initial keys in database: 394452
  Flushing database before test...
  Database flushed in 205.87ms. Keys remaining: 0
    Iteration 1/13... 9445 ops/sec, 0.105ms latency
    Iteration 2/13... 9995 ops/sec, 0.100ms latency
    Iteration 3/13... 10186 ops/sec, 0.098ms latency
    Iteration 4/13... 10384 ops/sec, 0.096ms latency
    Iteration 5/13... 10402 ops/sec, 0.096ms latency
    Iteration 6/13... 10391 ops/sec, 0.096ms latency
    Iteration 7/13... 10404 ops/sec, 0.096ms latency
    Iteration 8/13... 10438 ops/sec, 0.095ms latency
    Iteration 9/13... 10427 ops/sec, 0.095ms latency
    Iteration 10/13... 10395 ops/sec, 0.096ms latency
    Iteration 11/13... 10371 ops/sec, 0.096ms latency
    Iteration 12/13... 10375 ops/sec, 0.096ms latency
    Iteration 13/13... 10373 ops/sec, 0.096ms latency
  Redis (non-TLS-Predis): 10275.91¬±277.88 ops/sec (CV: 2.7%), 0.097¬±0.003ms latency, Quality: good
  Final keys in database: 61467
üîê Attempting TLS connection to Redis at 127.0.0.1:6390 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Redis (TLS-Predis)...
  Initial keys in database: 394405
  Flushing database before test...
  Database flushed in 207.55ms. Keys remaining: 0
    Iteration 1/13... 7210 ops/sec, 0.138ms latency
    Iteration 2/13... 7691 ops/sec, 0.129ms latency
    Iteration 3/13... 7846 ops/sec, 0.127ms latency
    Iteration 4/13... 7907 ops/sec, 0.126ms latency
    Iteration 5/13... 7919 ops/sec, 0.126ms latency
    Iteration 6/13... 7962 ops/sec, 0.125ms latency
    Iteration 7/13... 8036 ops/sec, 0.124ms latency
    Iteration 8/13... 8032 ops/sec, 0.124ms latency
    Iteration 9/13... 7976 ops/sec, 0.125ms latency
    Iteration 10/13... 7978 ops/sec, 0.125ms latency
    Iteration 11/13... 7968 ops/sec, 0.125ms latency
    Iteration 12/13... 7978 ops/sec, 0.125ms latency
    Iteration 13/13... 8076 ops/sec, 0.123ms latency
  Redis (TLS-Predis): 7890.71¬±226.42 ops/sec (CV: 2.9%), 0.126¬±0.004ms latency, Quality: good
  Final keys in database: 61401

Testing KeyDB with Predis...
  Configuration: Server Threads: 3
  Running 13 iterations for KeyDB (non-TLS-Predis)...
  Initial keys in database: 394732
  Flushing database before test...
  Database flushed in 205.35ms. Keys remaining: 0
    Iteration 1/13... 11495 ops/sec, 0.086ms latency
    Iteration 2/13... 12275 ops/sec, 0.081ms latency
    Iteration 3/13... 12463 ops/sec, 0.080ms latency
    Iteration 4/13... 12626 ops/sec, 0.079ms latency
    Iteration 5/13... 12640 ops/sec, 0.079ms latency
    Iteration 6/13... 12677 ops/sec, 0.078ms latency
    Iteration 7/13... 12687 ops/sec, 0.078ms latency
    Iteration 8/13... 12768 ops/sec, 0.078ms latency
    Iteration 9/13... 12675 ops/sec, 0.078ms latency
    Iteration 10/13... 12767 ops/sec, 0.078ms latency
    Iteration 11/13... 12771 ops/sec, 0.078ms latency
    Iteration 12/13... 12622 ops/sec, 0.079ms latency
    Iteration 13/13... 12664 ops/sec, 0.078ms latency
  KeyDB (non-TLS-Predis): 12548.36¬±344.24 ops/sec (CV: 2.7%), 0.079¬±0.002ms latency, Quality: good
  Final keys in database: 61491
üîê Attempting TLS connection to KeyDB at 127.0.0.1:6391 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for KeyDB (TLS-Predis)...
  Initial keys in database: 393297
  Flushing database before test...
  Database flushed in 227.63ms. Keys remaining: 0
    Iteration 1/13... 8659 ops/sec, 0.115ms latency
    Iteration 2/13... 9295 ops/sec, 0.107ms latency
    Iteration 3/13... 9464 ops/sec, 0.105ms latency
    Iteration 4/13... 9562 ops/sec, 0.104ms latency
    Iteration 5/13... 9647 ops/sec, 0.103ms latency
    Iteration 6/13... 9716 ops/sec, 0.102ms latency
    Iteration 7/13... 9713 ops/sec, 0.102ms latency
    Iteration 8/13... 9771 ops/sec, 0.102ms latency
    Iteration 9/13... 9752 ops/sec, 0.102ms latency
    Iteration 10/13... 9770 ops/sec, 0.102ms latency
    Iteration 11/13... 9764 ops/sec, 0.102ms latency
    Iteration 12/13... 9778 ops/sec, 0.102ms latency
    Iteration 13/13... 9771 ops/sec, 0.102ms latency
  KeyDB (TLS-Predis): 9589.38¬±315.38 ops/sec (CV: 3.3%), 0.104¬±0.004ms latency, Quality: good
  Final keys in database: 61454

Testing Dragonfly with Predis...
  Configuration: Proactor Threads: 3
  Running 13 iterations for Dragonfly (non-TLS-Predis)...
  Initial keys in database: 389388
  Flushing database before test...
  Database flushed in 19.87ms. Keys remaining: 0
    Iteration 1/13... 10078 ops/sec, 0.099ms latency
    Iteration 2/13... 10678 ops/sec, 0.093ms latency
    Iteration 3/13... 11060 ops/sec, 0.090ms latency
    Iteration 4/13... 11121 ops/sec, 0.089ms latency
    Iteration 5/13... 11005 ops/sec, 0.090ms latency
    Iteration 6/13... 11122 ops/sec, 0.089ms latency
    Iteration 7/13... 11149 ops/sec, 0.089ms latency
    Iteration 8/13... 11290 ops/sec, 0.088ms latency
    Iteration 9/13... 11397 ops/sec, 0.087ms latency
    Iteration 10/13... 11149 ops/sec, 0.089ms latency
    Iteration 11/13... 11189 ops/sec, 0.089ms latency
    Iteration 12/13... 11282 ops/sec, 0.088ms latency
    Iteration 13/13... 11320 ops/sec, 0.088ms latency
  Dragonfly (non-TLS-Predis): 11064.64¬±346.18 ops/sec (CV: 3.1%), 0.090¬±0.003ms latency, Quality: good
  Final keys in database: 61321
üîê Attempting TLS connection to Dragonfly at 127.0.0.1:6392 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üîê Adding Dragonfly authentication to connection parameters...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Dragonfly (TLS-Predis)...
  Initial keys in database: 388434
  Flushing database before test...
  Database flushed in 19.94ms. Keys remaining: 0
    Iteration 1/13... 7407 ops/sec, 0.134ms latency
    Iteration 2/13... 7844 ops/sec, 0.127ms latency
    Iteration 3/13... 8044 ops/sec, 0.124ms latency
    Iteration 4/13... 8136 ops/sec, 0.122ms latency
    Iteration 5/13... 8243 ops/sec, 0.121ms latency
    Iteration 6/13... 8265 ops/sec, 0.120ms latency
    Iteration 7/13... 8290 ops/sec, 0.120ms latency
    Iteration 8/13... 8249 ops/sec, 0.121ms latency
    Iteration 9/13... 8292 ops/sec, 0.120ms latency
    Iteration 10/13... 8213 ops/sec, 0.121ms latency
    Iteration 11/13... 8109 ops/sec, 0.123ms latency
    Iteration 12/13... 8211 ops/sec, 0.121ms latency
    Iteration 13/13... 8158 ops/sec, 0.122ms latency
  Dragonfly (TLS-Predis): 8112.35¬±244.99 ops/sec (CV: 3.0%), 0.123¬±0.004ms latency, Quality: good
  Final keys in database: 61204

Testing Valkey with Predis...
  Configuration: IO Threads: 3
  Running 13 iterations for Valkey (non-TLS-Predis)...
  Initial keys in database: 391132
  Flushing database before test...
  Database flushed in 0.12ms. Keys remaining: 0
    Iteration 1/13... 13442 ops/sec, 0.074ms latency
    Iteration 2/13... 14472 ops/sec, 0.069ms latency
    Iteration 3/13... 14751 ops/sec, 0.067ms latency
    Iteration 4/13... 14827 ops/sec, 0.067ms latency
    Iteration 5/13... 14812 ops/sec, 0.067ms latency
    Iteration 6/13... 14956 ops/sec, 0.066ms latency
    Iteration 7/13... 14785 ops/sec, 0.067ms latency
    Iteration 8/13... 14837 ops/sec, 0.067ms latency
    Iteration 9/13... 14847 ops/sec, 0.067ms latency
    Iteration 10/13... 15109 ops/sec, 0.066ms latency
    Iteration 11/13... 14994 ops/sec, 0.066ms latency
    Iteration 12/13... 14914 ops/sec, 0.067ms latency
    Iteration 13/13... 15002 ops/sec, 0.066ms latency
  Valkey (non-TLS-Predis): 14749.74¬±421.97 ops/sec (CV: 2.9%), 0.067¬±0.002ms latency, Quality: good
  Final keys in database: 61504
üîê Attempting TLS connection to Valkey at 127.0.0.1:6393 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Valkey (TLS-Predis)...
  Initial keys in database: 389922
  Flushing database before test...
  Database flushed in 0.17ms. Keys remaining: 0
    Iteration 1/13... 9765 ops/sec, 0.102ms latency
    Iteration 2/13... 10320 ops/sec, 0.096ms latency
    Iteration 3/13... 10634 ops/sec, 0.094ms latency
    Iteration 4/13... 10502 ops/sec, 0.095ms latency
    Iteration 5/13... 10622 ops/sec, 0.094ms latency
    Iteration 6/13... 10707 ops/sec, 0.093ms latency
    Iteration 7/13... 10622 ops/sec, 0.094ms latency
    Iteration 8/13... 10831 ops/sec, 0.092ms latency
    Iteration 9/13... 10843 ops/sec, 0.092ms latency
    Iteration 10/13... 10900 ops/sec, 0.091ms latency
    Iteration 11/13... 10899 ops/sec, 0.091ms latency
    Iteration 12/13... 10610 ops/sec, 0.094ms latency
    Iteration 13/13... 10814 ops/sec, 0.092ms latency
  Valkey (TLS-Predis): 10620.67¬±307.08 ops/sec (CV: 2.9%), 0.094¬±0.003ms latency, Quality: good
  Final keys in database: 61471

Enhanced Predis results saved:
  CSV: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis.csv
  JSON: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis.json
  Markdown: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis.md
  Raw Data: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis_raw.json
============================================================
Enhanced Predis test suite completed!
Total execution time: 3,175.65 seconds
Total tests run: 8
Statistical iterations per test: 13
Results saved to ./benchmarklogs-3t/
Redis implementation: Predis (pure PHP)

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY (Predis)
Thread Variant: 3 | Iterations per test: 13
====================================================================================================
Rank Database                       Ops/sec   ¬±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey (Predis)              14750      422    2.9%  0.067ms üü°good    14,516-14,984      ‚úÖ
#2  KeyDB (Predis)               12548      344    2.7%  0.079ms üü°good    12,357-12,739      ‚úÖ
#3  Dragonfly (Predis)           11065      346    3.1%  0.090ms üü°good    10,873-11,257      ‚úÖ
#4  Valkey (TLS-Predis)          10621      307    2.9%  0.094ms üü°good    10,450-10,791      ‚úÖ
#5  Redis (Predis)               10276      278    2.7%  0.097ms üü°good    10,122-10,430      ‚úÖ
#6  KeyDB (TLS-Predis)            9589      315    3.3%  0.104ms üü°good     9,414-9,764      ‚úÖ
#7  Dragonfly (TLS-Predis)        8112      245    3.0%  0.123ms üü°good     7,976-8,248      ‚úÖ
#8  Redis (TLS-Predis)            7891      226    2.9%  0.126ms üü°good     7,765-8,016      ‚úÖ
====================================================================================================
Implementation: Predis (Pure PHP Redis Client)
üìà Compare with phpredis results to see implementation trade-offs

============================================================
TLS vs NON-TLS PERFORMANCE COMPARISON (Predis)
Thread Variant: 3
============================================================
Redis      | Non-TLS:    10276¬±278  | TLS:     7891¬±226  | Impact: +23.2% *
KeyDB      | Non-TLS:    12548¬±344  | TLS:     9589¬±315  | Impact: +23.6% *
Dragonfly  | Non-TLS:    11065¬±346  | TLS:     8112¬±245  | Impact: +26.7% *
Valkey     | Non-TLS:    14750¬±422  | TLS:    10621¬±307  | Impact: +28.0% *
------------------------------------------------------------
* = Statistically significant difference (95% confidence)
Implementation: Predis (Pure PHP)
============================================================

================================================================================
STATISTICAL INSIGHTS (Predis)
Thread Variant: 3 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  üü° Good      :  8 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 2.9% (lower is better)
  Range: 2.7% - 3.3%
  üìä Good measurement consistency with Predis

Predis Implementation Notes:
  üì° Connection management: Automatic (no manual close required)
  üîí TLS handling: Enhanced SSL context support
  üîÑ Error recovery: Built-in retry logic with exponential backoff
  üìä Performance characteristics: Pure PHP (higher latency, more consistent)
================================================================================

================================================================================
PREDIS-SPECIFIC INSIGHTS
Thread Variant: 3 | Implementation: Predis (Pure PHP)
================================================================================
TLS Connection Reliability:
  ‚úÖ Predis TLS connections: 4/4 databases
  üìä All TLS connections established successfully
  üîí SSL context handling: Reliable (Predis manages SSL internally)

Predis Configuration Analysis:
  üîó Connection timeout: 5s
  üì° Read/write timeout: 5s
  üîÑ Connection retry attempts: 3
  ‚ö° TCP keepalive: Enabled
  üîó Persistent connections: Disabled

Performance Characteristics:
  üìà Average non-TLS performance: 12,160 ops/sec
  üîí Average TLS performance: 9,053 ops/sec
  üìä TLS overhead: 25.5%
  ‚ÑπÔ∏è  Note: 25-40% TLS overhead is normal for Redis over SSL

Predis Advantages:
  ‚úÖ Better TLS reliability compared to phpredis extension
  ‚úÖ Enhanced SSL context handling
  ‚úÖ No extension compilation dependencies
  ‚úÖ Consistent behavior across PHP versions
  ‚ö†Ô∏è  Trade-off: Lower raw performance due to pure PHP implementation
================================================================================

======================================================================
‚úÖ Predis WordPress Object Cache test completed successfully!
üìÅ Results saved to: ./benchmarklogs-3t
üìä Implementation: Predis (Pure PHP Redis Client)
üîí TLS Support: Enhanced reliability compared to phpredis

üìÑ Generated files:
  php_wordpress_test_phpredis.log (32KB)
  php_wordpress_test_predis.log (16.8KB)
  wordpress_object_cache_test_predis_predis.csv (1.8KB)
  wordpress_object_cache_test_predis_predis.json (99.6KB)
  wordpress_object_cache_test_predis_predis.md (2.7KB)
  wordpress_object_cache_test_predis_predis_raw.json (87.2KB)
