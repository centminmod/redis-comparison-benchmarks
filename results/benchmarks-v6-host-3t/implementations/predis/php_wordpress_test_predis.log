WordPress Object Cache Test with Predis - Configured Runner
============================================================
Implementation: Predis (Pure PHP Redis Client)
Enhanced TLS Support: Yes
Statistical Analysis: 13 iterations with confidence intervals

üìã Loading configuration from: tests/php/test_config_predis.php
‚úÖ Configuration loaded successfully

üìä Test Configuration:
  Implementation: Predis (Pure PHP)
  Duration per iteration: 30s
  Test iterations: 13
  Output directory: ./benchmarklogs-3t
  TLS testing: Enabled
  Flush before test: Yes
  Thread variant: 3
  Connection timeout: 5s
  Read/write timeout: 5s
  Connection retries: 3
  Persistent connections: No
  Thread configuration:
    redis_io_threads: 3 threads
    keydb_server_threads: 3 threads
    dragonfly_proactor_threads: 3 threads
    valkey_io_threads: 3 threads
  Database configurations:
    Redis: 127.0.0.1:6379 (TLS: 6390) (IO threads: 3)
    KeyDB: 127.0.0.1:6380 (TLS: 6391) (Server threads: 3)
    Dragonfly: 127.0.0.1:6381 (TLS: 6392) (Proactor threads: 3)
    Valkey: 127.0.0.1:6382 (TLS: 6393) (IO threads: 3)

======================================================================

üîç Checking Predis availability...
‚úÖ Predis library available

üöÄ Starting Predis WordPress Object Cache Test...

Starting WordPress Object Cache Test (Predis)...
Timestamp: 2025-06-10 03:58:28 UTC
Predis Version: unknown
PHP Version: 8.4.8
Enhanced Testing Configuration (Predis):
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
- Connection timeout: 5s
- Read/write timeout: 5s
- Connection retry attempts: 3
- Persistent connections: Disabled
- TCP keepalive: Enabled
Thread Variant: 3
Thread Configuration:
  redis_io_threads: 3 threads
  keydb_server_threads: 3 threads
  dragonfly_proactor_threads: 3 threads
  valkey_io_threads: 3 threads
TLS Certificates: Found and validated (Predis-compatible)

Checking TLS readiness (Predis)...
  Redis: TLS port accessible ‚úì
  KeyDB: TLS port accessible ‚úì
  Dragonfly: TLS port accessible ‚úì
  Valkey: TLS port accessible ‚úì

Predis TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis with Predis...
  Configuration: IO Threads: 3
  Running 13 iterations for Redis (non-TLS-Predis)...
  Initial keys in database: 395225
  Flushing database before test...
  Database flushed in 210.27ms. Keys remaining: 0
    Iteration 1/13... 9463 ops/sec, 0.105ms latency
    Iteration 2/13... 10128 ops/sec, 0.098ms latency
    Iteration 3/13... 10299 ops/sec, 0.097ms latency
    Iteration 4/13... 10385 ops/sec, 0.096ms latency
    Iteration 5/13... 10480 ops/sec, 0.095ms latency
    Iteration 6/13... 10460 ops/sec, 0.095ms latency
    Iteration 7/13... 10472 ops/sec, 0.095ms latency
    Iteration 8/13... 10510 ops/sec, 0.095ms latency
    Iteration 9/13... 10521 ops/sec, 0.095ms latency
    Iteration 10/13... 10544 ops/sec, 0.094ms latency
    Iteration 11/13... 10441 ops/sec, 0.095ms latency
    Iteration 12/13... 10489 ops/sec, 0.095ms latency
    Iteration 13/13... 10503 ops/sec, 0.095ms latency
  Redis (non-TLS-Predis): 10361.19¬±292.27 ops/sec (CV: 2.8%), 0.096¬±0.003ms latency, Quality: good
  Final keys in database: 61471
üîê Attempting TLS connection to Redis at 127.0.0.1:6390 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Redis (TLS-Predis)...
  Initial keys in database: 395261
  Flushing database before test...
  Database flushed in 218.04ms. Keys remaining: 0
    Iteration 1/13... 7358 ops/sec, 0.135ms latency
    Iteration 2/13... 7774 ops/sec, 0.128ms latency
    Iteration 3/13... 7949 ops/sec, 0.125ms latency
    Iteration 4/13... 8060 ops/sec, 0.123ms latency
    Iteration 5/13... 8098 ops/sec, 0.123ms latency
    Iteration 6/13... 8077 ops/sec, 0.123ms latency
    Iteration 7/13... 8124 ops/sec, 0.123ms latency
    Iteration 8/13... 8120 ops/sec, 0.123ms latency
    Iteration 9/13... 8184 ops/sec, 0.122ms latency
    Iteration 10/13... 8205 ops/sec, 0.121ms latency
    Iteration 11/13... 8186 ops/sec, 0.122ms latency
    Iteration 12/13... 8214 ops/sec, 0.121ms latency
    Iteration 13/13... 8208 ops/sec, 0.121ms latency
  Redis (TLS-Predis): 8042.75¬±239.74 ops/sec (CV: 3.0%), 0.124¬±0.004ms latency, Quality: good
  Final keys in database: 61386

Testing KeyDB with Predis...
  Configuration: Server Threads: 3
  Running 13 iterations for KeyDB (non-TLS-Predis)...
  Initial keys in database: 394023
  Flushing database before test...
  Database flushed in 203.24ms. Keys remaining: 0
    Iteration 1/13... 11745 ops/sec, 0.085ms latency
    Iteration 2/13... 12510 ops/sec, 0.079ms latency
    Iteration 3/13... 12727 ops/sec, 0.078ms latency
    Iteration 4/13... 12872 ops/sec, 0.077ms latency
    Iteration 5/13... 12919 ops/sec, 0.077ms latency
    Iteration 6/13... 12975 ops/sec, 0.077ms latency
    Iteration 7/13... 12885 ops/sec, 0.077ms latency
    Iteration 8/13... 12901 ops/sec, 0.077ms latency
    Iteration 9/13... 12944 ops/sec, 0.077ms latency
    Iteration 10/13... 12899 ops/sec, 0.077ms latency
    Iteration 11/13... 12933 ops/sec, 0.077ms latency
    Iteration 12/13... 12993 ops/sec, 0.076ms latency
    Iteration 13/13... 13005 ops/sec, 0.076ms latency
  KeyDB (non-TLS-Predis): 12792.94¬±341.19 ops/sec (CV: 2.7%), 0.078¬±0.002ms latency, Quality: good
  Final keys in database: 61495
üîê Attempting TLS connection to KeyDB at 127.0.0.1:6391 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for KeyDB (TLS-Predis)...
  Initial keys in database: 393481
  Flushing database before test...
  Database flushed in 214.71ms. Keys remaining: 0
    Iteration 1/13... 8863 ops/sec, 0.112ms latency
    Iteration 2/13... 9421 ops/sec, 0.106ms latency
    Iteration 3/13... 9608 ops/sec, 0.103ms latency
    Iteration 4/13... 9718 ops/sec, 0.102ms latency
    Iteration 5/13... 9770 ops/sec, 0.102ms latency
    Iteration 6/13... 9771 ops/sec, 0.102ms latency
    Iteration 7/13... 9762 ops/sec, 0.102ms latency
    Iteration 8/13... 9839 ops/sec, 0.101ms latency
    Iteration 9/13... 9821 ops/sec, 0.101ms latency
    Iteration 10/13... 9790 ops/sec, 0.102ms latency
    Iteration 11/13... 9837 ops/sec, 0.101ms latency
    Iteration 12/13... 9790 ops/sec, 0.102ms latency
    Iteration 13/13... 9819 ops/sec, 0.101ms latency
  KeyDB (TLS-Predis): 9677.58¬±270.51 ops/sec (CV: 2.8%), 0.103¬±0.003ms latency, Quality: good
  Final keys in database: 61474

Testing Dragonfly with Predis...
  Configuration: Proactor Threads: 3
  Running 13 iterations for Dragonfly (non-TLS-Predis)...
  Initial keys in database: 389532
  Flushing database before test...
  Database flushed in 19.59ms. Keys remaining: 0
    Iteration 1/13... 9912 ops/sec, 0.100ms latency
    Iteration 2/13... 10483 ops/sec, 0.095ms latency
    Iteration 3/13... 10878 ops/sec, 0.091ms latency
    Iteration 4/13... 10840 ops/sec, 0.092ms latency
    Iteration 5/13... 10853 ops/sec, 0.092ms latency
    Iteration 6/13... 10948 ops/sec, 0.091ms latency
    Iteration 7/13... 10875 ops/sec, 0.091ms latency
    Iteration 8/13... 10948 ops/sec, 0.091ms latency
    Iteration 9/13... 10982 ops/sec, 0.090ms latency
    Iteration 10/13... 10915 ops/sec, 0.091ms latency
    Iteration 11/13... 11002 ops/sec, 0.090ms latency
    Iteration 12/13... 10945 ops/sec, 0.091ms latency
    Iteration 13/13... 10902 ops/sec, 0.091ms latency
  Dragonfly (non-TLS-Predis): 10806.46¬±298.16 ops/sec (CV: 2.8%), 0.092¬±0.003ms latency, Quality: good
  Final keys in database: 61300
üîê Attempting TLS connection to Dragonfly at 127.0.0.1:6392 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üîê Adding Dragonfly authentication to connection parameters...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Dragonfly (TLS-Predis)...
  Initial keys in database: 388779
  Flushing database before test...
  Database flushed in 20.26ms. Keys remaining: 0
    Iteration 1/13... 7698 ops/sec, 0.129ms latency
    Iteration 2/13... 8256 ops/sec, 0.121ms latency
    Iteration 3/13... 8186 ops/sec, 0.122ms latency
    Iteration 4/13... 8289 ops/sec, 0.120ms latency
    Iteration 5/13... 8480 ops/sec, 0.117ms latency
    Iteration 6/13... 8499 ops/sec, 0.117ms latency
    Iteration 7/13... 8614 ops/sec, 0.116ms latency
    Iteration 8/13... 8373 ops/sec, 0.119ms latency
    Iteration 9/13... 8400 ops/sec, 0.118ms latency
    Iteration 10/13... 8466 ops/sec, 0.118ms latency
    Iteration 11/13... 8532 ops/sec, 0.117ms latency
    Iteration 12/13... 8404 ops/sec, 0.118ms latency
    Iteration 13/13... 8620 ops/sec, 0.115ms latency
  Dragonfly (TLS-Predis): 8370.46¬±240.42 ops/sec (CV: 2.9%), 0.119¬±0.004ms latency, Quality: good
  Final keys in database: 61169

Testing Valkey with Predis...
  Configuration: IO Threads: 3
  Running 13 iterations for Valkey (non-TLS-Predis)...
  Initial keys in database: 390256
  Flushing database before test...
  Database flushed in 0.10ms. Keys remaining: 0
    Iteration 1/13... 13824 ops/sec, 0.072ms latency
    Iteration 2/13... 14937 ops/sec, 0.066ms latency
    Iteration 3/13... 14966 ops/sec, 0.066ms latency
    Iteration 4/13... 15134 ops/sec, 0.066ms latency
    Iteration 5/13... 14942 ops/sec, 0.066ms latency
    Iteration 6/13... 15008 ops/sec, 0.066ms latency
    Iteration 7/13... 15107 ops/sec, 0.066ms latency
    Iteration 8/13... 15013 ops/sec, 0.066ms latency
    Iteration 9/13... 15048 ops/sec, 0.066ms latency
    Iteration 10/13... 15077 ops/sec, 0.066ms latency
    Iteration 11/13... 15065 ops/sec, 0.066ms latency
    Iteration 12/13... 15086 ops/sec, 0.066ms latency
    Iteration 13/13... 15010 ops/sec, 0.066ms latency
  Valkey (non-TLS-Predis): 14939.78¬±340.73 ops/sec (CV: 2.3%), 0.066¬±0.002ms latency, Quality: good
  Final keys in database: 61505
üîê Attempting TLS connection to Valkey at 127.0.0.1:6393 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Valkey (TLS-Predis)...
  Initial keys in database: 388772
  Flushing database before test...
  Database flushed in 0.14ms. Keys remaining: 0
    Iteration 1/13... 9854 ops/sec, 0.101ms latency
    Iteration 2/13... 10539 ops/sec, 0.094ms latency
    Iteration 3/13... 10739 ops/sec, 0.093ms latency
    Iteration 4/13... 10714 ops/sec, 0.093ms latency
    Iteration 5/13... 10909 ops/sec, 0.091ms latency
    Iteration 6/13... 10923 ops/sec, 0.091ms latency
    Iteration 7/13... 11032 ops/sec, 0.090ms latency
    Iteration 8/13... 10892 ops/sec, 0.091ms latency
    Iteration 9/13... 10930 ops/sec, 0.091ms latency
    Iteration 10/13... 10909 ops/sec, 0.091ms latency
    Iteration 11/13... 10821 ops/sec, 0.092ms latency
    Iteration 12/13... 10928 ops/sec, 0.091ms latency
    Iteration 13/13... 10910 ops/sec, 0.091ms latency
  Valkey (TLS-Predis): 10776.89¬±304.71 ops/sec (CV: 2.8%), 0.092¬±0.003ms latency, Quality: good
  Final keys in database: 61472

Enhanced Predis results saved:
  CSV: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis.csv
  JSON: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis.json
  Markdown: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis.md
  Raw Data: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis_raw.json
============================================================
Enhanced Predis test suite completed!
Total execution time: 3,175.69 seconds
Total tests run: 8
Statistical iterations per test: 13
Results saved to ./benchmarklogs-3t/
Redis implementation: Predis (pure PHP)

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY (Predis)
Thread Variant: 3 | Iterations per test: 13
====================================================================================================
Rank Database                       Ops/sec   ¬±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey (Predis)              14940      341    2.3%  0.066ms üü°good    14,751-15,129      ‚úÖ
#2  KeyDB (Predis)               12793      341    2.7%  0.078ms üü°good    12,604-12,982      ‚úÖ
#3  Dragonfly (Predis)           10806      298    2.8%  0.092ms üü°good    10,641-10,972      ‚úÖ
#4  Valkey (TLS-Predis)          10777      305    2.8%  0.092ms üü°good    10,608-10,946      ‚úÖ
#5  Redis (Predis)               10361      292    2.8%  0.096ms üü°good    10,199-10,523      ‚úÖ
#6  KeyDB (TLS-Predis)            9678      271    2.8%  0.103ms üü°good     9,528-9,828      ‚úÖ
#7  Dragonfly (TLS-Predis)        8370      240    2.9%  0.119ms üü°good     8,237-8,504      ‚úÖ
#8  Redis (TLS-Predis)            8043      240    3.0%  0.124ms üü°good     7,910-8,176      ‚úÖ
====================================================================================================
Implementation: Predis (Pure PHP Redis Client)
üìà Compare with phpredis results to see implementation trade-offs

============================================================
TLS vs NON-TLS PERFORMANCE COMPARISON (Predis)
Thread Variant: 3
============================================================
Redis      | Non-TLS:    10361¬±292  | TLS:     8043¬±240  | Impact: +22.4% *
KeyDB      | Non-TLS:    12793¬±341  | TLS:     9678¬±271  | Impact: +24.4% *
Dragonfly  | Non-TLS:    10806¬±298  | TLS:     8370¬±240  | Impact: +22.5% *
Valkey     | Non-TLS:    14940¬±341  | TLS:    10777¬±305  | Impact: +27.9% *
------------------------------------------------------------
* = Statistically significant difference (95% confidence)
Implementation: Predis (Pure PHP)
============================================================

================================================================================
STATISTICAL INSIGHTS (Predis)
Thread Variant: 3 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  üü° Good      :  8 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 2.8% (lower is better)
  Range: 2.3% - 3.0%
  üìä Good measurement consistency with Predis

Predis Implementation Notes:
  üì° Connection management: Automatic (no manual close required)
  üîí TLS handling: Enhanced SSL context support
  üîÑ Error recovery: Built-in retry logic with exponential backoff
  üìä Performance characteristics: Pure PHP (higher latency, more consistent)
================================================================================

================================================================================
PREDIS-SPECIFIC INSIGHTS
Thread Variant: 3 | Implementation: Predis (Pure PHP)
================================================================================
TLS Connection Reliability:
  ‚úÖ Predis TLS connections: 4/4 databases
  üìä All TLS connections established successfully
  üîí SSL context handling: Reliable (Predis manages SSL internally)

Predis Configuration Analysis:
  üîó Connection timeout: 5s
  üì° Read/write timeout: 5s
  üîÑ Connection retry attempts: 3
  ‚ö° TCP keepalive: Enabled
  üîó Persistent connections: Disabled

Performance Characteristics:
  üìà Average non-TLS performance: 12,225 ops/sec
  üîí Average TLS performance: 9,217 ops/sec
  üìä TLS overhead: 24.6%
  ‚ÑπÔ∏è  Note: 25-40% TLS overhead is normal for Redis over SSL

Predis Advantages:
  ‚úÖ Better TLS reliability compared to phpredis extension
  ‚úÖ Enhanced SSL context handling
  ‚úÖ No extension compilation dependencies
  ‚úÖ Consistent behavior across PHP versions
  ‚ö†Ô∏è  Trade-off: Lower raw performance due to pure PHP implementation
================================================================================

======================================================================
‚úÖ Predis WordPress Object Cache test completed successfully!
üìÅ Results saved to: ./benchmarklogs-3t
üìä Implementation: Predis (Pure PHP Redis Client)
üîí TLS Support: Enhanced reliability compared to phpredis

üìÑ Generated files:
  php_wordpress_test_phpredis.log (32KB)
  php_wordpress_test_predis.log (16.8KB)
  wordpress_object_cache_test_predis_predis.csv (1.8KB)
  wordpress_object_cache_test_predis_predis.json (99.5KB)
  wordpress_object_cache_test_predis_predis.md (2.7KB)
  wordpress_object_cache_test_predis_predis_raw.json (87.2KB)
