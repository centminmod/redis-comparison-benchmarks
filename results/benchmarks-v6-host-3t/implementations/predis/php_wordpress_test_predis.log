WordPress Object Cache Test with Predis - Configured Runner
============================================================
Implementation: Predis (Pure PHP Redis Client)
Enhanced TLS Support: Yes
Statistical Analysis: 13 iterations with confidence intervals

üìã Loading configuration from: tests/php/test_config_predis.php
‚úÖ Configuration loaded successfully

üìä Test Configuration:
  Implementation: Predis (Pure PHP)
  Duration per iteration: 30s
  Test iterations: 13
  Output directory: ./benchmarklogs-3t
  TLS testing: Enabled
  Flush before test: Yes
  Thread variant: 3
  Connection timeout: 5s
  Read/write timeout: 5s
  Connection retries: 3
  Persistent connections: No
  Thread configuration:
    redis_io_threads: 3 threads
    keydb_server_threads: 3 threads
    dragonfly_proactor_threads: 3 threads
    valkey_io_threads: 3 threads
  Database configurations:
    Redis: 127.0.0.1:6379 (TLS: 6390) (IO threads: 3)
    KeyDB: 127.0.0.1:6380 (TLS: 6391) (Server threads: 3)
    Dragonfly: 127.0.0.1:6381 (TLS: 6392) (Proactor threads: 3)
    Valkey: 127.0.0.1:6382 (TLS: 6393) (IO threads: 3)

======================================================================

üîç Checking Predis availability...
‚úÖ Predis library available

üöÄ Starting Predis WordPress Object Cache Test...

Starting WordPress Object Cache Test (Predis)...
Timestamp: 2025-06-10 09:18:51 UTC
Predis Version: unknown
PHP Version: 8.4.8
Enhanced Testing Configuration (Predis):
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
- Connection timeout: 5s
- Read/write timeout: 5s
- Connection retry attempts: 3
- Persistent connections: Disabled
- TCP keepalive: Enabled
Thread Variant: 3
Thread Configuration:
  redis_io_threads: 3 threads
  keydb_server_threads: 3 threads
  dragonfly_proactor_threads: 3 threads
  valkey_io_threads: 3 threads
TLS Certificates: Found and validated (Predis-compatible)

Checking TLS readiness (Predis)...
  Redis: TLS port accessible ‚úì
  KeyDB: TLS port accessible ‚úì
  Dragonfly: TLS port accessible ‚úì
  Valkey: TLS port accessible ‚úì

Predis TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis with Predis...
  Configuration: IO Threads: 3
  Running 13 iterations for Redis (non-TLS-Predis)...
  Initial keys in database: 395195
  Flushing database before test...
  Database flushed in 239.62ms. Keys remaining: 0
    Iteration 1/13... 9422 ops/sec, 0.106ms latency
    Iteration 2/13... 10061 ops/sec, 0.099ms latency
    Iteration 3/13... 10247 ops/sec, 0.097ms latency
    Iteration 4/13... 10325 ops/sec, 0.096ms latency
    Iteration 5/13... 10404 ops/sec, 0.096ms latency
    Iteration 6/13... 10439 ops/sec, 0.095ms latency
    Iteration 7/13... 10449 ops/sec, 0.095ms latency
    Iteration 8/13... 10498 ops/sec, 0.095ms latency
    Iteration 9/13... 10429 ops/sec, 0.095ms latency
    Iteration 10/13... 10445 ops/sec, 0.095ms latency
    Iteration 11/13... 10449 ops/sec, 0.095ms latency
    Iteration 12/13... 10432 ops/sec, 0.095ms latency
    Iteration 13/13... 10456 ops/sec, 0.095ms latency
  Redis (non-TLS-Predis): 10311.99¬±291.91 ops/sec (CV: 2.8%), 0.097¬±0.003ms latency, Quality: good
  Final keys in database: 61480
üîê Attempting TLS connection to Redis at 127.0.0.1:6390 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Redis (TLS-Predis)...
  Initial keys in database: 393951
  Flushing database before test...
  Database flushed in 227.33ms. Keys remaining: 0
    Iteration 1/13... 7256 ops/sec, 0.137ms latency
    Iteration 2/13... 7715 ops/sec, 0.129ms latency
    Iteration 3/13... 7820 ops/sec, 0.127ms latency
    Iteration 4/13... 7923 ops/sec, 0.126ms latency
    Iteration 5/13... 7975 ops/sec, 0.125ms latency
    Iteration 6/13... 8033 ops/sec, 0.124ms latency
    Iteration 7/13... 8011 ops/sec, 0.124ms latency
    Iteration 8/13... 7992 ops/sec, 0.125ms latency
    Iteration 9/13... 7980 ops/sec, 0.125ms latency
    Iteration 10/13... 8098 ops/sec, 0.123ms latency
    Iteration 11/13... 8070 ops/sec, 0.123ms latency
    Iteration 12/13... 8072 ops/sec, 0.123ms latency
    Iteration 13/13... 8048 ops/sec, 0.124ms latency
  Redis (TLS-Predis): 7922.70¬±227.34 ops/sec (CV: 2.9%), 0.126¬±0.004ms latency, Quality: good
  Final keys in database: 61384

Testing KeyDB with Predis...
  Configuration: Server Threads: 3
  Running 13 iterations for KeyDB (non-TLS-Predis)...
  Initial keys in database: 394025
  Flushing database before test...
  Database flushed in 211.99ms. Keys remaining: 0
    Iteration 1/13... 11584 ops/sec, 0.086ms latency
    Iteration 2/13... 12295 ops/sec, 0.081ms latency
    Iteration 3/13... 12506 ops/sec, 0.079ms latency
    Iteration 4/13... 12630 ops/sec, 0.079ms latency
    Iteration 5/13... 12625 ops/sec, 0.079ms latency
    Iteration 6/13... 12657 ops/sec, 0.078ms latency
    Iteration 7/13... 12723 ops/sec, 0.078ms latency
    Iteration 8/13... 12727 ops/sec, 0.078ms latency
    Iteration 9/13... 12727 ops/sec, 0.078ms latency
    Iteration 10/13... 12641 ops/sec, 0.079ms latency
    Iteration 11/13... 12690 ops/sec, 0.078ms latency
    Iteration 12/13... 12686 ops/sec, 0.078ms latency
    Iteration 13/13... 12743 ops/sec, 0.078ms latency
  KeyDB (non-TLS-Predis): 12556.38¬±316.12 ops/sec (CV: 2.5%), 0.079¬±0.002ms latency, Quality: good
  Final keys in database: 61488
üîê Attempting TLS connection to KeyDB at 127.0.0.1:6391 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for KeyDB (TLS-Predis)...
  Initial keys in database: 393630
  Flushing database before test...
  Database flushed in 212.96ms. Keys remaining: 0
    Iteration 1/13... 8675 ops/sec, 0.115ms latency
    Iteration 2/13... 9275 ops/sec, 0.107ms latency
    Iteration 3/13... 9539 ops/sec, 0.104ms latency
    Iteration 4/13... 9578 ops/sec, 0.104ms latency
    Iteration 5/13... 9641 ops/sec, 0.103ms latency
    Iteration 6/13... 9649 ops/sec, 0.103ms latency
    Iteration 7/13... 9648 ops/sec, 0.103ms latency
    Iteration 8/13... 9672 ops/sec, 0.103ms latency
    Iteration 9/13... 9667 ops/sec, 0.103ms latency
    Iteration 10/13... 9642 ops/sec, 0.103ms latency
    Iteration 11/13... 9673 ops/sec, 0.103ms latency
    Iteration 12/13... 9683 ops/sec, 0.103ms latency
    Iteration 13/13... 9644 ops/sec, 0.103ms latency
  KeyDB (TLS-Predis): 9537.42¬±280.91 ops/sec (CV: 2.9%), 0.104¬±0.003ms latency, Quality: good
  Final keys in database: 61457

Testing Dragonfly with Predis...
  Configuration: Proactor Threads: 3
  Running 13 iterations for Dragonfly (non-TLS-Predis)...
  Initial keys in database: 388857
  Flushing database before test...
  Database flushed in 19.62ms. Keys remaining: 0
    Iteration 1/13... 9805 ops/sec, 0.101ms latency
    Iteration 2/13... 10470 ops/sec, 0.095ms latency
    Iteration 3/13... 10595 ops/sec, 0.094ms latency
    Iteration 4/13... 10599 ops/sec, 0.094ms latency
    Iteration 5/13... 10696 ops/sec, 0.093ms latency
    Iteration 6/13... 10709 ops/sec, 0.093ms latency
    Iteration 7/13... 10736 ops/sec, 0.093ms latency
    Iteration 8/13... 10704 ops/sec, 0.093ms latency
    Iteration 9/13... 10784 ops/sec, 0.092ms latency
    Iteration 10/13... 10748 ops/sec, 0.093ms latency
    Iteration 11/13... 10752 ops/sec, 0.092ms latency
    Iteration 12/13... 10874 ops/sec, 0.091ms latency
    Iteration 13/13... 10722 ops/sec, 0.093ms latency
  Dragonfly (non-TLS-Predis): 10630.32¬±267.24 ops/sec (CV: 2.5%), 0.094¬±0.003ms latency, Quality: good
  Final keys in database: 61313
üîê Attempting TLS connection to Dragonfly at 127.0.0.1:6392 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üîê Adding Dragonfly authentication to connection parameters...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Dragonfly (TLS-Predis)...
  Initial keys in database: 388745
  Flushing database before test...
  Database flushed in 19.63ms. Keys remaining: 0
    Iteration 1/13... 7499 ops/sec, 0.133ms latency
    Iteration 2/13... 7984 ops/sec, 0.125ms latency
    Iteration 3/13... 8038 ops/sec, 0.124ms latency
    Iteration 4/13... 8144 ops/sec, 0.122ms latency
    Iteration 5/13... 8335 ops/sec, 0.119ms latency
    Iteration 6/13... 8204 ops/sec, 0.121ms latency
    Iteration 7/13... 8282 ops/sec, 0.120ms latency
    Iteration 8/13... 8405 ops/sec, 0.118ms latency
    Iteration 9/13... 8347 ops/sec, 0.119ms latency
    Iteration 10/13... 8221 ops/sec, 0.121ms latency
    Iteration 11/13... 8256 ops/sec, 0.121ms latency
    Iteration 12/13... 8309 ops/sec, 0.120ms latency
    Iteration 13/13... 8335 ops/sec, 0.119ms latency
  Dragonfly (TLS-Predis): 8181.61¬±238.93 ops/sec (CV: 2.9%), 0.122¬±0.004ms latency, Quality: good
  Final keys in database: 61189

Testing Valkey with Predis...
  Configuration: IO Threads: 3
  Running 13 iterations for Valkey (non-TLS-Predis)...
  Initial keys in database: 390850
  Flushing database before test...
  Database flushed in 0.10ms. Keys remaining: 0
    Iteration 1/13... 13536 ops/sec, 0.073ms latency
    Iteration 2/13... 14419 ops/sec, 0.069ms latency
    Iteration 3/13... 14721 ops/sec, 0.067ms latency
    Iteration 4/13... 14935 ops/sec, 0.066ms latency
    Iteration 5/13... 14806 ops/sec, 0.067ms latency
    Iteration 6/13... 14840 ops/sec, 0.067ms latency
    Iteration 7/13... 14821 ops/sec, 0.067ms latency
    Iteration 8/13... 14974 ops/sec, 0.066ms latency
    Iteration 9/13... 14879 ops/sec, 0.067ms latency
    Iteration 10/13... 14937 ops/sec, 0.066ms latency
    Iteration 11/13... 14936 ops/sec, 0.066ms latency
    Iteration 12/13... 14970 ops/sec, 0.066ms latency
    Iteration 13/13... 14907 ops/sec, 0.067ms latency
  Valkey (non-TLS-Predis): 14744.64¬±392.08 ops/sec (CV: 2.7%), 0.067¬±0.002ms latency, Quality: good
  Final keys in database: 61511
üîê Attempting TLS connection to Valkey at 127.0.0.1:6393 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Valkey (TLS-Predis)...
  Initial keys in database: 388995
  Flushing database before test...
  Database flushed in 0.15ms. Keys remaining: 0
    Iteration 1/13... 9696 ops/sec, 0.103ms latency
    Iteration 2/13... 10402 ops/sec, 0.096ms latency
    Iteration 3/13... 10592 ops/sec, 0.094ms latency
    Iteration 4/13... 10648 ops/sec, 0.093ms latency
    Iteration 5/13... 10706 ops/sec, 0.093ms latency
    Iteration 6/13... 10758 ops/sec, 0.092ms latency
    Iteration 7/13... 10790 ops/sec, 0.092ms latency
    Iteration 8/13... 10787 ops/sec, 0.092ms latency
    Iteration 9/13... 10756 ops/sec, 0.092ms latency
    Iteration 10/13... 10854 ops/sec, 0.092ms latency
    Iteration 11/13... 10802 ops/sec, 0.092ms latency
    Iteration 12/13... 10641 ops/sec, 0.093ms latency
    Iteration 13/13... 10755 ops/sec, 0.092ms latency
  Valkey (TLS-Predis): 10629.76¬±304.16 ops/sec (CV: 2.9%), 0.094¬±0.003ms latency, Quality: good
  Final keys in database: 61479

Enhanced Predis results saved:
  CSV: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis.csv
  JSON: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis.json
  Markdown: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis.md
  Raw Data: ./benchmarklogs-3t/wordpress_object_cache_test_predis_predis_raw.json
============================================================
Enhanced Predis test suite completed!
Total execution time: 3,175.62 seconds
Total tests run: 8
Statistical iterations per test: 13
Results saved to ./benchmarklogs-3t/
Redis implementation: Predis (pure PHP)

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY (Predis)
Thread Variant: 3 | Iterations per test: 13
====================================================================================================
Rank Database                       Ops/sec   ¬±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey (Predis)              14745      392    2.7%  0.067ms üü°good    14,527-14,962      ‚úÖ
#2  KeyDB (Predis)               12556      316    2.5%  0.079ms üü°good    12,381-12,732      ‚úÖ
#3  Dragonfly (Predis)           10630      267    2.5%  0.094ms üü°good    10,482-10,779      ‚úÖ
#4  Valkey (TLS-Predis)          10630      304    2.9%  0.094ms üü°good    10,461-10,798      ‚úÖ
#5  Redis (Predis)               10312      292    2.8%  0.097ms üü°good    10,150-10,474      ‚úÖ
#6  KeyDB (TLS-Predis)            9537      281    2.9%  0.104ms üü°good     9,382-9,693      ‚úÖ
#7  Dragonfly (TLS-Predis)        8182      239    2.9%  0.122ms üü°good     8,049-8,314      ‚úÖ
#8  Redis (TLS-Predis)            7923      227    2.9%  0.126ms üü°good     7,797-8,049      ‚úÖ
====================================================================================================
Implementation: Predis (Pure PHP Redis Client)
üìà Compare with phpredis results to see implementation trade-offs

============================================================
TLS vs NON-TLS PERFORMANCE COMPARISON (Predis)
Thread Variant: 3
============================================================
Redis      | Non-TLS:    10312¬±292  | TLS:     7923¬±227  | Impact: +23.2% *
KeyDB      | Non-TLS:    12556¬±316  | TLS:     9537¬±281  | Impact: +24.0% *
Dragonfly  | Non-TLS:    10630¬±267  | TLS:     8182¬±239  | Impact: +23.0% *
Valkey     | Non-TLS:    14745¬±392  | TLS:    10630¬±304  | Impact: +27.9% *
------------------------------------------------------------
* = Statistically significant difference (95% confidence)
Implementation: Predis (Pure PHP)
============================================================

================================================================================
STATISTICAL INSIGHTS (Predis)
Thread Variant: 3 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  üü° Good      :  8 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 2.8% (lower is better)
  Range: 2.5% - 2.9%
  üìä Good measurement consistency with Predis

Predis Implementation Notes:
  üì° Connection management: Automatic (no manual close required)
  üîí TLS handling: Enhanced SSL context support
  üîÑ Error recovery: Built-in retry logic with exponential backoff
  üìä Performance characteristics: Pure PHP (higher latency, more consistent)
================================================================================

================================================================================
PREDIS-SPECIFIC INSIGHTS
Thread Variant: 3 | Implementation: Predis (Pure PHP)
================================================================================
TLS Connection Reliability:
  ‚úÖ Predis TLS connections: 4/4 databases
  üìä All TLS connections established successfully
  üîí SSL context handling: Reliable (Predis manages SSL internally)

Predis Configuration Analysis:
  üîó Connection timeout: 5s
  üì° Read/write timeout: 5s
  üîÑ Connection retry attempts: 3
  ‚ö° TCP keepalive: Enabled
  üîó Persistent connections: Disabled

Performance Characteristics:
  üìà Average non-TLS performance: 12,061 ops/sec
  üîí Average TLS performance: 9,068 ops/sec
  üìä TLS overhead: 24.8%
  ‚ÑπÔ∏è  Note: 25-40% TLS overhead is normal for Redis over SSL

Predis Advantages:
  ‚úÖ Better TLS reliability compared to phpredis extension
  ‚úÖ Enhanced SSL context handling
  ‚úÖ No extension compilation dependencies
  ‚úÖ Consistent behavior across PHP versions
  ‚ö†Ô∏è  Trade-off: Lower raw performance due to pure PHP implementation
================================================================================

======================================================================
‚úÖ Predis WordPress Object Cache test completed successfully!
üìÅ Results saved to: ./benchmarklogs-3t
üìä Implementation: Predis (Pure PHP Redis Client)
üîí TLS Support: Enhanced reliability compared to phpredis

üìÑ Generated files:
  php_wordpress_test_phpredis.log (32.1KB)
  php_wordpress_test_predis.log (16.8KB)
  wordpress_object_cache_test_predis_predis.csv (1.8KB)
  wordpress_object_cache_test_predis_predis.json (99.6KB)
  wordpress_object_cache_test_predis_predis.md (2.7KB)
  wordpress_object_cache_test_predis_predis_raw.json (87.2KB)
