Loaded configuration from test_config.php
Configuration: {
    "duration": 30,
    "implementation": "phpredis",
    "test_iterations": 13,
    "iteration_pause_ms": 500,
    "save_raw_results": true,
    "output_dir": ".\/benchmarklogs-3t",
    "test_tls": true,
    "flush_before_test": true,
    "debug": false,
    "thread_variant": "3",
    "thread_config": {
        "redis_io_threads": 3,
        "keydb_server_threads": 3,
        "dragonfly_proactor_threads": 3,
        "valkey_io_threads": 3
    },
    "databases": {
        "Redis": {
            "host": "127.0.0.1",
            "port": 6379,
            "tls_port": 6390,
            "io_threads": 3
        },
        "KeyDB": {
            "host": "127.0.0.1",
            "port": 6380,
            "tls_port": 6391,
            "server_threads": 3
        },
        "Dragonfly": {
            "host": "127.0.0.1",
            "port": 6381,
            "tls_port": 6392,
            "proactor_threads": 3
        },
        "Valkey": {
            "host": "127.0.0.1",
            "port": 6382,
            "tls_port": 6393,
            "io_threads": 3
        }
    }
}

Starting WordPress Object Cache Test...
Timestamp: 2025-06-09 03:07:21 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 3
Thread Configuration:
  redis_io_threads: 3 threads
  keydb_server_threads: 3 threads
  dragonfly_proactor_threads: 3 threads
  valkey_io_threads: 3 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 3
  Running 13 iterations for Redis (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.31ms. Keys remaining: 0
    Iteration 1/13... 10721 ops/sec, 0.093ms latency
    Iteration 2/13... 10859 ops/sec, 0.091ms latency
    Iteration 3/13... 11006 ops/sec, 0.090ms latency
    Iteration 4/13... 10969 ops/sec, 0.090ms latency
    Iteration 5/13... 11018 ops/sec, 0.090ms latency
    Iteration 6/13... 11101 ops/sec, 0.089ms latency
    Iteration 7/13... 11112 ops/sec, 0.089ms latency
    Iteration 8/13... 11131 ops/sec, 0.089ms latency
    Iteration 9/13... 11366 ops/sec, 0.087ms latency
    Iteration 10/13... 11438 ops/sec, 0.087ms latency
    Iteration 11/13... 11329 ops/sec, 0.088ms latency
    Iteration 12/13... 11485 ops/sec, 0.086ms latency
    Iteration 13/13... 11593 ops/sec, 0.086ms latency
  Redis (non-TLS): 11163.86±260.10 ops/sec (CV: 2.3%), 0.089±0.002ms latency, Quality: good
  Final keys in database: 395637
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6390
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:52
      Valid to: 2026-06-09 02:48:52
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:51
      Valid to: 2026-06-09 02:48:51
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6390
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Redis (TLS)...
  ERROR: Test failed for Redis (TLS): read error on connection to 127.0.0.1:6390

Testing KeyDB...
  Configuration: Server Threads: 3
  Running 13 iterations for KeyDB (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.08ms. Keys remaining: 0
    Iteration 1/13... 14106 ops/sec, 0.070ms latency
    Iteration 2/13... 13976 ops/sec, 0.071ms latency
    Iteration 3/13... 14148 ops/sec, 0.070ms latency
    Iteration 4/13... 14232 ops/sec, 0.070ms latency
    Iteration 5/13... 14266 ops/sec, 0.069ms latency
    Iteration 6/13... 14374 ops/sec, 0.069ms latency
    Iteration 7/13... 14525 ops/sec, 0.068ms latency
    Iteration 8/13... 14304 ops/sec, 0.069ms latency
    Iteration 9/13... 14701 ops/sec, 0.067ms latency
    Iteration 10/13... 14692 ops/sec, 0.067ms latency
    Iteration 11/13... 14735 ops/sec, 0.067ms latency
    Iteration 12/13... 14758 ops/sec, 0.067ms latency
    Iteration 13/13... 14767 ops/sec, 0.067ms latency
  KeyDB (non-TLS): 14429.51±280.14 ops/sec (CV: 1.9%), 0.069±0.001ms latency, Quality: excellent
  Final keys in database: 396194
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6391
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:52
      Valid to: 2026-06-09 02:48:52
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:51
      Valid to: 2026-06-09 02:48:51
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6391
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for KeyDB (TLS)...
  ERROR: Test failed for KeyDB (TLS): read error on connection to 127.0.0.1:6391

Testing Dragonfly...
  Configuration: Proactor Threads: 3
  Running 13 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.52ms. Keys remaining: 0
    Iteration 1/13... 11338 ops/sec, 0.087ms latency
    Iteration 2/13... 11543 ops/sec, 0.086ms latency
    Iteration 3/13... 11571 ops/sec, 0.086ms latency
    Iteration 4/13... 11627 ops/sec, 0.085ms latency
    Iteration 5/13... 11580 ops/sec, 0.086ms latency
    Iteration 6/13... 11558 ops/sec, 0.086ms latency
    Iteration 7/13... 11821 ops/sec, 0.084ms latency
    Iteration 8/13... 11830 ops/sec, 0.084ms latency
    Iteration 9/13... 11998 ops/sec, 0.083ms latency
    Iteration 10/13... 11790 ops/sec, 0.084ms latency
    Iteration 11/13... 12022 ops/sec, 0.082ms latency
    Iteration 12/13... 12003 ops/sec, 0.083ms latency
    Iteration 13/13... 12037 ops/sec, 0.082ms latency
  Dragonfly (non-TLS): 11747.36±227.29 ops/sec (CV: 1.9%), 0.084±0.002ms latency, Quality: excellent
  Final keys in database: 395617
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6392
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:52
      Valid to: 2026-06-09 02:48:52
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:51
      Valid to: 2026-06-09 02:48:51
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6392
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_6846513a39df0...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for minimal SSL: read error on connection to 127.0.0.1:6392
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_6846513a3a03a...
      ✅ SET successful: false
      📖 Testing GET...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for with certificates: read error on connection to 127.0.0.1:6392
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_6846513a3a3e7...
      ✅ SET successful: false
      📖 Testing GET...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for full SSL context: read error on connection to 127.0.0.1:6392
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_6846513a3a7bc...
      ✅ SET successful: false
      📖 Testing GET...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for TLSv1.2: read error on connection to 127.0.0.1:6392
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Dragonfly (TLS)...
  Initial keys in database: 
  Flushing database before test...
  ERROR: Test failed for Dragonfly (TLS): read error on connection to 127.0.0.1:6392

Testing Valkey...
  Configuration: IO Threads: 3
  Running 13 iterations for Valkey (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.09ms. Keys remaining: 0
    Iteration 1/13... 15906 ops/sec, 0.062ms latency
    Iteration 2/13... 16215 ops/sec, 0.061ms latency
    Iteration 3/13... 16217 ops/sec, 0.061ms latency
    Iteration 4/13... 16515 ops/sec, 0.060ms latency
    Iteration 5/13... 16277 ops/sec, 0.061ms latency
    Iteration 6/13... 16490 ops/sec, 0.060ms latency
    Iteration 7/13... 16105 ops/sec, 0.061ms latency
    Iteration 8/13... 16764 ops/sec, 0.059ms latency
    Iteration 9/13... 16988 ops/sec, 0.058ms latency
    Iteration 10/13... 16997 ops/sec, 0.058ms latency
    Iteration 11/13... 17088 ops/sec, 0.058ms latency
    Iteration 12/13... 17275 ops/sec, 0.057ms latency
    Iteration 13/13... 17259 ops/sec, 0.057ms latency
  Valkey (non-TLS): 16622.90±465.58 ops/sec (CV: 2.8%), 0.060±0.002ms latency, Quality: good
  Final keys in database: 395773
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6393
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:52
      Valid to: 2026-06-09 02:48:52
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:51
      Valid to: 2026-06-09 02:48:51
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6393
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Valkey (TLS)...
  ERROR: Test failed for Valkey (TLS): read error on connection to 127.0.0.1:6393

Enhanced results saved:
  CSV: ./benchmarklogs-3t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-3t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-3t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-3t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 421.65 seconds
Total tests run: 4
Statistical iterations per test: 13
Results saved to ./benchmarklogs-3t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 3 | Iterations per test: 13
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey                  16623      466    2.8%  0.060ms 🟡good    16,365-16,881      ✅
#2  KeyDB                   14430      280    1.9%  0.069ms 🟢excellent 14,274-14,585      ✅
#3  Dragonfly               11747      227    1.9%  0.084ms 🟢excellent 11,621-11,873      ✅
#4  Redis                   11164      260    2.3%  0.089ms 🟡good    11,020-11,308      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 4/4
- 🏆 Best: Valkey - 16,623 ops/sec
- 📊 Average precision: 2.3% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1116/sec | Heavy pages:    223/sec
KeyDB                | Light pages:   1443/sec | Heavy pages:    289/sec
Dragonfly            | Light pages:   1175/sec | Heavy pages:    235/sec
Valkey               | Light pages:   1662/sec | Heavy pages:    332/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Valkey
- 📊 Estimated capacity: 554 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS PERFORMANCE COMPARISON
Thread Variant: 3
============================================================
No successful TLS connections for performance comparison.
All databases tested with non-TLS only.
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 3 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  🟢 Excellent :  2 tests (50.0%)
  🟡 Good      :  2 tests (50.0%)

Coefficient of Variation Analysis:
  Average CV: 2.3% (lower is better)
  Range: 1.9% - 2.8%
  📊 Good measurement consistency

Performance Analysis:
  Performance range: 11164 - 16623 ops/sec (48.9% spread)
  📈 Relatively similar performance across databases

Statistical Recommendations:
  ✅ High confidence in results - good statistical reliability
================================================================================
Enhanced WordPress Object Cache Test - Statistical Analysis
=========================================================

Checking system requirements...
✅ PHP version: 8.4.7
✅ Redis extension version: 6.2.0
✅ All system requirements met

Loading configuration from test_config.php...
✅ Configuration loaded successfully from file

============================================================
ENHANCED WORDPRESS OBJECT CACHE TEST CONFIGURATION
============================================================
Test Parameters:
  Duration per iteration: 30 seconds
  Test iterations: 13
  Iteration pause: 500ms
  Operations per iteration: 100,000
  Read/Write ratio: 70% / 30%

Statistical Analysis:
  Multi-run testing: Enabled
  Raw data logging: Enabled
  Quality assessment: Enabled (CV-based)
  Confidence intervals: 95%

Thread Configuration:
  Thread variant: 3
  redis_io_threads: 3 threads
  keydb_server_threads: 3 threads
  dragonfly_proactor_threads: 3 threads
  valkey_io_threads: 3 threads

Database Configuration:
  Redis: 127.0.0.1:6379 (TLS: 6390) [IO: 3]
  KeyDB: 127.0.0.1:6380 (TLS: 6391) [Server: 3]
  Dragonfly: 127.0.0.1:6381 (TLS: 6392) [Proactor: 3]
  Valkey: 127.0.0.1:6382 (TLS: 6393) [IO: 3]

Test Environment:
  PHP version: 8.4.7
  Redis extension: Loaded
  Redis extension version: 6.2.0
  Output directory: ./benchmarklogs-3t
  TLS testing: Enabled
  Database flush: Enabled
  Debug mode: Disabled
============================================================

Initializing WordPress Object Cache Test...

Starting WordPress Object Cache Test...
Timestamp: 2025-06-09 03:14:23 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 3
Thread Configuration:
  redis_io_threads: 3 threads
  keydb_server_threads: 3 threads
  dragonfly_proactor_threads: 3 threads
  valkey_io_threads: 3 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 3
  Running 13 iterations for Redis (non-TLS)...
  Initial keys in database: 395632
  Flushing database before test...
  Database flushed in 209.75ms. Keys remaining: 0
    Iteration 1/13... 10821 ops/sec, 0.092ms latency
    Iteration 2/13... 10853 ops/sec, 0.091ms latency
    Iteration 3/13... 10957 ops/sec, 0.091ms latency
    Iteration 4/13... 10890 ops/sec, 0.091ms latency
    Iteration 5/13... 11053 ops/sec, 0.090ms latency
    Iteration 6/13... 11073 ops/sec, 0.090ms latency
    Iteration 7/13... 11066 ops/sec, 0.090ms latency
    Iteration 8/13... 11005 ops/sec, 0.090ms latency
    Iteration 9/13... 11209 ops/sec, 0.089ms latency
    Iteration 10/13... 11241 ops/sec, 0.088ms latency
    Iteration 11/13... 11356 ops/sec, 0.087ms latency
    Iteration 12/13... 11365 ops/sec, 0.087ms latency
    Iteration 13/13... 11393 ops/sec, 0.087ms latency
  Redis (non-TLS): 11098.55±197.84 ops/sec (CV: 1.8%), 0.089±0.002ms latency, Quality: excellent
  Final keys in database: 395570
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6390
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:52
      Valid to: 2026-06-09 02:48:52
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:51
      Valid to: 2026-06-09 02:48:51
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6390
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Redis (TLS)...
  ERROR: Test failed for Redis (TLS): read error on connection to 127.0.0.1:6390

Testing KeyDB...
  Configuration: Server Threads: 3
  Running 13 iterations for KeyDB (non-TLS)...
  Initial keys in database: 396189
  Flushing database before test...
  Database flushed in 215.21ms. Keys remaining: 0
    Iteration 1/13... 14005 ops/sec, 0.071ms latency
    Iteration 2/13... 14081 ops/sec, 0.070ms latency
    Iteration 3/13... 14137 ops/sec, 0.070ms latency
    Iteration 4/13... 14146 ops/sec, 0.070ms latency
    Iteration 5/13... 14190 ops/sec, 0.070ms latency
    Iteration 6/13... 14334 ops/sec, 0.069ms latency
    Iteration 7/13... 14433 ops/sec, 0.069ms latency
    Iteration 8/13... 14300 ops/sec, 0.069ms latency
    Iteration 9/13... 14499 ops/sec, 0.068ms latency
    Iteration 10/13... 14691 ops/sec, 0.067ms latency
    Iteration 11/13... 14715 ops/sec, 0.067ms latency
    Iteration 12/13... 14776 ops/sec, 0.067ms latency
    Iteration 13/13... 14814 ops/sec, 0.067ms latency
  KeyDB (non-TLS): 14393.97±282.44 ops/sec (CV: 2.0%), 0.069±0.001ms latency, Quality: excellent
  Final keys in database: 394562
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6391
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:52
      Valid to: 2026-06-09 02:48:52
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:51
      Valid to: 2026-06-09 02:48:51
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6391
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for KeyDB (TLS)...
  ERROR: Test failed for KeyDB (TLS): read error on connection to 127.0.0.1:6391

Testing Dragonfly...
  Configuration: Proactor Threads: 3
  Running 13 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 395561
  Flushing database before test...
  Database flushed in 24.88ms. Keys remaining: 0
    Iteration 1/13... 11604 ops/sec, 0.085ms latency
    Iteration 2/13... 11633 ops/sec, 0.085ms latency
    Iteration 3/13... 11551 ops/sec, 0.086ms latency
    Iteration 4/13... 11530 ops/sec, 0.086ms latency
    Iteration 5/13... 11451 ops/sec, 0.087ms latency
    Iteration 6/13... 11422 ops/sec, 0.087ms latency
    Iteration 7/13... 11649 ops/sec, 0.085ms latency
    Iteration 8/13... 11878 ops/sec, 0.083ms latency
    Iteration 9/13... 11786 ops/sec, 0.084ms latency
    Iteration 10/13... 11618 ops/sec, 0.085ms latency
    Iteration 11/13... 11936 ops/sec, 0.083ms latency
    Iteration 12/13... 12002 ops/sec, 0.083ms latency
    Iteration 13/13... 11767 ops/sec, 0.084ms latency
  Dragonfly (non-TLS): 11678.98±182.11 ops/sec (CV: 1.6%), 0.085±0.001ms latency, Quality: excellent
  Final keys in database: 394595
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6392
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:52
      Valid to: 2026-06-09 02:48:52
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:51
      Valid to: 2026-06-09 02:48:51
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6392
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684652e1d51d1...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for minimal SSL: read error on connection to 127.0.0.1:6392
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684652e1d556f...
      ✅ SET successful: false
      📖 Testing GET...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for with certificates: read error on connection to 127.0.0.1:6392
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684652e1d57cf...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for full SSL context: read error on connection to 127.0.0.1:6392
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684652e1d59ca...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for TLSv1.2: read error on connection to 127.0.0.1:6392
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Dragonfly (TLS)...
  Initial keys in database: 
  Flushing database before test...
  ERROR: Test failed for Dragonfly (TLS): read error on connection to 127.0.0.1:6392

Testing Valkey...
  Configuration: IO Threads: 3
  Running 13 iterations for Valkey (non-TLS)...
  Initial keys in database: 395766
  Flushing database before test...
  Database flushed in 0.09ms. Keys remaining: 0
    Iteration 1/13... 16175 ops/sec, 0.061ms latency
    Iteration 2/13... 16202 ops/sec, 0.061ms latency
    Iteration 3/13... 16191 ops/sec, 0.061ms latency
    Iteration 4/13... 16603 ops/sec, 0.060ms latency
    Iteration 5/13... 16547 ops/sec, 0.060ms latency
    Iteration 6/13... 16834 ops/sec, 0.059ms latency
    Iteration 7/13... 16584 ops/sec, 0.060ms latency
    Iteration 8/13... 16938 ops/sec, 0.058ms latency
    Iteration 9/13... 17248 ops/sec, 0.057ms latency
    Iteration 10/13... 17133 ops/sec, 0.058ms latency
    Iteration 11/13... 17172 ops/sec, 0.058ms latency
    Iteration 12/13... 17314 ops/sec, 0.057ms latency
    Iteration 13/13... 17278 ops/sec, 0.057ms latency
  Valkey (non-TLS): 16786.09±430.89 ops/sec (CV: 2.6%), 0.059±0.002ms latency, Quality: good
  Final keys in database: 395228
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6393
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:52
      Valid to: 2026-06-09 02:48:52
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-09 02:48:51
      Valid to: 2026-06-09 02:48:51
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6393
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Valkey (TLS)...
  ERROR: Test failed for Valkey (TLS): read error on connection to 127.0.0.1:6393

Enhanced results saved:
  CSV: ./benchmarklogs-3t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-3t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-3t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-3t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 422.86 seconds
Total tests run: 4
Statistical iterations per test: 13
Results saved to ./benchmarklogs-3t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 3 | Iterations per test: 13
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey                  16786      431    2.6%  0.059ms 🟡good    16,547-17,025      ✅
#2  KeyDB                   14394      282    2.0%  0.069ms 🟢excellent 14,237-14,551      ✅
#3  Dragonfly               11679      182    1.6%  0.085ms 🟢excellent 11,578-11,780      ✅
#4  Redis                   11099      198    1.8%  0.089ms 🟢excellent 10,989-11,208      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 4/4
- 🏆 Best: Valkey - 16,786 ops/sec
- 📊 Average precision: 2.0% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1110/sec | Heavy pages:    222/sec
KeyDB                | Light pages:   1439/sec | Heavy pages:    288/sec
Dragonfly            | Light pages:   1168/sec | Heavy pages:    234/sec
Valkey               | Light pages:   1679/sec | Heavy pages:    336/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Valkey
- 📊 Estimated capacity: 560 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS PERFORMANCE COMPARISON
Thread Variant: 3
============================================================
No successful TLS connections for performance comparison.
All databases tested with non-TLS only.
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 3 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  🟢 Excellent :  3 tests (75.0%)
  🟡 Good      :  1 tests (25.0%)

Coefficient of Variation Analysis:
  Average CV: 2.0% (lower is better)
  Range: 1.6% - 2.6%
  📊 Excellent measurement consistency across all tests

Performance Analysis:
  Performance range: 11099 - 16786 ops/sec (51.2% spread)
  📈 Moderate performance differences between databases

Statistical Recommendations:
  ✅ High confidence in results - good statistical reliability
================================================================================

============================================================
TEST SUITE COMPLETED SUCCESSFULLY!
============================================================
Total execution time: 422.87 seconds
Statistical iterations per database: 13
Results saved to: ./benchmarklogs-3t

Generated files:
  JSON results: 2 files
  CSV exports: 1 files
  Markdown reports: 43 files
  📊 Raw data: Available

🎉 Enhanced benchmarking with statistical analysis complete!
📈 Results include confidence intervals and measurement quality indicators
📊 Use the enhanced chart generator to visualize statistical analysis

