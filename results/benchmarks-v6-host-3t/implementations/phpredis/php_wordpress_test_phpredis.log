Loaded configuration from test_config.php
Configuration: {
    "duration": 30,
    "implementation": "phpredis",
    "test_iterations": 13,
    "iteration_pause_ms": 500,
    "save_raw_results": true,
    "output_dir": ".\/benchmarklogs-3t",
    "test_tls": true,
    "flush_before_test": true,
    "debug": false,
    "thread_variant": "3",
    "thread_config": {
        "redis_io_threads": 3,
        "keydb_server_threads": 3,
        "dragonfly_proactor_threads": 3,
        "valkey_io_threads": 3
    },
    "databases": {
        "Redis": {
            "host": "127.0.0.1",
            "port": 6379,
            "tls_port": 6390,
            "io_threads": 3
        },
        "KeyDB": {
            "host": "127.0.0.1",
            "port": 6380,
            "tls_port": 6391,
            "server_threads": 3
        },
        "Dragonfly": {
            "host": "127.0.0.1",
            "port": 6381,
            "tls_port": 6392,
            "proactor_threads": 3
        },
        "Valkey": {
            "host": "127.0.0.1",
            "port": 6382,
            "tls_port": 6393,
            "io_threads": 3
        }
    }
}

Starting WordPress Object Cache Test...
Timestamp: 2025-06-08 23:02:27 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 3
Thread Configuration:
  redis_io_threads: 3 threads
  keydb_server_threads: 3 threads
  dragonfly_proactor_threads: 3 threads
  valkey_io_threads: 3 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 3
  Running 13 iterations for Redis (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.30ms. Keys remaining: 0
    Iteration 1/13... 10548 ops/sec, 0.094ms latency
    Iteration 2/13... 10662 ops/sec, 0.093ms latency
    Iteration 3/13... 10696 ops/sec, 0.093ms latency
    Iteration 4/13... 10734 ops/sec, 0.092ms latency
    Iteration 5/13... 10831 ops/sec, 0.092ms latency
    Iteration 6/13... 10926 ops/sec, 0.091ms latency
    Iteration 7/13... 10941 ops/sec, 0.091ms latency
    Iteration 8/13... 10889 ops/sec, 0.091ms latency
    Iteration 9/13... 11090 ops/sec, 0.089ms latency
    Iteration 10/13... 11183 ops/sec, 0.089ms latency
    Iteration 11/13... 11160 ops/sec, 0.089ms latency
    Iteration 12/13... 11256 ops/sec, 0.088ms latency
    Iteration 13/13... 11398 ops/sec, 0.087ms latency
  Redis (non-TLS): 10947.17±256.04 ops/sec (CV: 2.3%), 0.091±0.002ms latency, Quality: good
  Final keys in database: 395482
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6390
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
    📄 local_pk: ./client_priv.pem (1700 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6390
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Redis (TLS)...
  ERROR: Test failed for Redis (TLS): read error on connection to 127.0.0.1:6390

Testing KeyDB...
  Configuration: Server Threads: 3
  Running 13 iterations for KeyDB (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.11ms. Keys remaining: 0
    Iteration 1/13... 13901 ops/sec, 0.071ms latency
    Iteration 2/13... 13944 ops/sec, 0.071ms latency
    Iteration 3/13... 13995 ops/sec, 0.071ms latency
    Iteration 4/13... 14136 ops/sec, 0.070ms latency
    Iteration 5/13... 14222 ops/sec, 0.070ms latency
    Iteration 6/13... 14282 ops/sec, 0.069ms latency
    Iteration 7/13... 14310 ops/sec, 0.069ms latency
    Iteration 8/13... 14205 ops/sec, 0.070ms latency
    Iteration 9/13... 14476 ops/sec, 0.068ms latency
    Iteration 10/13... 14529 ops/sec, 0.068ms latency
    Iteration 11/13... 14601 ops/sec, 0.068ms latency
    Iteration 12/13... 14601 ops/sec, 0.068ms latency
    Iteration 13/13... 14742 ops/sec, 0.067ms latency
  KeyDB (non-TLS): 14303.47±270.98 ops/sec (CV: 1.9%), 0.069±0.001ms latency, Quality: excellent
  Final keys in database: 395063
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6391
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
    📄 local_pk: ./client_priv.pem (1700 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6391
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for KeyDB (TLS)...
  ERROR: Test failed for KeyDB (TLS): read error on connection to 127.0.0.1:6391

Testing Dragonfly...
  Configuration: Proactor Threads: 3
  Running 13 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.65ms. Keys remaining: 0
    Iteration 1/13... 11191 ops/sec, 0.089ms latency
    Iteration 2/13... 11187 ops/sec, 0.089ms latency
    Iteration 3/13... 11380 ops/sec, 0.087ms latency
    Iteration 4/13... 11378 ops/sec, 0.087ms latency
    Iteration 5/13... 11493 ops/sec, 0.086ms latency
    Iteration 6/13... 11426 ops/sec, 0.087ms latency
    Iteration 7/13... 11652 ops/sec, 0.085ms latency
    Iteration 8/13... 11634 ops/sec, 0.085ms latency
    Iteration 9/13... 11613 ops/sec, 0.085ms latency
    Iteration 10/13... 11506 ops/sec, 0.086ms latency
    Iteration 11/13... 11761 ops/sec, 0.084ms latency
    Iteration 12/13... 11748 ops/sec, 0.084ms latency
    Iteration 13/13... 11674 ops/sec, 0.085ms latency
  Dragonfly (non-TLS): 11510.98±191.57 ops/sec (CV: 1.7%), 0.086±0.001ms latency, Quality: excellent
  Final keys in database: 395094
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6392
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
    📄 local_pk: ./client_priv.pem (1700 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6392
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684617d984e6e...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for minimal SSL: read error on connection to 127.0.0.1:6392
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684617d9851f4...
      ✅ SET successful: false
      📖 Testing GET...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for with certificates: read error on connection to 127.0.0.1:6392
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684617d985562...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for full SSL context: read error on connection to 127.0.0.1:6392
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684617d9859ae...
      ✅ SET successful: false
      📖 Testing GET...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for TLSv1.2: read error on connection to 127.0.0.1:6392
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Dragonfly (TLS)...
  Initial keys in database: 
  Flushing database before test...
  ERROR: Test failed for Dragonfly (TLS): read error on connection to 127.0.0.1:6392

Testing Valkey...
  Configuration: IO Threads: 3
  Running 13 iterations for Valkey (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.08ms. Keys remaining: 0
    Iteration 1/13... 15872 ops/sec, 0.062ms latency
    Iteration 2/13... 16270 ops/sec, 0.061ms latency
    Iteration 3/13... 16226 ops/sec, 0.061ms latency
    Iteration 4/13... 16091 ops/sec, 0.061ms latency
    Iteration 5/13... 16378 ops/sec, 0.060ms latency
    Iteration 6/13... 16144 ops/sec, 0.061ms latency
    Iteration 7/13... 16261 ops/sec, 0.061ms latency
    Iteration 8/13... 16559 ops/sec, 0.060ms latency
    Iteration 9/13... 16664 ops/sec, 0.059ms latency
    Iteration 10/13... 16980 ops/sec, 0.058ms latency
    Iteration 11/13... 17142 ops/sec, 0.058ms latency
    Iteration 12/13... 16903 ops/sec, 0.058ms latency
    Iteration 13/13... 16668 ops/sec, 0.059ms latency
  Valkey (non-TLS): 16473.70±381.02 ops/sec (CV: 2.3%), 0.060±0.001ms latency, Quality: good
  Final keys in database: 395743
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6393
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
    📄 local_pk: ./client_priv.pem (1700 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6393
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Valkey (TLS)...
  ERROR: Test failed for Valkey (TLS): read error on connection to 127.0.0.1:6393

Enhanced results saved:
  CSV: ./benchmarklogs-3t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-3t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-3t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-3t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 427.71 seconds
Total tests run: 4
Statistical iterations per test: 13
Results saved to ./benchmarklogs-3t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 3 | Iterations per test: 13
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey                  16474      381    2.3%  0.060ms 🟡good    16,262-16,685      ✅
#2  KeyDB                   14303      271    1.9%  0.069ms 🟢excellent 14,153-14,454      ✅
#3  Dragonfly               11511      192    1.7%  0.086ms 🟢excellent 11,405-11,617      ✅
#4  Redis                   10947      256    2.3%  0.091ms 🟡good    10,805-11,089      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 4/4
- 🏆 Best: Valkey - 16,474 ops/sec
- 📊 Average precision: 2.1% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1095/sec | Heavy pages:    219/sec
KeyDB                | Light pages:   1430/sec | Heavy pages:    286/sec
Dragonfly            | Light pages:   1151/sec | Heavy pages:    230/sec
Valkey               | Light pages:   1647/sec | Heavy pages:    329/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Valkey
- 📊 Estimated capacity: 549 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS PERFORMANCE COMPARISON
Thread Variant: 3
============================================================
No successful TLS connections for performance comparison.
All databases tested with non-TLS only.
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 3 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  🟢 Excellent :  2 tests (50.0%)
  🟡 Good      :  2 tests (50.0%)

Coefficient of Variation Analysis:
  Average CV: 2.1% (lower is better)
  Range: 1.7% - 2.3%
  📊 Good measurement consistency

Performance Analysis:
  Performance range: 10947 - 16474 ops/sec (50.5% spread)
  📈 Moderate performance differences between databases

Statistical Recommendations:
  ✅ High confidence in results - good statistical reliability
================================================================================
Enhanced WordPress Object Cache Test - Statistical Analysis
=========================================================

Checking system requirements...
✅ PHP version: 8.4.7
✅ Redis extension version: 6.2.0
✅ All system requirements met

Loading configuration from test_config.php...
✅ Configuration loaded successfully from file

============================================================
ENHANCED WORDPRESS OBJECT CACHE TEST CONFIGURATION
============================================================
Test Parameters:
  Duration per iteration: 30 seconds
  Test iterations: 13
  Iteration pause: 500ms
  Operations per iteration: 100,000
  Read/Write ratio: 70% / 30%

Statistical Analysis:
  Multi-run testing: Enabled
  Raw data logging: Enabled
  Quality assessment: Enabled (CV-based)
  Confidence intervals: 95%

Thread Configuration:
  Thread variant: 3
  redis_io_threads: 3 threads
  keydb_server_threads: 3 threads
  dragonfly_proactor_threads: 3 threads
  valkey_io_threads: 3 threads

Database Configuration:
  Redis: 127.0.0.1:6379 (TLS: 6390) [IO: 3]
  KeyDB: 127.0.0.1:6380 (TLS: 6391) [Server: 3]
  Dragonfly: 127.0.0.1:6381 (TLS: 6392) [Proactor: 3]
  Valkey: 127.0.0.1:6382 (TLS: 6393) [IO: 3]

Test Environment:
  PHP version: 8.4.7
  Redis extension: Loaded
  Redis extension version: 6.2.0
  Output directory: ./benchmarklogs-3t
  TLS testing: Enabled
  Database flush: Enabled
  Debug mode: Disabled
============================================================

Initializing WordPress Object Cache Test...

Starting WordPress Object Cache Test...
Timestamp: 2025-06-08 23:09:35 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 3
Thread Configuration:
  redis_io_threads: 3 threads
  keydb_server_threads: 3 threads
  dragonfly_proactor_threads: 3 threads
  valkey_io_threads: 3 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 3
  Running 13 iterations for Redis (non-TLS)...
  Initial keys in database: 395476
  Flushing database before test...
  Database flushed in 212.39ms. Keys remaining: 0
    Iteration 1/13... 10540 ops/sec, 0.094ms latency
    Iteration 2/13... 10598 ops/sec, 0.094ms latency
    Iteration 3/13... 10699 ops/sec, 0.093ms latency
    Iteration 4/13... 10685 ops/sec, 0.093ms latency
    Iteration 5/13... 10807 ops/sec, 0.092ms latency
    Iteration 6/13... 10855 ops/sec, 0.091ms latency
    Iteration 7/13... 10928 ops/sec, 0.091ms latency
    Iteration 8/13... 10837 ops/sec, 0.092ms latency
    Iteration 9/13... 10961 ops/sec, 0.090ms latency
    Iteration 10/13... 11074 ops/sec, 0.090ms latency
    Iteration 11/13... 11145 ops/sec, 0.089ms latency
    Iteration 12/13... 11128 ops/sec, 0.089ms latency
    Iteration 13/13... 11175 ops/sec, 0.089ms latency
  Redis (non-TLS): 10879.43±211.89 ops/sec (CV: 1.9%), 0.091±0.002ms latency, Quality: excellent
  Final keys in database: 395393
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6390
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
    📄 local_pk: ./client_priv.pem (1700 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6390
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Redis (TLS)...
  ERROR: Test failed for Redis (TLS): read error on connection to 127.0.0.1:6390

Testing KeyDB...
  Configuration: Server Threads: 3
  Running 13 iterations for KeyDB (non-TLS)...
  Initial keys in database: 395055
  Flushing database before test...
  Database flushed in 206.58ms. Keys remaining: 0
    Iteration 1/13... 13830 ops/sec, 0.072ms latency
    Iteration 2/13... 13827 ops/sec, 0.072ms latency
    Iteration 3/13... 14032 ops/sec, 0.071ms latency
    Iteration 4/13... 13967 ops/sec, 0.071ms latency
    Iteration 5/13... 14184 ops/sec, 0.070ms latency
    Iteration 6/13... 14140 ops/sec, 0.070ms latency
    Iteration 7/13... 14333 ops/sec, 0.069ms latency
    Iteration 8/13... 14096 ops/sec, 0.070ms latency
    Iteration 9/13... 14470 ops/sec, 0.068ms latency
    Iteration 10/13... 14547 ops/sec, 0.068ms latency
    Iteration 11/13... 14567 ops/sec, 0.068ms latency
    Iteration 12/13... 14561 ops/sec, 0.068ms latency
    Iteration 13/13... 14668 ops/sec, 0.067ms latency
  KeyDB (non-TLS): 14247.83±294.22 ops/sec (CV: 2.1%), 0.069±0.001ms latency, Quality: good
  Final keys in database: 395106
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6391
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
    📄 local_pk: ./client_priv.pem (1700 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6391
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for KeyDB (TLS)...
  ERROR: Test failed for KeyDB (TLS): read error on connection to 127.0.0.1:6391

Testing Dragonfly...
  Configuration: Proactor Threads: 3
  Running 13 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 395027
  Flushing database before test...
  Database flushed in 24.30ms. Keys remaining: 0
    Iteration 1/13... 11383 ops/sec, 0.087ms latency
    Iteration 2/13... 11493 ops/sec, 0.086ms latency
    Iteration 3/13... 11443 ops/sec, 0.087ms latency
    Iteration 4/13... 11314 ops/sec, 0.088ms latency
    Iteration 5/13... 11414 ops/sec, 0.087ms latency
    Iteration 6/13... 11529 ops/sec, 0.086ms latency
    Iteration 7/13... 11573 ops/sec, 0.086ms latency
    Iteration 8/13... 11698 ops/sec, 0.085ms latency
    Iteration 9/13... 11750 ops/sec, 0.084ms latency
    Iteration 10/13... 11533 ops/sec, 0.086ms latency
    Iteration 11/13... 11855 ops/sec, 0.084ms latency
    Iteration 12/13... 11765 ops/sec, 0.084ms latency
    Iteration 13/13... 11863 ops/sec, 0.083ms latency
  Dragonfly (non-TLS): 11585.67±182.59 ops/sec (CV: 1.6%), 0.086±0.001ms latency, Quality: excellent
  Final keys in database: 395285
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6392
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
    📄 local_pk: ./client_priv.pem (1700 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6392
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684619860c469...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for minimal SSL: read error on connection to 127.0.0.1:6392
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684619860c676...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for with certificates: read error on connection to 127.0.0.1:6392
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684619860cc25...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for full SSL context: read error on connection to 127.0.0.1:6392
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684619860cfa5...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for TLSv1.2: read error on connection to 127.0.0.1:6392
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Dragonfly (TLS)...
  Initial keys in database: 
  Flushing database before test...
  ERROR: Test failed for Dragonfly (TLS): read error on connection to 127.0.0.1:6392

Testing Valkey...
  Configuration: IO Threads: 3
  Running 13 iterations for Valkey (non-TLS)...
  Initial keys in database: 395730
  Flushing database before test...
  Database flushed in 0.07ms. Keys remaining: 0
    Iteration 1/13... 16237 ops/sec, 0.061ms latency
    Iteration 2/13... 16253 ops/sec, 0.061ms latency
    Iteration 3/13... 16119 ops/sec, 0.061ms latency
    Iteration 4/13... 16595 ops/sec, 0.060ms latency
    Iteration 5/13... 16416 ops/sec, 0.060ms latency
    Iteration 6/13... 16512 ops/sec, 0.060ms latency
    Iteration 7/13... 16427 ops/sec, 0.060ms latency
    Iteration 8/13... 16379 ops/sec, 0.060ms latency
    Iteration 9/13... 16922 ops/sec, 0.058ms latency
    Iteration 10/13... 16849 ops/sec, 0.059ms latency
    Iteration 11/13... 16734 ops/sec, 0.059ms latency
    Iteration 12/13... 17096 ops/sec, 0.058ms latency
    Iteration 13/13... 17136 ops/sec, 0.058ms latency
  Valkey (non-TLS): 16590.41±331.58 ops/sec (CV: 2.0%), 0.060±0.001ms latency, Quality: excellent
  Final keys in database: 395034
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6393
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
    📄 local_pk: ./client_priv.pem (1700 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6393
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Valkey (TLS)...
  ERROR: Test failed for Valkey (TLS): read error on connection to 127.0.0.1:6393

Enhanced results saved:
  CSV: ./benchmarklogs-3t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-3t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-3t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-3t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 427.93 seconds
Total tests run: 4
Statistical iterations per test: 13
Results saved to ./benchmarklogs-3t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 3 | Iterations per test: 13
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey                  16590      332    2.0%  0.060ms 🟢excellent 16,406-16,774      ✅
#2  KeyDB                   14248      294    2.1%  0.069ms 🟡good    14,085-14,411      ✅
#3  Dragonfly               11586      183    1.6%  0.086ms 🟢excellent 11,484-11,687      ✅
#4  Redis                   10879      212    1.9%  0.091ms 🟢excellent 10,762-10,997      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 4/4
- 🏆 Best: Valkey - 16,590 ops/sec
- 📊 Average precision: 1.9% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1088/sec | Heavy pages:    218/sec
KeyDB                | Light pages:   1425/sec | Heavy pages:    285/sec
Dragonfly            | Light pages:   1159/sec | Heavy pages:    232/sec
Valkey               | Light pages:   1659/sec | Heavy pages:    332/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Valkey
- 📊 Estimated capacity: 553 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS PERFORMANCE COMPARISON
Thread Variant: 3
============================================================
No successful TLS connections for performance comparison.
All databases tested with non-TLS only.
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 3 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  🟢 Excellent :  3 tests (75.0%)
  🟡 Good      :  1 tests (25.0%)

Coefficient of Variation Analysis:
  Average CV: 1.9% (lower is better)
  Range: 1.6% - 2.1%
  📊 Excellent measurement consistency across all tests

Performance Analysis:
  Performance range: 10879 - 16590 ops/sec (52.5% spread)
  📈 Moderate performance differences between databases

Statistical Recommendations:
  ✅ High confidence in results - good statistical reliability
================================================================================

============================================================
TEST SUITE COMPLETED SUCCESSFULLY!
============================================================
Total execution time: 427.94 seconds
Statistical iterations per database: 13
Results saved to: ./benchmarklogs-3t

Generated files:
  JSON results: 2 files
  CSV exports: 1 files
  Markdown reports: 43 files
  📊 Raw data: Available

🎉 Enhanced benchmarking with statistical analysis complete!
📈 Results include confidence intervals and measurement quality indicators
📊 Use the enhanced chart generator to visualize statistical analysis

