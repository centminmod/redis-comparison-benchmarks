Loaded configuration from test_config.php
Configuration: {
    "duration": 30,
    "implementation": "phpredis",
    "test_iterations": 13,
    "iteration_pause_ms": 500,
    "save_raw_results": true,
    "output_dir": ".\/benchmarklogs-4t",
    "test_tls": true,
    "flush_before_test": true,
    "debug": false,
    "thread_variant": "4",
    "thread_config": {
        "redis_io_threads": 4,
        "keydb_server_threads": 4,
        "dragonfly_proactor_threads": 4,
        "valkey_io_threads": 4
    },
    "databases": {
        "Redis": {
            "host": "127.0.0.1",
            "port": 6379,
            "tls_port": 6390,
            "io_threads": 4
        },
        "KeyDB": {
            "host": "127.0.0.1",
            "port": 6380,
            "tls_port": 6391,
            "server_threads": 4
        },
        "Dragonfly": {
            "host": "127.0.0.1",
            "port": 6381,
            "tls_port": 6392,
            "proactor_threads": 4
        },
        "Valkey": {
            "host": "127.0.0.1",
            "port": 6382,
            "tls_port": 6393,
            "io_threads": 4
        }
    }
}

Starting WordPress Object Cache Test...
Timestamp: 2025-06-08 23:02:29 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 4
Thread Configuration:
  redis_io_threads: 4 threads
  keydb_server_threads: 4 threads
  dragonfly_proactor_threads: 4 threads
  valkey_io_threads: 4 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 4
  Running 13 iterations for Redis (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.29ms. Keys remaining: 0
    Iteration 1/13... 10702 ops/sec, 0.093ms latency
    Iteration 2/13... 10692 ops/sec, 0.093ms latency
    Iteration 3/13... 10651 ops/sec, 0.093ms latency
    Iteration 4/13... 10778 ops/sec, 0.092ms latency
    Iteration 5/13... 10890 ops/sec, 0.091ms latency
    Iteration 6/13... 10900 ops/sec, 0.091ms latency
    Iteration 7/13... 11040 ops/sec, 0.090ms latency
    Iteration 8/13... 10984 ops/sec, 0.090ms latency
    Iteration 9/13... 11054 ops/sec, 0.090ms latency
    Iteration 10/13... 11094 ops/sec, 0.089ms latency
    Iteration 11/13... 11254 ops/sec, 0.088ms latency
    Iteration 12/13... 11236 ops/sec, 0.088ms latency
    Iteration 13/13... 11251 ops/sec, 0.088ms latency
  Redis (non-TLS): 10963.42±215.38 ops/sec (CV: 2.0%), 0.091±0.002ms latency, Quality: excellent
  Final keys in database: 394815
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6390
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:11
      Valid to: 2026-06-08 22:44:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6390
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Redis (TLS)...
  ERROR: Test failed for Redis (TLS): read error on connection to 127.0.0.1:6390

Testing KeyDB...
  Configuration: Server Threads: 4
  Running 13 iterations for KeyDB (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.10ms. Keys remaining: 0
    Iteration 1/13... 13793 ops/sec, 0.072ms latency
    Iteration 2/13... 13815 ops/sec, 0.072ms latency
    Iteration 3/13... 13873 ops/sec, 0.071ms latency
    Iteration 4/13... 13856 ops/sec, 0.071ms latency
    Iteration 5/13... 14037 ops/sec, 0.071ms latency
    Iteration 6/13... 14122 ops/sec, 0.070ms latency
    Iteration 7/13... 14191 ops/sec, 0.070ms latency
    Iteration 8/13... 14209 ops/sec, 0.070ms latency
    Iteration 9/13... 14313 ops/sec, 0.069ms latency
    Iteration 10/13... 14378 ops/sec, 0.069ms latency
    Iteration 11/13... 14539 ops/sec, 0.068ms latency
    Iteration 12/13... 14475 ops/sec, 0.068ms latency
    Iteration 13/13... 14566 ops/sec, 0.068ms latency
  KeyDB (non-TLS): 14166.70±277.92 ops/sec (CV: 2.0%), 0.070±0.001ms latency, Quality: excellent
  Final keys in database: 395473
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6391
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:11
      Valid to: 2026-06-08 22:44:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6391
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for KeyDB (TLS)...
  ERROR: Test failed for KeyDB (TLS): read error on connection to 127.0.0.1:6391

Testing Dragonfly...
  Configuration: Proactor Threads: 4
  Running 13 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.53ms. Keys remaining: 0
    Iteration 1/13... 11328 ops/sec, 0.088ms latency
    Iteration 2/13... 11393 ops/sec, 0.087ms latency
    Iteration 3/13... 11181 ops/sec, 0.089ms latency
    Iteration 4/13... 11295 ops/sec, 0.088ms latency
    Iteration 5/13... 11576 ops/sec, 0.086ms latency
    Iteration 6/13... 11631 ops/sec, 0.085ms latency
    Iteration 7/13... 11657 ops/sec, 0.085ms latency
    Iteration 8/13... 11735 ops/sec, 0.085ms latency
    Iteration 9/13... 11638 ops/sec, 0.085ms latency
    Iteration 10/13... 11678 ops/sec, 0.085ms latency
    Iteration 11/13... 11669 ops/sec, 0.085ms latency
    Iteration 12/13... 11768 ops/sec, 0.084ms latency
    Iteration 13/13... 11609 ops/sec, 0.085ms latency
  Dragonfly (non-TLS): 11550.56±186.49 ops/sec (CV: 1.6%), 0.086±0.001ms latency, Quality: excellent
  Final keys in database: 394667
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6392
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:11
      Valid to: 2026-06-08 22:44:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6392
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684617dbde154...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for minimal SSL: read error on connection to 127.0.0.1:6392
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684617dbde30f...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for with certificates: read error on connection to 127.0.0.1:6392
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684617dbde730...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for full SSL context: read error on connection to 127.0.0.1:6392
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684617dbdeb4f...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for TLSv1.2: read error on connection to 127.0.0.1:6392
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Dragonfly (TLS)...
  Initial keys in database: 
  Flushing database before test...
  ERROR: Test failed for Dragonfly (TLS): read error on connection to 127.0.0.1:6392

Testing Valkey...
  Configuration: IO Threads: 4
  Running 13 iterations for Valkey (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.10ms. Keys remaining: 0
    Iteration 1/13... 16021 ops/sec, 0.062ms latency
    Iteration 2/13... 16049 ops/sec, 0.062ms latency
    Iteration 3/13... 16007 ops/sec, 0.062ms latency
    Iteration 4/13... 16183 ops/sec, 0.061ms latency
    Iteration 5/13... 16401 ops/sec, 0.060ms latency
    Iteration 6/13... 16129 ops/sec, 0.061ms latency
    Iteration 7/13... 16323 ops/sec, 0.061ms latency
    Iteration 8/13... 16399 ops/sec, 0.060ms latency
    Iteration 9/13... 16556 ops/sec, 0.060ms latency
    Iteration 10/13... 16735 ops/sec, 0.059ms latency
    Iteration 11/13... 16736 ops/sec, 0.059ms latency
    Iteration 12/13... 16428 ops/sec, 0.060ms latency
    Iteration 13/13... 16900 ops/sec, 0.059ms latency
  Valkey (non-TLS): 16374.23±294.26 ops/sec (CV: 1.8%), 0.060±0.001ms latency, Quality: excellent
  Final keys in database: 395330
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6393
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:11
      Valid to: 2026-06-08 22:44:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6393
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Valkey (TLS)...
  ERROR: Test failed for Valkey (TLS): read error on connection to 127.0.0.1:6393

Enhanced results saved:
  CSV: ./benchmarklogs-4t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-4t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-4t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-4t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 428.46 seconds
Total tests run: 4
Statistical iterations per test: 13
Results saved to ./benchmarklogs-4t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 4 | Iterations per test: 13
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey                  16374      294    1.8%  0.060ms 🟢excellent 16,211-16,537      ✅
#2  KeyDB                   14167      278    2.0%  0.070ms 🟢excellent 14,013-14,321      ✅
#3  Dragonfly               11551      186    1.6%  0.086ms 🟢excellent 11,447-11,654      ✅
#4  Redis                   10963      215    2.0%  0.091ms 🟢excellent 10,844-11,083      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 4/4
- 🏆 Best: Valkey - 16,374 ops/sec
- 📊 Average precision: 1.8% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1096/sec | Heavy pages:    219/sec
KeyDB                | Light pages:   1417/sec | Heavy pages:    283/sec
Dragonfly            | Light pages:   1155/sec | Heavy pages:    231/sec
Valkey               | Light pages:   1637/sec | Heavy pages:    327/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Valkey
- 📊 Estimated capacity: 546 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS PERFORMANCE COMPARISON
Thread Variant: 4
============================================================
No successful TLS connections for performance comparison.
All databases tested with non-TLS only.
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 4 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  🟢 Excellent :  4 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 1.8% (lower is better)
  Range: 1.6% - 2.0%
  📊 Excellent measurement consistency across all tests

Performance Analysis:
  Performance range: 10963 - 16374 ops/sec (49.4% spread)
  📈 Relatively similar performance across databases

Statistical Recommendations:
  ✅ High confidence in results - good statistical reliability
================================================================================
Enhanced WordPress Object Cache Test - Statistical Analysis
=========================================================

Checking system requirements...
✅ PHP version: 8.4.7
✅ Redis extension version: 6.2.0
✅ All system requirements met

Loading configuration from test_config.php...
✅ Configuration loaded successfully from file

============================================================
ENHANCED WORDPRESS OBJECT CACHE TEST CONFIGURATION
============================================================
Test Parameters:
  Duration per iteration: 30 seconds
  Test iterations: 13
  Iteration pause: 500ms
  Operations per iteration: 100,000
  Read/Write ratio: 70% / 30%

Statistical Analysis:
  Multi-run testing: Enabled
  Raw data logging: Enabled
  Quality assessment: Enabled (CV-based)
  Confidence intervals: 95%

Thread Configuration:
  Thread variant: 4
  redis_io_threads: 4 threads
  keydb_server_threads: 4 threads
  dragonfly_proactor_threads: 4 threads
  valkey_io_threads: 4 threads

Database Configuration:
  Redis: 127.0.0.1:6379 (TLS: 6390) [IO: 4]
  KeyDB: 127.0.0.1:6380 (TLS: 6391) [Server: 4]
  Dragonfly: 127.0.0.1:6381 (TLS: 6392) [Proactor: 4]
  Valkey: 127.0.0.1:6382 (TLS: 6393) [IO: 4]

Test Environment:
  PHP version: 8.4.7
  Redis extension: Loaded
  Redis extension version: 6.2.0
  Output directory: ./benchmarklogs-4t
  TLS testing: Enabled
  Database flush: Enabled
  Debug mode: Disabled
============================================================

Initializing WordPress Object Cache Test...

Starting WordPress Object Cache Test...
Timestamp: 2025-06-08 23:09:37 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 4
Thread Configuration:
  redis_io_threads: 4 threads
  keydb_server_threads: 4 threads
  dragonfly_proactor_threads: 4 threads
  valkey_io_threads: 4 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 4
  Running 13 iterations for Redis (non-TLS)...
  Initial keys in database: 394813
  Flushing database before test...
  Database flushed in 198.87ms. Keys remaining: 0
    Iteration 1/13... 10646 ops/sec, 0.093ms latency
    Iteration 2/13... 10630 ops/sec, 0.093ms latency
    Iteration 3/13... 10697 ops/sec, 0.093ms latency
    Iteration 4/13... 10743 ops/sec, 0.092ms latency
    Iteration 5/13... 10882 ops/sec, 0.091ms latency
    Iteration 6/13... 10905 ops/sec, 0.091ms latency
    Iteration 7/13... 10982 ops/sec, 0.090ms latency
    Iteration 8/13... 10885 ops/sec, 0.091ms latency
    Iteration 9/13... 11149 ops/sec, 0.089ms latency
    Iteration 10/13... 11107 ops/sec, 0.089ms latency
    Iteration 11/13... 11162 ops/sec, 0.089ms latency
    Iteration 12/13... 11246 ops/sec, 0.088ms latency
    Iteration 13/13... 11218 ops/sec, 0.088ms latency
  Redis (non-TLS): 10942.42±220.17 ops/sec (CV: 2.0%), 0.091±0.002ms latency, Quality: good
  Final keys in database: 395981
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6390
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:11
      Valid to: 2026-06-08 22:44:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6390
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: Connection lost
    ⚠️ Command test failed for minimal SSL: Connection lost
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: Connection lost
    ⚠️ Command test failed for TLSv1.2: Connection lost
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Redis (TLS)...
  ERROR: Test failed for Redis (TLS): Connection lost

Testing KeyDB...
  Configuration: Server Threads: 4
  Running 13 iterations for KeyDB (non-TLS)...
  Initial keys in database: 395465
  Flushing database before test...
  Database flushed in 204.58ms. Keys remaining: 0
    Iteration 1/13... 13718 ops/sec, 0.072ms latency
    Iteration 2/13... 13769 ops/sec, 0.072ms latency
    Iteration 3/13... 13828 ops/sec, 0.072ms latency
    Iteration 4/13... 13921 ops/sec, 0.071ms latency
    Iteration 5/13... 14050 ops/sec, 0.070ms latency
    Iteration 6/13... 13978 ops/sec, 0.071ms latency
    Iteration 7/13... 14180 ops/sec, 0.070ms latency
    Iteration 8/13... 14161 ops/sec, 0.070ms latency
    Iteration 9/13... 14303 ops/sec, 0.069ms latency
    Iteration 10/13... 14330 ops/sec, 0.069ms latency
    Iteration 11/13... 14399 ops/sec, 0.069ms latency
    Iteration 12/13... 14439 ops/sec, 0.069ms latency
    Iteration 13/13... 14491 ops/sec, 0.068ms latency
  KeyDB (non-TLS): 14120.57±263.79 ops/sec (CV: 1.9%), 0.070±0.001ms latency, Quality: excellent
  Final keys in database: 395376
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6391
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:11
      Valid to: 2026-06-08 22:44:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6391
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for KeyDB (TLS)...
  ERROR: Test failed for KeyDB (TLS): read error on connection to 127.0.0.1:6391

Testing Dragonfly...
  Configuration: Proactor Threads: 4
  Running 13 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 394593
  Flushing database before test...
  Database flushed in 23.33ms. Keys remaining: 0
    Iteration 1/13... 11503 ops/sec, 0.086ms latency
    Iteration 2/13... 11373 ops/sec, 0.087ms latency
    Iteration 3/13... 11087 ops/sec, 0.089ms latency
    Iteration 4/13... 11352 ops/sec, 0.087ms latency
    Iteration 5/13... 11440 ops/sec, 0.087ms latency
    Iteration 6/13... 11413 ops/sec, 0.087ms latency
    Iteration 7/13... 11628 ops/sec, 0.085ms latency
    Iteration 8/13... 11678 ops/sec, 0.085ms latency
    Iteration 9/13... 11554 ops/sec, 0.086ms latency
    Iteration 10/13... 11603 ops/sec, 0.085ms latency
    Iteration 11/13... 11780 ops/sec, 0.084ms latency
    Iteration 12/13... 11720 ops/sec, 0.085ms latency
    Iteration 13/13... 11701 ops/sec, 0.085ms latency
  Dragonfly (non-TLS): 11525.59±191.35 ops/sec (CV: 1.7%), 0.086±0.001ms latency, Quality: excellent
  Final keys in database: 395072
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6392
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:11
      Valid to: 2026-06-08 22:44:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6392
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684619898d996...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for minimal SSL: read error on connection to 127.0.0.1:6392
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684619898db55...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for with certificates: read error on connection to 127.0.0.1:6392
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684619898dd52...
      ✅ SET successful: false
      📖 Testing GET...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for full SSL context: read error on connection to 127.0.0.1:6392
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ✅ PING successful: false
      💾 Testing SET with key: tls_test_684619898e078...
      ❌ Command failed: read error on connection to 127.0.0.1:6392
      🔍 Error details: RedisException
      📊 Server still responsive, got info: non-array
    ⚠️ Command test failed for TLSv1.2: read error on connection to 127.0.0.1:6392
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Dragonfly (TLS)...
  Initial keys in database: 
  Flushing database before test...
  ERROR: Test failed for Dragonfly (TLS): read error on connection to 127.0.0.1:6392

Testing Valkey...
  Configuration: IO Threads: 4
  Running 13 iterations for Valkey (non-TLS)...
  Initial keys in database: 395324
  Flushing database before test...
  Database flushed in 0.08ms. Keys remaining: 0
    Iteration 1/13... 15855 ops/sec, 0.062ms latency
    Iteration 2/13... 15827 ops/sec, 0.063ms latency
    Iteration 3/13... 15855 ops/sec, 0.062ms latency
    Iteration 4/13... 16455 ops/sec, 0.060ms latency
    Iteration 5/13... 16477 ops/sec, 0.060ms latency
    Iteration 6/13... 16340 ops/sec, 0.061ms latency
    Iteration 7/13... 16075 ops/sec, 0.062ms latency
    Iteration 8/13... 16290 ops/sec, 0.061ms latency
    Iteration 9/13... 16426 ops/sec, 0.060ms latency
    Iteration 10/13... 16833 ops/sec, 0.059ms latency
    Iteration 11/13... 16764 ops/sec, 0.059ms latency
    Iteration 12/13... 16552 ops/sec, 0.060ms latency
    Iteration 13/13... 16799 ops/sec, 0.059ms latency
  Valkey (non-TLS): 16349.85±356.25 ops/sec (CV: 2.2%), 0.061±0.001ms latency, Quality: good
  Final keys in database: 395474
  🔐 Starting detailed TLS connection debugging for 127.0.0.1:6393
    🔍 Debugging certificate files:
    📄 local_cert: ./client_cert.pem (1233 bytes, perms: 0644)
      Subject CN: test.server.com
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:11
      Valid to: 2026-06-08 22:44:11
    📄 local_pk: ./client_priv.pem (1704 bytes, perms: 0600)
    📄 cafile: ./ca.crt (1338 bytes, perms: 0644)
      Subject CN: CA
      Issuer CN: CA
      Valid from: 2025-06-08 22:44:10
      Valid to: 2026-06-08 22:44:10
  📡 Test 1: Raw SSL socket connection...
    🔍 Testing raw SSL socket to 127.0.0.1:6393
    ✅ Raw SSL socket connection successful
    📜 Server certificate subject: test.com
    📜 Server certificate issuer: CA
  📡 Test 2: Minimal SSL context with TLSv1.2...
    🔧 Testing: minimal SSL
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for minimal SSL: socket error on read socket
  📡 Test 3: SSL context with certificates and TLSv1.2...
    🔧 Testing: with certificates
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","crypto_method"]
    ✅ Redis TLS connection successful with with certificates
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for with certificates: socket error on read socket
  📡 Test 4: Full SSL context with all options and TLSv1.2...
    🔧 Testing: full SSL context
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","local_cert","local_pk","cafile","capture_peer_cert","disable_compression","SNI_enabled","crypto_method"]
    ✅ Redis TLS connection successful with full SSL context
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for full SSL context: socket error on read socket
  📡 Test 5: TLSv1.2 fallback test...
    🔧 Testing: TLSv1.2
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with TLSv1.2
    🧪 Testing Redis commands over TLS...
      📞 Testing PING...
      ❌ PING failed: socket error on read socket
    ⚠️ Command test failed for TLSv1.2: socket error on read socket
  📡 Test 6: Minimal SSL without command validation...
    🔧 Testing: minimal SSL (no command test)
    📋 SSL Context: ["verify_peer","verify_peer_name","allow_self_signed","crypto_method"]
    ✅ Redis TLS connection successful with minimal SSL (no command test)
    ⏭️ Skipping command test as requested
  ⚠️ WARNING: Using TLS connection without command validation
  ⚠️ Commands may fail during actual test - this is a known issue
  Running 13 iterations for Valkey (TLS)...
  ERROR: Test failed for Valkey (TLS): read error on connection to 127.0.0.1:6393

Enhanced results saved:
  CSV: ./benchmarklogs-4t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-4t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-4t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-4t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 429.79 seconds
Total tests run: 4
Statistical iterations per test: 13
Results saved to ./benchmarklogs-4t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 4 | Iterations per test: 13
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey                  16350      356    2.2%  0.061ms 🟡good    16,152-16,547      ✅
#2  KeyDB                   14121      264    1.9%  0.070ms 🟢excellent 13,974-14,267      ✅
#3  Dragonfly               11526      191    1.7%  0.086ms 🟢excellent 11,419-11,632      ✅
#4  Redis                   10942      220    2.0%  0.091ms 🟡good    10,820-11,065      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 4/4
- 🏆 Best: Valkey - 16,350 ops/sec
- 📊 Average precision: 1.9% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1094/sec | Heavy pages:    219/sec
KeyDB                | Light pages:   1412/sec | Heavy pages:    282/sec
Dragonfly            | Light pages:   1153/sec | Heavy pages:    231/sec
Valkey               | Light pages:   1635/sec | Heavy pages:    327/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Valkey
- 📊 Estimated capacity: 545 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS PERFORMANCE COMPARISON
Thread Variant: 4
============================================================
No successful TLS connections for performance comparison.
All databases tested with non-TLS only.
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 4 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  🟢 Excellent :  2 tests (50.0%)
  🟡 Good      :  2 tests (50.0%)

Coefficient of Variation Analysis:
  Average CV: 1.9% (lower is better)
  Range: 1.7% - 2.2%
  📊 Excellent measurement consistency across all tests

Performance Analysis:
  Performance range: 10942 - 16350 ops/sec (49.4% spread)
  📈 Relatively similar performance across databases

Statistical Recommendations:
  ✅ High confidence in results - good statistical reliability
================================================================================

============================================================
TEST SUITE COMPLETED SUCCESSFULLY!
============================================================
Total execution time: 429.80 seconds
Statistical iterations per database: 13
Results saved to: ./benchmarklogs-4t

Generated files:
  JSON results: 2 files
  CSV exports: 1 files
  Markdown reports: 43 files
  📊 Raw data: Available

🎉 Enhanced benchmarking with statistical analysis complete!
📈 Results include confidence intervals and measurement quality indicators
📊 Use the enhanced chart generator to visualize statistical analysis

