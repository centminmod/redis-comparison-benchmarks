Loaded configuration from test_config.php
Configuration: {
    "duration": 10,
    "implementation": "phpredis",
    "test_iterations": 5,
    "iteration_pause_ms": 500,
    "save_raw_results": true,
    "output_dir": ".\/benchmarklogs-4t",
    "test_tls": true,
    "flush_before_test": true,
    "debug": false,
    "thread_variant": "4",
    "thread_config": {
        "redis_io_threads": 4,
        "keydb_server_threads": 4,
        "dragonfly_proactor_threads": 4,
        "valkey_io_threads": 4
    },
    "databases": {
        "Redis": {
            "host": "127.0.0.1",
            "port": 6379,
            "tls_port": 6390,
            "io_threads": 4
        },
        "KeyDB": {
            "host": "127.0.0.1",
            "port": 6380,
            "tls_port": 6391,
            "server_threads": 4
        },
        "Dragonfly": {
            "host": "127.0.0.1",
            "port": 6381,
            "tls_port": 6392,
            "proactor_threads": 4
        },
        "Valkey": {
            "host": "127.0.0.1",
            "port": 6382,
            "tls_port": 6393,
            "io_threads": 4
        }
    }
}

Starting WordPress Object Cache Test...
Timestamp: 2025-06-10 10:43:09 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 5
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 4
Thread Configuration:
  redis_io_threads: 4 threads
  keydb_server_threads: 4 threads
  dragonfly_proactor_threads: 4 threads
  valkey_io_threads: 4 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 4
  Running 5 iterations for Redis (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.31ms. Keys remaining: 0
    Iteration 1/5... 10365 ops/sec, 0.096ms latency
    Iteration 2/5... 10465 ops/sec, 0.095ms latency
    Iteration 3/5... 10480 ops/sec, 0.095ms latency
    Iteration 4/5... 10432 ops/sec, 0.095ms latency
    Iteration 5/5... 10644 ops/sec, 0.093ms latency
  Redis (non-TLS): 10477.31±103.11 ops/sec (CV: 1.0%), 0.095±0.001ms latency, Quality: excellent
  Final keys in database: 190151
🔐 Attempting TLS connection to Redis at 127.0.0.1:6390
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  📡 Method 1: Using tls:// scheme with custom port 6390...
  ✅ TLS connection successful with tls://localhost:6390
  🧪 Testing basic command over TLS...
  ✅ PING successful over TLS
  Running 5 iterations for Redis (TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.37ms. Keys remaining: 0
    Iteration 1/5... 8390 ops/sec, 0.118ms latency
    Iteration 2/5... 8403 ops/sec, 0.118ms latency
    Iteration 3/5... 8496 ops/sec, 0.117ms latency
    Iteration 4/5... 8469 ops/sec, 0.117ms latency
    Iteration 5/5... 8521 ops/sec, 0.116ms latency
  Redis (TLS): 8455.82±57.36 ops/sec (CV: 0.7%), 0.117±0.001ms latency, Quality: excellent
  Final keys in database: 164462

Testing KeyDB...
  Configuration: Server Threads: 4
  Running 5 iterations for KeyDB (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.29ms. Keys remaining: 0
    Iteration 1/5... 13570 ops/sec, 0.073ms latency
    Iteration 2/5... 13596 ops/sec, 0.073ms latency
    Iteration 3/5... 13846 ops/sec, 0.071ms latency
    Iteration 4/5... 13743 ops/sec, 0.072ms latency
    Iteration 5/5... 13893 ops/sec, 0.071ms latency
  KeyDB (non-TLS): 13729.60±144.63 ops/sec (CV: 1.1%), 0.072±0.001ms latency, Quality: excellent
  Final keys in database: 190227
🔐 Attempting TLS connection to KeyDB at 127.0.0.1:6391
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  📡 Method 1: Using tls:// scheme with custom port 6391...
  ✅ TLS connection successful with tls://localhost:6391
  🧪 Testing basic command over TLS...
  ✅ PING successful over TLS
  Running 5 iterations for KeyDB (TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.36ms. Keys remaining: 0
    Iteration 1/5... 10789 ops/sec, 0.092ms latency
    Iteration 2/5... 10711 ops/sec, 0.093ms latency
    Iteration 3/5... 10830 ops/sec, 0.092ms latency
    Iteration 4/5... 10849 ops/sec, 0.091ms latency
    Iteration 5/5... 10887 ops/sec, 0.091ms latency
  KeyDB (TLS): 10813.12±67.19 ops/sec (CV: 0.6%), 0.092±0.001ms latency, Quality: excellent
  Final keys in database: 190212

Testing Dragonfly...
  Configuration: Proactor Threads: 4
  Running 5 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.82ms. Keys remaining: 0
    Iteration 1/5... 11109 ops/sec, 0.089ms latency
    Iteration 2/5... 11196 ops/sec, 0.089ms latency
    Iteration 3/5... 11287 ops/sec, 0.088ms latency
    Iteration 4/5... 11249 ops/sec, 0.088ms latency
    Iteration 5/5... 11298 ops/sec, 0.088ms latency
  Dragonfly (non-TLS): 11227.75±77.55 ops/sec (CV: 0.7%), 0.088±0.001ms latency, Quality: excellent
  Final keys in database: 190408
🔐 Attempting TLS connection to Dragonfly at 127.0.0.1:6392
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  📡 Method 1: Using tls:// scheme with custom port 6392...
  ✅ TLS connection successful with tls://localhost:6392
  🔐 Authenticating to Dragonfly with password...
  ✅ Authentication successful to Dragonfly
  🧪 Testing basic command over TLS...
  ✅ PING successful over TLS
  Running 5 iterations for Dragonfly (TLS)...
  Initial keys in database: 144180
  Flushing database before test...
  Database flushed in 5.28ms. Keys remaining: 0
    Iteration 1/5... 8137 ops/sec, 0.122ms latency
    Iteration 2/5... 8248 ops/sec, 0.120ms latency
    Iteration 3/5... 8280 ops/sec, 0.120ms latency
    Iteration 4/5... 8157 ops/sec, 0.122ms latency
    Iteration 5/5... 8422 ops/sec, 0.118ms latency
  Dragonfly (TLS): 8248.78±113.99 ops/sec (CV: 1.4%), 0.120±0.002ms latency, Quality: excellent
  Final keys in database: 161129

Testing Valkey...
  Configuration: IO Threads: 4
  Running 5 iterations for Valkey (non-TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.44ms. Keys remaining: 0
    Iteration 1/5... 15765 ops/sec, 0.063ms latency
    Iteration 2/5... 15787 ops/sec, 0.063ms latency
    Iteration 3/5... 15571 ops/sec, 0.064ms latency
    Iteration 4/5... 15935 ops/sec, 0.062ms latency
    Iteration 5/5... 16169 ops/sec, 0.061ms latency
  Valkey (non-TLS): 15845.51±222.69 ops/sec (CV: 1.4%), 0.062±0.001ms latency, Quality: excellent
  Final keys in database: 190149
🔐 Attempting TLS connection to Valkey at 127.0.0.1:6393
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  📡 Method 1: Using tls:// scheme with custom port 6393...
  ✅ TLS connection successful with tls://localhost:6393
  🧪 Testing basic command over TLS...
  ✅ PING successful over TLS
  Running 5 iterations for Valkey (TLS)...
  Initial keys in database: 0
  Flushing database before test...
  Database flushed in 0.12ms. Keys remaining: 0
    Iteration 1/5... 12098 ops/sec, 0.082ms latency
    Iteration 2/5... 12086 ops/sec, 0.082ms latency
    Iteration 3/5... 12154 ops/sec, 0.082ms latency
    Iteration 4/5... 12098 ops/sec, 0.082ms latency
    Iteration 5/5... 12272 ops/sec, 0.081ms latency
  Valkey (TLS): 12141.53±77.42 ops/sec (CV: 0.6%), 0.082±0.001ms latency, Quality: excellent
  Final keys in database: 189865

Enhanced results saved:
  CSV: ./benchmarklogs-4t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-4t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-4t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-4t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 365.15 seconds
Total tests run: 8
Statistical iterations per test: 5
Results saved to ./benchmarklogs-4t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 4 | Iterations per test: 5
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey                  15846      223    1.4%  0.062ms 🟢excellent 15,569-16,122      ✅
#2  KeyDB                   13730      145    1.1%  0.072ms 🟢excellent 13,550-13,909      ✅
#3  Valkey (TLS)            12142       77    0.6%  0.082ms 🟢excellent 12,045-12,238      ✅
#4  Dragonfly               11228       78    0.7%  0.088ms 🟢excellent 11,131-11,324      ✅
#5  KeyDB (TLS)             10813       67    0.6%  0.092ms 🟢excellent 10,730-10,897      ✅
#6  Redis                   10477      103    1.0%  0.095ms 🟢excellent 10,349-10,605      ✅
#7  Redis (TLS)              8456       57    0.7%  0.117ms 🟢excellent  8,385-8,527      ✅
#8  Dragonfly (TLS)          8249      114    1.4%  0.120ms 🟢excellent  8,107-8,390      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 8/8
- 🏆 Best: Valkey - 15,846 ops/sec
- 📊 Average precision: 0.9% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1048/sec | Heavy pages:    210/sec
Redis (TLS)          | Light pages:    846/sec | Heavy pages:    169/sec
KeyDB                | Light pages:   1373/sec | Heavy pages:    275/sec
KeyDB (TLS)          | Light pages:   1081/sec | Heavy pages:    216/sec
Dragonfly            | Light pages:   1123/sec | Heavy pages:    225/sec
Dragonfly (TLS)      | Light pages:    825/sec | Heavy pages:    165/sec
Valkey               | Light pages:   1585/sec | Heavy pages:    317/sec
Valkey (TLS)         | Light pages:   1214/sec | Heavy pages:    243/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Valkey
- 📊 Estimated capacity: 528 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS vs NON-TLS PERFORMANCE COMPARISON
Thread Variant: 4
============================================================
Redis      | Non-TLS:    10477±103  | TLS:     8456±57   | Impact: +19.3% *
KeyDB      | Non-TLS:    13730±145  | TLS:    10813±67   | Impact: +21.2% *
Dragonfly  | Non-TLS:    11228±78   | TLS:     8249±114  | Impact: +26.5% *
Valkey     | Non-TLS:    15846±223  | TLS:    12142±77   | Impact: +23.4% *
------------------------------------------------------------
* = Statistically significant difference (95% confidence)
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 4 | Iterations: 5
================================================================================
Measurement Quality Distribution:
  🟢 Excellent :  8 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 0.9% (lower is better)
  Range: 0.6% - 1.4%
  📊 Excellent measurement consistency across all tests

Performance Analysis:
  Performance range: 8249 - 15846 ops/sec (92.1% spread)
  📈 Moderate performance differences between databases

Statistical Recommendations:
  📊 Consider increasing iterations to 13+ for better statistical confidence
  ✅ High confidence in results - good statistical reliability
================================================================================
Enhanced WordPress Object Cache Test - Statistical Analysis
=========================================================

Checking system requirements...
✅ PHP version: 8.4.8
✅ Redis extension version: 6.2.0
✅ All system requirements met

Loading configuration from test_config.php...
✅ Configuration loaded successfully from file

============================================================
ENHANCED WORDPRESS OBJECT CACHE TEST CONFIGURATION
============================================================
Test Parameters:
  Duration per iteration: 10 seconds
  Test iterations: 5
  Iteration pause: 500ms
  Operations per iteration: 100,000
  Read/Write ratio: 70% / 30%

Statistical Analysis:
  Multi-run testing: Enabled
  Raw data logging: Enabled
  Quality assessment: Enabled (CV-based)
  Confidence intervals: 95%

Thread Configuration:
  Thread variant: 4
  redis_io_threads: 4 threads
  keydb_server_threads: 4 threads
  dragonfly_proactor_threads: 4 threads
  valkey_io_threads: 4 threads

Database Configuration:
  Redis: 127.0.0.1:6379 (TLS: 6390) [IO: 4]
  KeyDB: 127.0.0.1:6380 (TLS: 6391) [Server: 4]
  Dragonfly: 127.0.0.1:6381 (TLS: 6392) [Proactor: 4]
  Valkey: 127.0.0.1:6382 (TLS: 6393) [IO: 4]

Test Environment:
  PHP version: 8.4.8
  Redis extension: Loaded
  Redis extension version: 6.2.0
  Output directory: ./benchmarklogs-4t
  TLS testing: Enabled
  Database flush: Enabled
  Debug mode: Disabled
============================================================

Initializing WordPress Object Cache Test...

Starting WordPress Object Cache Test...
Timestamp: 2025-06-10 10:49:14 UTC
Redis Extension Version: 6.2.0
Enhanced Testing Configuration:
- Iterations per test: 5
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
Thread Variant: 4
Thread Configuration:
  redis_io_threads: 4 threads
  keydb_server_threads: 4 threads
  dragonfly_proactor_threads: 4 threads
  valkey_io_threads: 4 threads
TLS Certificates: Found and validated

Checking TLS readiness...
  Redis: TLS port accessible ✓
  KeyDB: TLS port accessible ✓
  Dragonfly: TLS port accessible ✓
  Valkey: TLS port accessible ✓

TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis...
  Configuration: IO Threads: 4
  Running 5 iterations for Redis (non-TLS)...
  Initial keys in database: 190150
  Flushing database before test...
  Database flushed in 103.25ms. Keys remaining: 0
    Iteration 1/5... 10642 ops/sec, 0.093ms latency
    Iteration 2/5... 10689 ops/sec, 0.093ms latency
    Iteration 3/5... 10786 ops/sec, 0.092ms latency
    Iteration 4/5... 10724 ops/sec, 0.092ms latency
    Iteration 5/5... 10868 ops/sec, 0.091ms latency
  Redis (non-TLS): 10741.72±87.85 ops/sec (CV: 0.8%), 0.092±0.001ms latency, Quality: excellent
  Final keys in database: 190455
🔐 Attempting TLS connection to Redis at 127.0.0.1:6390
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  📡 Method 1: Using tls:// scheme with custom port 6390...
  ✅ TLS connection successful with tls://localhost:6390
  🧪 Testing basic command over TLS...
  ✅ PING successful over TLS
  Running 5 iterations for Redis (TLS)...
  Initial keys in database: 164460
  Flushing database before test...
  Database flushed in 71.33ms. Keys remaining: 0
    Iteration 1/5... 8640 ops/sec, 0.115ms latency
    Iteration 2/5... 8617 ops/sec, 0.115ms latency
    Iteration 3/5... 8722 ops/sec, 0.114ms latency
    Iteration 4/5... 8687 ops/sec, 0.114ms latency
    Iteration 5/5... 8767 ops/sec, 0.113ms latency
  Redis (TLS): 8686.55±60.78 ops/sec (CV: 0.7%), 0.114±0.001ms latency, Quality: excellent
  Final keys in database: 167916

Testing KeyDB...
  Configuration: Server Threads: 4
  Running 5 iterations for KeyDB (non-TLS)...
  Initial keys in database: 190226
  Flushing database before test...
  Database flushed in 92.58ms. Keys remaining: 0
    Iteration 1/5... 13766 ops/sec, 0.072ms latency
    Iteration 2/5... 13826 ops/sec, 0.072ms latency
    Iteration 3/5... 13901 ops/sec, 0.071ms latency
    Iteration 4/5... 13979 ops/sec, 0.071ms latency
    Iteration 5/5... 14055 ops/sec, 0.070ms latency
  KeyDB (non-TLS): 13905.36±115.86 ops/sec (CV: 0.8%), 0.071±0.001ms latency, Quality: excellent
  Final keys in database: 190193
🔐 Attempting TLS connection to KeyDB at 127.0.0.1:6391
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  📡 Method 1: Using tls:// scheme with custom port 6391...
  ✅ TLS connection successful with tls://localhost:6391
  🧪 Testing basic command over TLS...
  ✅ PING successful over TLS
  Running 5 iterations for KeyDB (TLS)...
  Initial keys in database: 190210
  Flushing database before test...
  Database flushed in 95.38ms. Keys remaining: 0
    Iteration 1/5... 10836 ops/sec, 0.091ms latency
    Iteration 2/5... 10807 ops/sec, 0.092ms latency
    Iteration 3/5... 10953 ops/sec, 0.091ms latency
    Iteration 4/5... 10898 ops/sec, 0.091ms latency
    Iteration 5/5... 11041 ops/sec, 0.090ms latency
  KeyDB (TLS): 10906.95±93.77 ops/sec (CV: 0.9%), 0.091±0.001ms latency, Quality: excellent
  Final keys in database: 189714

Testing Dragonfly...
  Configuration: Proactor Threads: 4
  Running 5 iterations for Dragonfly (non-TLS)...
  Initial keys in database: 190394
  Flushing database before test...
  Database flushed in 12.66ms. Keys remaining: 0
    Iteration 1/5... 11308 ops/sec, 0.088ms latency
    Iteration 2/5... 11179 ops/sec, 0.089ms latency
    Iteration 3/5... 11279 ops/sec, 0.088ms latency
    Iteration 4/5... 11168 ops/sec, 0.089ms latency
    Iteration 5/5... 11371 ops/sec, 0.087ms latency
  Dragonfly (non-TLS): 11261.00±86.70 ops/sec (CV: 0.8%), 0.088±0.001ms latency, Quality: excellent
  Final keys in database: 189861
🔐 Attempting TLS connection to Dragonfly at 127.0.0.1:6392
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  📡 Method 1: Using tls:// scheme with custom port 6392...
  ✅ TLS connection successful with tls://localhost:6392
  🔐 Authenticating to Dragonfly with password...
  ✅ Authentication successful to Dragonfly
  🧪 Testing basic command over TLS...
  ✅ PING successful over TLS
  Running 5 iterations for Dragonfly (TLS)...
  Initial keys in database: 161098
  Flushing database before test...
  Database flushed in 8.10ms. Keys remaining: 0
    Iteration 1/5... 8793 ops/sec, 0.113ms latency
    Iteration 2/5... 8655 ops/sec, 0.115ms latency
    Iteration 3/5... 8810 ops/sec, 0.113ms latency
    Iteration 4/5... 8841 ops/sec, 0.112ms latency
    Iteration 5/5... 8703 ops/sec, 0.114ms latency
  Dragonfly (TLS): 8760.39±77.97 ops/sec (CV: 0.9%), 0.113±0.001ms latency, Quality: excellent
  Final keys in database: 169370

Testing Valkey...
  Configuration: IO Threads: 4
  Running 5 iterations for Valkey (non-TLS)...
  Initial keys in database: 190148
  Flushing database before test...
  Database flushed in 0.11ms. Keys remaining: 0
    Iteration 1/5... 15618 ops/sec, 0.063ms latency
    Iteration 2/5... 15616 ops/sec, 0.063ms latency
    Iteration 3/5... 15729 ops/sec, 0.063ms latency
    Iteration 4/5... 16203 ops/sec, 0.061ms latency
    Iteration 5/5... 15870 ops/sec, 0.062ms latency
  Valkey (non-TLS): 15807.05±244.36 ops/sec (CV: 1.5%), 0.063±0.001ms latency, Quality: excellent
  Final keys in database: 190103
🔐 Attempting TLS connection to Valkey at 127.0.0.1:6393
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  📡 Method 1: Using tls:// scheme with custom port 6393...
  ✅ TLS connection successful with tls://localhost:6393
  🧪 Testing basic command over TLS...
  ✅ PING successful over TLS
  Running 5 iterations for Valkey (TLS)...
  Initial keys in database: 189862
  Flushing database before test...
  Database flushed in 0.13ms. Keys remaining: 0
    Iteration 1/5... 11995 ops/sec, 0.083ms latency
    Iteration 2/5... 12032 ops/sec, 0.082ms latency
    Iteration 3/5... 11997 ops/sec, 0.083ms latency
    Iteration 4/5... 12067 ops/sec, 0.082ms latency
    Iteration 5/5... 11908 ops/sec, 0.083ms latency
  Valkey (TLS): 11999.66±59.26 ops/sec (CV: 0.5%), 0.083±0.000ms latency, Quality: excellent
  Final keys in database: 189889

Enhanced results saved:
  CSV: ./benchmarklogs-4t/wordpress_object_cache_test.csv
  JSON: ./benchmarklogs-4t/wordpress_object_cache_test.json
  Markdown: ./benchmarklogs-4t/wordpress_object_cache_test.md
  Raw Data: ./benchmarklogs-4t/wordpress_object_cache_test_raw.json
============================================================
Enhanced test suite completed!
Total execution time: 363.93 seconds
Total tests run: 8
Statistical iterations per test: 5
Results saved to ./benchmarklogs-4t/

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY
Thread Variant: 4 | Iterations per test: 5
====================================================================================================
Rank Database                  Ops/sec   ±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey                  15807      244    1.5%  0.063ms 🟢excellent 15,504-16,110      ✅
#2  KeyDB                   13905      116    0.8%  0.071ms 🟢excellent 13,762-14,049      ✅
#3  Valkey (TLS)            12000       59    0.5%  0.083ms 🟢excellent 11,926-12,073      ✅
#4  Dragonfly               11261       87    0.8%  0.088ms 🟢excellent 11,153-11,369      ✅
#5  KeyDB (TLS)             10907       94    0.9%  0.091ms 🟢excellent 10,791-11,023      ✅
#6  Redis                   10742       88    0.8%  0.092ms 🟢excellent 10,633-10,851      ✅
#7  Dragonfly (TLS)          8760       78    0.9%  0.113ms 🟢excellent  8,664-8,857      ✅
#8  Redis (TLS)              8687       61    0.7%  0.114ms 🟢excellent  8,611-8,762      ✅
====================================================================================================
Quick Insights:
- Reliable measurements: 8/8
- 🏆 Best: Valkey - 15,807 ops/sec
- 📊 Average precision: 0.9% CV

================================================================================
WORDPRESS PERFORMANCE ANALYSIS
================================================================================
Redis                | Light pages:   1074/sec | Heavy pages:    215/sec
Redis (TLS)          | Light pages:    869/sec | Heavy pages:    174/sec
KeyDB                | Light pages:   1391/sec | Heavy pages:    278/sec
KeyDB (TLS)          | Light pages:   1091/sec | Heavy pages:    218/sec
Dragonfly            | Light pages:   1126/sec | Heavy pages:    225/sec
Dragonfly (TLS)      | Light pages:    876/sec | Heavy pages:    175/sec
Valkey               | Light pages:   1581/sec | Heavy pages:    316/sec
Valkey (TLS)         | Light pages:   1200/sec | Heavy pages:    240/sec

WordPress Cache Recommendations:
- 🏆 Best performer: Valkey
- 📊 Estimated capacity: 527 concurrent users (30 cache ops/user/sec)
- 💡 For production WordPress, consider read/write ratios: 90/10 for cached sites, 70/30 for dynamic sites
================================================================================

============================================================
TLS vs NON-TLS PERFORMANCE COMPARISON
Thread Variant: 4
============================================================
Redis      | Non-TLS:    10742±88   | TLS:     8687±61   | Impact: +19.1% *
KeyDB      | Non-TLS:    13905±116  | TLS:    10907±94   | Impact: +21.6% *
Dragonfly  | Non-TLS:    11261±87   | TLS:     8760±78   | Impact: +22.2% *
Valkey     | Non-TLS:    15807±244  | TLS:    12000±59   | Impact: +24.1% *
------------------------------------------------------------
* = Statistically significant difference (95% confidence)
============================================================

================================================================================
STATISTICAL INSIGHTS
Thread Variant: 4 | Iterations: 5
================================================================================
Measurement Quality Distribution:
  🟢 Excellent :  8 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 0.9% (lower is better)
  Range: 0.5% - 1.5%
  📊 Excellent measurement consistency across all tests

Performance Analysis:
  Performance range: 8687 - 15807 ops/sec (82.0% spread)
  📈 Moderate performance differences between databases

Statistical Recommendations:
  📊 Consider increasing iterations to 13+ for better statistical confidence
  ✅ High confidence in results - good statistical reliability
================================================================================

============================================================
TEST SUITE COMPLETED SUCCESSFULLY!
============================================================
Total execution time: 363.95 seconds
Statistical iterations per database: 5
Results saved to: ./benchmarklogs-4t

Generated files:
  JSON results: 2 files
  CSV exports: 1 files
  Markdown reports: 43 files
  📊 Raw data: Available

🎉 Enhanced benchmarking with statistical analysis complete!
📈 Results include confidence intervals and measurement quality indicators
📊 Use the enhanced chart generator to visualize statistical analysis

