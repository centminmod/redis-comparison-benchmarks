WordPress Object Cache Test with Predis - Configured Runner
============================================================
Implementation: Predis (Pure PHP Redis Client)
Enhanced TLS Support: Yes
Statistical Analysis: 13 iterations with confidence intervals

üìã Loading configuration from: tests/php/test_config_predis.php
‚úÖ Configuration loaded successfully

üìä Test Configuration:
  Implementation: Predis (Pure PHP)
  Duration per iteration: 30s
  Test iterations: 13
  Output directory: ./benchmarklogs-4t
  TLS testing: Enabled
  Flush before test: Yes
  Thread variant: 4
  Connection timeout: 5s
  Read/write timeout: 5s
  Connection retries: 3
  Persistent connections: No
  Thread configuration:
    redis_io_threads: 4 threads
    keydb_server_threads: 4 threads
    dragonfly_proactor_threads: 4 threads
    valkey_io_threads: 4 threads
  Database configurations:
    Redis: 127.0.0.1:6379 (TLS: 6390) (IO threads: 4)
    KeyDB: 127.0.0.1:6380 (TLS: 6391) (Server threads: 4)
    Dragonfly: 127.0.0.1:6381 (TLS: 6392) (Proactor threads: 4)
    Valkey: 127.0.0.1:6382 (TLS: 6393) (IO threads: 4)

======================================================================

üîç Checking Predis availability...
‚úÖ Predis library available

üöÄ Starting Predis WordPress Object Cache Test...

Starting WordPress Object Cache Test (Predis)...
Timestamp: 2025-06-10 03:59:21 UTC
Predis Version: unknown
PHP Version: 8.4.8
Enhanced Testing Configuration (Predis):
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
- Connection timeout: 5s
- Read/write timeout: 5s
- Connection retry attempts: 3
- Persistent connections: Disabled
- TCP keepalive: Enabled
Thread Variant: 4
Thread Configuration:
  redis_io_threads: 4 threads
  keydb_server_threads: 4 threads
  dragonfly_proactor_threads: 4 threads
  valkey_io_threads: 4 threads
TLS Certificates: Found and validated (Predis-compatible)

Checking TLS readiness (Predis)...
  Redis: TLS port accessible ‚úì
  KeyDB: TLS port accessible ‚úì
  Dragonfly: TLS port accessible ‚úì
  Valkey: TLS port accessible ‚úì

Predis TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis with Predis...
  Configuration: IO Threads: 4
  Running 13 iterations for Redis (non-TLS-Predis)...
  Initial keys in database: 395220
  Flushing database before test...
  Database flushed in 224.05ms. Keys remaining: 0
    Iteration 1/13... 9450 ops/sec, 0.105ms latency
    Iteration 2/13... 10049 ops/sec, 0.099ms latency
    Iteration 3/13... 10234 ops/sec, 0.097ms latency
    Iteration 4/13... 10280 ops/sec, 0.097ms latency
    Iteration 5/13... 10295 ops/sec, 0.097ms latency
    Iteration 6/13... 10343 ops/sec, 0.096ms latency
    Iteration 7/13... 10408 ops/sec, 0.096ms latency
    Iteration 8/13... 10331 ops/sec, 0.096ms latency
    Iteration 9/13... 10440 ops/sec, 0.095ms latency
    Iteration 10/13... 10450 ops/sec, 0.095ms latency
    Iteration 11/13... 10437 ops/sec, 0.095ms latency
    Iteration 12/13... 10379 ops/sec, 0.096ms latency
    Iteration 13/13... 10430 ops/sec, 0.095ms latency
  Redis (non-TLS-Predis): 10271.29¬±270.56 ops/sec (CV: 2.6%), 0.097¬±0.003ms latency, Quality: good
  Final keys in database: 61453
üîê Attempting TLS connection to Redis at 127.0.0.1:6390 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Redis (TLS-Predis)...
  Initial keys in database: 394420
  Flushing database before test...
  Database flushed in 235.17ms. Keys remaining: 0
    Iteration 1/13... 7088 ops/sec, 0.140ms latency
    Iteration 2/13... 7601 ops/sec, 0.131ms latency
    Iteration 3/13... 7777 ops/sec, 0.128ms latency
    Iteration 4/13... 7888 ops/sec, 0.126ms latency
    Iteration 5/13... 7828 ops/sec, 0.127ms latency
    Iteration 6/13... 7851 ops/sec, 0.127ms latency
    Iteration 7/13... 7885 ops/sec, 0.126ms latency
    Iteration 8/13... 7939 ops/sec, 0.125ms latency
    Iteration 9/13... 7951 ops/sec, 0.125ms latency
    Iteration 10/13... 8027 ops/sec, 0.124ms latency
    Iteration 11/13... 7964 ops/sec, 0.125ms latency
    Iteration 12/13... 7912 ops/sec, 0.126ms latency
    Iteration 13/13... 7954 ops/sec, 0.125ms latency
  Redis (TLS-Predis): 7820.45¬±244.41 ops/sec (CV: 3.1%), 0.127¬±0.004ms latency, Quality: good
  Final keys in database: 61386

Testing KeyDB with Predis...
  Configuration: Server Threads: 4
  Running 13 iterations for KeyDB (non-TLS-Predis)...
  Initial keys in database: 393774
  Flushing database before test...
  Database flushed in 244.49ms. Keys remaining: 0
    Iteration 1/13... 11209 ops/sec, 0.089ms latency
    Iteration 2/13... 12134 ops/sec, 0.082ms latency
    Iteration 3/13... 12369 ops/sec, 0.080ms latency
    Iteration 4/13... 12461 ops/sec, 0.080ms latency
    Iteration 5/13... 12470 ops/sec, 0.080ms latency
    Iteration 6/13... 12452 ops/sec, 0.080ms latency
    Iteration 7/13... 12464 ops/sec, 0.080ms latency
    Iteration 8/13... 12487 ops/sec, 0.080ms latency
    Iteration 9/13... 12467 ops/sec, 0.080ms latency
    Iteration 10/13... 12471 ops/sec, 0.080ms latency
    Iteration 11/13... 12464 ops/sec, 0.080ms latency
    Iteration 12/13... 12505 ops/sec, 0.079ms latency
    Iteration 13/13... 12508 ops/sec, 0.079ms latency
  KeyDB (non-TLS-Predis): 12343.04¬±354.45 ops/sec (CV: 2.9%), 0.081¬±0.003ms latency, Quality: good
  Final keys in database: 61499
üîê Attempting TLS connection to KeyDB at 127.0.0.1:6391 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for KeyDB (TLS-Predis)...
  Initial keys in database: 393412
  Flushing database before test...
  Database flushed in 237.30ms. Keys remaining: 0
    Iteration 1/13... 8584 ops/sec, 0.116ms latency
    Iteration 2/13... 9136 ops/sec, 0.109ms latency
    Iteration 3/13... 9319 ops/sec, 0.107ms latency
    Iteration 4/13... 9479 ops/sec, 0.105ms latency
    Iteration 5/13... 9528 ops/sec, 0.104ms latency
    Iteration 6/13... 9538 ops/sec, 0.104ms latency
    Iteration 7/13... 9611 ops/sec, 0.103ms latency
    Iteration 8/13... 9606 ops/sec, 0.103ms latency
    Iteration 9/13... 9642 ops/sec, 0.103ms latency
    Iteration 10/13... 9629 ops/sec, 0.103ms latency
    Iteration 11/13... 9618 ops/sec, 0.103ms latency
    Iteration 12/13... 9621 ops/sec, 0.103ms latency
    Iteration 13/13... 9632 ops/sec, 0.103ms latency
  KeyDB (TLS-Predis): 9457.09¬±301.46 ops/sec (CV: 3.2%), 0.105¬±0.004ms latency, Quality: good
  Final keys in database: 61449

Testing Dragonfly with Predis...
  Configuration: Proactor Threads: 4
  Running 13 iterations for Dragonfly (non-TLS-Predis)...
  Initial keys in database: 389792
  Flushing database before test...
  Database flushed in 20.97ms. Keys remaining: 0
    Iteration 1/13... 9774 ops/sec, 0.102ms latency
    Iteration 2/13... 10297 ops/sec, 0.097ms latency
    Iteration 3/13... 10591 ops/sec, 0.094ms latency
    Iteration 4/13... 10642 ops/sec, 0.093ms latency
    Iteration 5/13... 10711 ops/sec, 0.093ms latency
    Iteration 6/13... 10760 ops/sec, 0.092ms latency
    Iteration 7/13... 10712 ops/sec, 0.093ms latency
    Iteration 8/13... 10796 ops/sec, 0.092ms latency
    Iteration 9/13... 10674 ops/sec, 0.093ms latency
    Iteration 10/13... 10742 ops/sec, 0.093ms latency
    Iteration 11/13... 10680 ops/sec, 0.093ms latency
    Iteration 12/13... 10699 ops/sec, 0.093ms latency
    Iteration 13/13... 10719 ops/sec, 0.093ms latency
  Dragonfly (non-TLS-Predis): 10599.72¬±276.91 ops/sec (CV: 2.6%), 0.094¬±0.003ms latency, Quality: good
  Final keys in database: 61284
üîê Attempting TLS connection to Dragonfly at 127.0.0.1:6392 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üîê Adding Dragonfly authentication to connection parameters...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Dragonfly (TLS-Predis)...
  Initial keys in database: 388522
  Flushing database before test...
  Database flushed in 17.17ms. Keys remaining: 0
    Iteration 1/13... 6969 ops/sec, 0.143ms latency
    Iteration 2/13... 7317 ops/sec, 0.136ms latency
    Iteration 3/13... 7537 ops/sec, 0.132ms latency
    Iteration 4/13... 7555 ops/sec, 0.132ms latency
    Iteration 5/13... 7603 ops/sec, 0.131ms latency
    Iteration 6/13... 7652 ops/sec, 0.130ms latency
    Iteration 7/13... 7627 ops/sec, 0.130ms latency
    Iteration 8/13... 7573 ops/sec, 0.131ms latency
    Iteration 9/13... 7656 ops/sec, 0.130ms latency
    Iteration 10/13... 7630 ops/sec, 0.130ms latency
    Iteration 11/13... 7633 ops/sec, 0.130ms latency
    Iteration 12/13... 7652 ops/sec, 0.130ms latency
    Iteration 13/13... 7524 ops/sec, 0.132ms latency
  Dragonfly (TLS-Predis): 7532.87¬±192.23 ops/sec (CV: 2.6%), 0.132¬±0.004ms latency, Quality: good
  Final keys in database: 61070

Testing Valkey with Predis...
  Configuration: IO Threads: 4
  Running 13 iterations for Valkey (non-TLS-Predis)...
  Initial keys in database: 390854
  Flushing database before test...
  Database flushed in 0.10ms. Keys remaining: 0
    Iteration 1/13... 13545 ops/sec, 0.073ms latency
    Iteration 2/13... 14549 ops/sec, 0.068ms latency
    Iteration 3/13... 14799 ops/sec, 0.067ms latency
    Iteration 4/13... 14763 ops/sec, 0.067ms latency
    Iteration 5/13... 14870 ops/sec, 0.067ms latency
    Iteration 6/13... 14905 ops/sec, 0.067ms latency
    Iteration 7/13... 14818 ops/sec, 0.067ms latency
    Iteration 8/13... 14938 ops/sec, 0.066ms latency
    Iteration 9/13... 14832 ops/sec, 0.067ms latency
    Iteration 10/13... 14805 ops/sec, 0.067ms latency
    Iteration 11/13... 14851 ops/sec, 0.067ms latency
    Iteration 12/13... 14895 ops/sec, 0.067ms latency
    Iteration 13/13... 14841 ops/sec, 0.067ms latency
  Valkey (non-TLS-Predis): 14723.98¬±366.81 ops/sec (CV: 2.5%), 0.067¬±0.002ms latency, Quality: good
  Final keys in database: 61508
üîê Attempting TLS connection to Valkey at 127.0.0.1:6393 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Valkey (TLS-Predis)...
  Initial keys in database: 389150
  Flushing database before test...
  Database flushed in 0.15ms. Keys remaining: 0
    Iteration 1/13... 9511 ops/sec, 0.105ms latency
    Iteration 2/13... 10232 ops/sec, 0.097ms latency
    Iteration 3/13... 10397 ops/sec, 0.096ms latency
    Iteration 4/13... 10530 ops/sec, 0.094ms latency
    Iteration 5/13... 10580 ops/sec, 0.094ms latency
    Iteration 6/13... 10543 ops/sec, 0.094ms latency
    Iteration 7/13... 10604 ops/sec, 0.094ms latency
    Iteration 8/13... 10551 ops/sec, 0.094ms latency
    Iteration 9/13... 10575 ops/sec, 0.094ms latency
    Iteration 10/13... 10630 ops/sec, 0.093ms latency
    Iteration 11/13... 10636 ops/sec, 0.093ms latency
    Iteration 12/13... 10615 ops/sec, 0.094ms latency
    Iteration 13/13... 10620 ops/sec, 0.094ms latency
  Valkey (TLS-Predis): 10463.46¬±307.48 ops/sec (CV: 2.9%), 0.095¬±0.003ms latency, Quality: good
  Final keys in database: 61471

Enhanced Predis results saved:
  CSV: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis.csv
  JSON: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis.json
  Markdown: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis.md
  Raw Data: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis_raw.json
============================================================
Enhanced Predis test suite completed!
Total execution time: 3,175.64 seconds
Total tests run: 8
Statistical iterations per test: 13
Results saved to ./benchmarklogs-4t/
Redis implementation: Predis (pure PHP)

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY (Predis)
Thread Variant: 4 | Iterations per test: 13
====================================================================================================
Rank Database                       Ops/sec   ¬±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey (Predis)              14724      367    2.5%  0.067ms üü°good    14,521-14,927      ‚úÖ
#2  KeyDB (Predis)               12343      354    2.9%  0.081ms üü°good    12,146-12,540      ‚úÖ
#3  Dragonfly (Predis)           10600      277    2.6%  0.094ms üü°good    10,446-10,753      ‚úÖ
#4  Valkey (TLS-Predis)          10463      307    2.9%  0.095ms üü°good    10,293-10,634      ‚úÖ
#5  Redis (Predis)               10271      271    2.6%  0.097ms üü°good    10,121-10,421      ‚úÖ
#6  KeyDB (TLS-Predis)            9457      301    3.2%  0.105ms üü°good     9,290-9,624      ‚úÖ
#7  Redis (TLS-Predis)            7820      244    3.1%  0.127ms üü°good     7,685-7,956      ‚úÖ
#8  Dragonfly (TLS-Predis)        7533      192    2.6%  0.132ms üü°good     7,426-7,639      ‚úÖ
====================================================================================================
Implementation: Predis (Pure PHP Redis Client)
üìà Compare with phpredis results to see implementation trade-offs

============================================================
TLS vs NON-TLS PERFORMANCE COMPARISON (Predis)
Thread Variant: 4
============================================================
Redis      | Non-TLS:    10271¬±271  | TLS:     7820¬±244  | Impact: +23.9% *
KeyDB      | Non-TLS:    12343¬±354  | TLS:     9457¬±301  | Impact: +23.4% *
Dragonfly  | Non-TLS:    10600¬±277  | TLS:     7533¬±192  | Impact: +28.9% *
Valkey     | Non-TLS:    14724¬±367  | TLS:    10463¬±307  | Impact: +28.9% *
------------------------------------------------------------
* = Statistically significant difference (95% confidence)
Implementation: Predis (Pure PHP)
============================================================

================================================================================
STATISTICAL INSIGHTS (Predis)
Thread Variant: 4 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  üü° Good      :  8 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 2.8% (lower is better)
  Range: 2.5% - 3.2%
  üìä Good measurement consistency with Predis

Predis Implementation Notes:
  üì° Connection management: Automatic (no manual close required)
  üîí TLS handling: Enhanced SSL context support
  üîÑ Error recovery: Built-in retry logic with exponential backoff
  üìä Performance characteristics: Pure PHP (higher latency, more consistent)
================================================================================

================================================================================
PREDIS-SPECIFIC INSIGHTS
Thread Variant: 4 | Implementation: Predis (Pure PHP)
================================================================================
TLS Connection Reliability:
  ‚úÖ Predis TLS connections: 4/4 databases
  üìä All TLS connections established successfully
  üîí SSL context handling: Reliable (Predis manages SSL internally)

Predis Configuration Analysis:
  üîó Connection timeout: 5s
  üì° Read/write timeout: 5s
  üîÑ Connection retry attempts: 3
  ‚ö° TCP keepalive: Enabled
  üîó Persistent connections: Disabled

Performance Characteristics:
  üìà Average non-TLS performance: 11,985 ops/sec
  üîí Average TLS performance: 8,818 ops/sec
  üìä TLS overhead: 26.4%
  ‚ÑπÔ∏è  Note: 25-40% TLS overhead is normal for Redis over SSL

Predis Advantages:
  ‚úÖ Better TLS reliability compared to phpredis extension
  ‚úÖ Enhanced SSL context handling
  ‚úÖ No extension compilation dependencies
  ‚úÖ Consistent behavior across PHP versions
  ‚ö†Ô∏è  Trade-off: Lower raw performance due to pure PHP implementation
================================================================================

======================================================================
‚úÖ Predis WordPress Object Cache test completed successfully!
üìÅ Results saved to: ./benchmarklogs-4t
üìä Implementation: Predis (Pure PHP Redis Client)
üîí TLS Support: Enhanced reliability compared to phpredis

üìÑ Generated files:
  php_wordpress_test_phpredis.log (32KB)
  php_wordpress_test_predis.log (16.8KB)
  wordpress_object_cache_test_predis_predis.csv (1.8KB)
  wordpress_object_cache_test_predis_predis.json (99.5KB)
  wordpress_object_cache_test_predis_predis.md (2.7KB)
  wordpress_object_cache_test_predis_predis_raw.json (87.2KB)
