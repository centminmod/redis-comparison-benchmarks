WordPress Object Cache Test with Predis - Configured Runner
============================================================
Implementation: Predis (Pure PHP Redis Client)
Enhanced TLS Support: Yes
Statistical Analysis: 13 iterations with confidence intervals

üìã Loading configuration from: tests/php/test_config_predis.php
‚úÖ Configuration loaded successfully

üìä Test Configuration:
  Implementation: Predis (Pure PHP)
  Duration per iteration: 30s
  Test iterations: 13
  Output directory: ./benchmarklogs-4t
  TLS testing: Enabled
  Flush before test: Yes
  Thread variant: 4
  Connection timeout: 5s
  Read/write timeout: 5s
  Connection retries: 3
  Persistent connections: No
  Thread configuration:
    redis_io_threads: 4 threads
    keydb_server_threads: 4 threads
    dragonfly_proactor_threads: 4 threads
    valkey_io_threads: 4 threads
  Database configurations:
    Redis: 127.0.0.1:6379 (TLS: 6390) (IO threads: 4)
    KeyDB: 127.0.0.1:6380 (TLS: 6391) (Server threads: 4)
    Dragonfly: 127.0.0.1:6381 (TLS: 6392) (Proactor threads: 4)
    Valkey: 127.0.0.1:6382 (TLS: 6393) (IO threads: 4)

======================================================================

üîç Checking Predis availability...
‚úÖ Predis library available

üöÄ Starting Predis WordPress Object Cache Test...

Starting WordPress Object Cache Test (Predis)...
Timestamp: 2025-06-09 14:47:08 UTC
Predis Version: unknown
PHP Version: 8.4.7
Enhanced Testing Configuration (Predis):
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
- Connection timeout: 5s
- Read/write timeout: 5s
- Connection retry attempts: 3
- Persistent connections: Disabled
- TCP keepalive: Enabled
Thread Variant: 4
Thread Configuration:
  redis_io_threads: 4 threads
  keydb_server_threads: 4 threads
  dragonfly_proactor_threads: 4 threads
  valkey_io_threads: 4 threads
TLS Certificates: Found and validated (Predis-compatible)

Checking TLS readiness (Predis)...
  Redis: TLS port accessible ‚úì
  KeyDB: TLS port accessible ‚úì
  Dragonfly: TLS port not accessible ‚úó
  Valkey: TLS port accessible ‚úì

Predis TLS testing will be attempted for: Redis, KeyDB, Valkey
============================================================
Testing Redis with Predis...
  Configuration: IO Threads: 4
  Running 13 iterations for Redis (non-TLS-Predis)...
  Initial keys in database: 395324
  Flushing database before test...
  Database flushed in 234.99ms. Keys remaining: 0
    Iteration 1/13... 9630 ops/sec, 0.103ms latency
    Iteration 2/13... 10292 ops/sec, 0.097ms latency
    Iteration 3/13... 10613 ops/sec, 0.094ms latency
    Iteration 4/13... 10700 ops/sec, 0.093ms latency
    Iteration 5/13... 10764 ops/sec, 0.092ms latency
    Iteration 6/13... 10778 ops/sec, 0.092ms latency
    Iteration 7/13... 10788 ops/sec, 0.092ms latency
    Iteration 8/13... 10810 ops/sec, 0.092ms latency
    Iteration 9/13... 10799 ops/sec, 0.092ms latency
    Iteration 10/13... 10780 ops/sec, 0.092ms latency
    Iteration 11/13... 10816 ops/sec, 0.092ms latency
    Iteration 12/13... 10764 ops/sec, 0.092ms latency
    Iteration 13/13... 10769 ops/sec, 0.092ms latency
  Redis (non-TLS-Predis): 10638.67¬±334.07 ops/sec (CV: 3.1%), 0.094¬±0.003ms latency, Quality: good
  Final keys in database: 61470
üîê Attempting TLS connection to Unknown at 127.0.0.1:6390 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Redis (TLS-Predis)...
  Initial keys in database: 394786
  Flushing database before test...
  Database flushed in 215.16ms. Keys remaining: 0
    Iteration 1/13... 7380 ops/sec, 0.135ms latency
    Iteration 2/13... 7813 ops/sec, 0.127ms latency
    Iteration 3/13... 8004 ops/sec, 0.124ms latency
    Iteration 4/13... 8140 ops/sec, 0.122ms latency
    Iteration 5/13... 8216 ops/sec, 0.121ms latency
    Iteration 6/13... 8153 ops/sec, 0.122ms latency
    Iteration 7/13... 8277 ops/sec, 0.120ms latency
    Iteration 8/13... 8198 ops/sec, 0.121ms latency
    Iteration 9/13... 8253 ops/sec, 0.121ms latency
    Iteration 10/13... 8278 ops/sec, 0.120ms latency
    Iteration 11/13... 8176 ops/sec, 0.122ms latency
    Iteration 12/13... 8200 ops/sec, 0.121ms latency
    Iteration 13/13... 8240 ops/sec, 0.121ms latency
  Redis (TLS-Predis): 8102.11¬±251.57 ops/sec (CV: 3.1%), 0.123¬±0.004ms latency, Quality: good
  Final keys in database: 61404

Testing KeyDB with Predis...
  Configuration: Server Threads: 4
  Running 13 iterations for KeyDB (non-TLS-Predis)...
  Initial keys in database: 394215
  Flushing database before test...
  Database flushed in 220.59ms. Keys remaining: 0
    Iteration 1/13... 11896 ops/sec, 0.084ms latency
    Iteration 2/13... 12699 ops/sec, 0.078ms latency
    Iteration 3/13... 13089 ops/sec, 0.076ms latency
    Iteration 4/13... 13197 ops/sec, 0.075ms latency
    Iteration 5/13... 13214 ops/sec, 0.075ms latency
    Iteration 6/13... 13167 ops/sec, 0.075ms latency
    Iteration 7/13... 13214 ops/sec, 0.075ms latency
    Iteration 8/13... 13224 ops/sec, 0.075ms latency
    Iteration 9/13... 13283 ops/sec, 0.075ms latency
    Iteration 10/13... 13237 ops/sec, 0.075ms latency
    Iteration 11/13... 13197 ops/sec, 0.075ms latency
    Iteration 12/13... 13201 ops/sec, 0.075ms latency
    Iteration 13/13... 13230 ops/sec, 0.075ms latency
  KeyDB (non-TLS-Predis): 13065.17¬±380.68 ops/sec (CV: 2.9%), 0.076¬±0.002ms latency, Quality: good
  Final keys in database: 61502
üîê Attempting TLS connection to Unknown at 127.0.0.1:6391 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for KeyDB (TLS-Predis)...
  Initial keys in database: 394005
  Flushing database before test...
  Database flushed in 174.39ms. Keys remaining: 0
    Iteration 1/13... 8968 ops/sec, 0.111ms latency
    Iteration 2/13... 9592 ops/sec, 0.104ms latency
    Iteration 3/13... 9849 ops/sec, 0.101ms latency
    Iteration 4/13... 9936 ops/sec, 0.100ms latency
    Iteration 5/13... 9932 ops/sec, 0.100ms latency
    Iteration 6/13... 9946 ops/sec, 0.100ms latency
    Iteration 7/13... 10004 ops/sec, 0.099ms latency
    Iteration 8/13... 9953 ops/sec, 0.100ms latency
    Iteration 9/13... 9935 ops/sec, 0.100ms latency
    Iteration 10/13... 10026 ops/sec, 0.099ms latency
    Iteration 11/13... 10066 ops/sec, 0.099ms latency
    Iteration 12/13... 10071 ops/sec, 0.099ms latency
    Iteration 13/13... 10017 ops/sec, 0.099ms latency
  KeyDB (TLS-Predis): 9868.91¬±297.16 ops/sec (CV: 3.0%), 0.101¬±0.003ms latency, Quality: good
  Final keys in database: 61466

Testing Dragonfly with Predis...
  Configuration: Proactor Threads: 4
  Running 13 iterations for Dragonfly (non-TLS-Predis)...
  Initial keys in database: 390088
  Flushing database before test...
  Database flushed in 20.26ms. Keys remaining: 0
    Iteration 1/13... 10056 ops/sec, 0.099ms latency
    Iteration 2/13... 10666 ops/sec, 0.093ms latency
    Iteration 3/13... 10956 ops/sec, 0.091ms latency
    Iteration 4/13... 10950 ops/sec, 0.091ms latency
    Iteration 5/13... 11150 ops/sec, 0.089ms latency
    Iteration 6/13... 11008 ops/sec, 0.090ms latency
    Iteration 7/13... 11040 ops/sec, 0.090ms latency
    Iteration 8/13... 11003 ops/sec, 0.090ms latency
    Iteration 9/13... 11169 ops/sec, 0.089ms latency
    Iteration 10/13... 11406 ops/sec, 0.087ms latency
    Iteration 11/13... 11192 ops/sec, 0.089ms latency
    Iteration 12/13... 11157 ops/sec, 0.089ms latency
    Iteration 13/13... 11115 ops/sec, 0.089ms latency
  Dragonfly (non-TLS-Predis): 10989.85¬±328.87 ops/sec (CV: 3.0%), 0.091¬±0.003ms latency, Quality: good
  Final keys in database: 61297
  Skipping TLS test for Dragonfly (port not accessible)

Testing Valkey with Predis...
  Configuration: IO Threads: 4
  Running 13 iterations for Valkey (non-TLS-Predis)...
  Initial keys in database: 391328
  Flushing database before test...
  Database flushed in 0.11ms. Keys remaining: 0
    Iteration 1/13... 14006 ops/sec, 0.071ms latency
    Iteration 2/13... 14922 ops/sec, 0.067ms latency
    Iteration 3/13... 15034 ops/sec, 0.066ms latency
    Iteration 4/13... 15110 ops/sec, 0.066ms latency
    Iteration 5/13... 15332 ops/sec, 0.065ms latency
    Iteration 6/13... 15192 ops/sec, 0.065ms latency
    Iteration 7/13... 15417 ops/sec, 0.064ms latency
    Iteration 8/13... 15266 ops/sec, 0.065ms latency
    Iteration 9/13... 15323 ops/sec, 0.065ms latency
    Iteration 10/13... 15366 ops/sec, 0.065ms latency
    Iteration 11/13... 15318 ops/sec, 0.065ms latency
    Iteration 12/13... 15432 ops/sec, 0.064ms latency
    Iteration 13/13... 15508 ops/sec, 0.064ms latency
  Valkey (non-TLS-Predis): 15171.26¬±387.63 ops/sec (CV: 2.6%), 0.065¬±0.002ms latency, Quality: good
  Final keys in database: 61506
üîê Attempting TLS connection to Unknown at 127.0.0.1:6393 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Valkey (TLS-Predis)...
  Initial keys in database: 390617
  Flushing database before test...
  Database flushed in 0.14ms. Keys remaining: 0
    Iteration 1/13... 9888 ops/sec, 0.101ms latency
    Iteration 2/13... 10553 ops/sec, 0.094ms latency
    Iteration 3/13... 10700 ops/sec, 0.093ms latency
    Iteration 4/13... 10783 ops/sec, 0.092ms latency
    Iteration 5/13... 10951 ops/sec, 0.091ms latency
    Iteration 6/13... 10993 ops/sec, 0.090ms latency
    Iteration 7/13... 10910 ops/sec, 0.091ms latency
    Iteration 8/13... 10945 ops/sec, 0.091ms latency
    Iteration 9/13... 10957 ops/sec, 0.091ms latency
    Iteration 10/13... 10941 ops/sec, 0.091ms latency
    Iteration 11/13... 10864 ops/sec, 0.092ms latency
    Iteration 12/13... 10788 ops/sec, 0.092ms latency
    Iteration 13/13... 10818 ops/sec, 0.092ms latency
  Valkey (TLS-Predis): 10776.21¬±294.08 ops/sec (CV: 2.7%), 0.092¬±0.003ms latency, Quality: good
  Final keys in database: 61479

Enhanced Predis results saved:
  CSV: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis.csv
  JSON: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis.json
  Markdown: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis.md
  Raw Data: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis_raw.json
============================================================
Enhanced Predis test suite completed!
Total execution time: 2,779.35 seconds
Total tests run: 7
Statistical iterations per test: 13
Results saved to ./benchmarklogs-4t/
Redis implementation: Predis (pure PHP)

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY (Predis)
Thread Variant: 4 | Iterations per test: 13
====================================================================================================
Rank Database                       Ops/sec   ¬±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey (Predis)              15171      388    2.6%  0.065ms üü°good    14,956-15,386      ‚úÖ
#2  KeyDB (Predis)               13065      381    2.9%  0.076ms üü°good    12,854-13,276      ‚úÖ
#3  Dragonfly (Predis)           10990      329    3.0%  0.091ms üü°good    10,807-11,172      ‚úÖ
#4  Valkey (TLS-Predis)          10776      294    2.7%  0.092ms üü°good    10,613-10,939      ‚úÖ
#5  Redis (Predis)               10639      334    3.1%  0.094ms üü°good    10,453-10,824      ‚úÖ
#6  KeyDB (TLS-Predis)            9869      297    3.0%  0.101ms üü°good    9,704-10,034      ‚úÖ
#7  Redis (TLS-Predis)            8102      252    3.1%  0.123ms üü°good     7,963-8,242      ‚úÖ
====================================================================================================
Implementation: Predis (Pure PHP Redis Client)
üìà Compare with phpredis results to see implementation trade-offs

============================================================
TLS vs NON-TLS PERFORMANCE COMPARISON (Predis)
Thread Variant: 4
============================================================
Redis      | Non-TLS:    10639¬±334  | TLS:     8102¬±252  | Impact: +23.8% *
KeyDB      | Non-TLS:    13065¬±381  | TLS:     9869¬±297  | Impact: +24.5% *
Dragonfly  | Non-TLS:    10990¬±329  | TLS:   FAILED | Impact: N/A
Valkey     | Non-TLS:    15171¬±388  | TLS:    10776¬±294  | Impact: +29.0% *
------------------------------------------------------------
* = Statistically significant difference (95% confidence)
Implementation: Predis (Pure PHP)
============================================================

================================================================================
STATISTICAL INSIGHTS (Predis)
Thread Variant: 4 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  üü° Good      :  7 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 2.9% (lower is better)
  Range: 2.6% - 3.1%
  üìä Good measurement consistency with Predis

Predis Implementation Notes:
  üì° Connection management: Automatic (no manual close required)
  üîí TLS handling: Enhanced SSL context support
  üîÑ Error recovery: Built-in retry logic with exponential backoff
  üìä Performance characteristics: Pure PHP (higher latency, more consistent)
================================================================================

================================================================================
PREDIS-SPECIFIC INSIGHTS
Thread Variant: 4 | Implementation: Predis (Pure PHP)
================================================================================
TLS Connection Reliability:
  ‚úÖ Predis TLS connections: 3/4 databases
  üìä All TLS connections established successfully
  üîí SSL context handling: Reliable (Predis manages SSL internally)

Predis Configuration Analysis:
  üîó Connection timeout: 5s
  üì° Read/write timeout: 5s
  üîÑ Connection retry attempts: 3
  ‚ö° TCP keepalive: Enabled
  üîó Persistent connections: Disabled

Performance Characteristics:
  üìà Average non-TLS performance: 12,466 ops/sec
  üîí Average TLS performance: 9,582 ops/sec
  üìä TLS overhead: 23.1%
  ‚ÑπÔ∏è  Note: 25-40% TLS overhead is normal for Redis over SSL

Predis Advantages:
  ‚úÖ Better TLS reliability compared to phpredis extension
  ‚úÖ Enhanced SSL context handling
  ‚úÖ No extension compilation dependencies
  ‚úÖ Consistent behavior across PHP versions
  ‚ö†Ô∏è  Trade-off: Lower raw performance due to pure PHP implementation
================================================================================

======================================================================
‚úÖ Predis WordPress Object Cache test completed successfully!
üìÅ Results saved to: ./benchmarklogs-4t
üìä Implementation: Predis (Pure PHP Redis Client)
üîí TLS Support: Enhanced reliability compared to phpredis

üìÑ Generated files:
  php_wordpress_test_phpredis.log (29KB)
  php_wordpress_test_predis.log (15.1KB)
  wordpress_object_cache_test_predis_predis.csv (1.6KB)
  wordpress_object_cache_test_predis_predis.json (87.3KB)
  wordpress_object_cache_test_predis_predis.md (2.6KB)
  wordpress_object_cache_test_predis_predis_raw.json (76.4KB)
