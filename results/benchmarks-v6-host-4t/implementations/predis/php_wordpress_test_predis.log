WordPress Object Cache Test with Predis - Configured Runner
============================================================
Implementation: Predis (Pure PHP Redis Client)
Enhanced TLS Support: Yes
Statistical Analysis: 13 iterations with confidence intervals

üìã Loading configuration from: tests/php/test_config_predis.php
‚úÖ Configuration loaded successfully

üìä Test Configuration:
  Implementation: Predis (Pure PHP)
  Duration per iteration: 30s
  Test iterations: 13
  Output directory: ./benchmarklogs-4t
  TLS testing: Enabled
  Flush before test: Yes
  Thread variant: 4
  Connection timeout: 5s
  Read/write timeout: 5s
  Connection retries: 3
  Persistent connections: No
  Thread configuration:
    redis_io_threads: 4 threads
    keydb_server_threads: 4 threads
    dragonfly_proactor_threads: 4 threads
    valkey_io_threads: 4 threads
  Database configurations:
    Redis: 127.0.0.1:6379 (TLS: 6390) (IO threads: 4)
    KeyDB: 127.0.0.1:6380 (TLS: 6391) (Server threads: 4)
    Dragonfly: 127.0.0.1:6381 (TLS: 6392) (Proactor threads: 4)
    Valkey: 127.0.0.1:6382 (TLS: 6393) (IO threads: 4)

======================================================================

üîç Checking Predis availability...
‚úÖ Predis library available

üöÄ Starting Predis WordPress Object Cache Test...

Starting WordPress Object Cache Test (Predis)...
Timestamp: 2025-06-10 09:19:59 UTC
Predis Version: unknown
PHP Version: 8.4.8
Enhanced Testing Configuration (Predis):
- Iterations per test: 13
- Iteration pause: 500ms
- Statistical analysis: Enabled
- Raw data logging: Enabled
- Connection timeout: 5s
- Read/write timeout: 5s
- Connection retry attempts: 3
- Persistent connections: Disabled
- TCP keepalive: Enabled
Thread Variant: 4
Thread Configuration:
  redis_io_threads: 4 threads
  keydb_server_threads: 4 threads
  dragonfly_proactor_threads: 4 threads
  valkey_io_threads: 4 threads
TLS Certificates: Found and validated (Predis-compatible)

Checking TLS readiness (Predis)...
  Redis: TLS port accessible ‚úì
  KeyDB: TLS port accessible ‚úì
  Dragonfly: TLS port accessible ‚úì
  Valkey: TLS port accessible ‚úì

Predis TLS testing will be attempted for: Redis, KeyDB, Dragonfly, Valkey
============================================================
Testing Redis with Predis...
  Configuration: IO Threads: 4
  Running 13 iterations for Redis (non-TLS-Predis)...
  Initial keys in database: 395771
  Flushing database before test...
  Database flushed in 232.87ms. Keys remaining: 0
    Iteration 1/13... 9423 ops/sec, 0.106ms latency
    Iteration 2/13... 10117 ops/sec, 0.098ms latency
    Iteration 3/13... 10311 ops/sec, 0.096ms latency
    Iteration 4/13... 10407 ops/sec, 0.096ms latency
    Iteration 5/13... 10411 ops/sec, 0.096ms latency
    Iteration 6/13... 10495 ops/sec, 0.095ms latency
    Iteration 7/13... 10472 ops/sec, 0.095ms latency
    Iteration 8/13... 10479 ops/sec, 0.095ms latency
    Iteration 9/13... 10479 ops/sec, 0.095ms latency
    Iteration 10/13... 10482 ops/sec, 0.095ms latency
    Iteration 11/13... 10506 ops/sec, 0.095ms latency
    Iteration 12/13... 10517 ops/sec, 0.095ms latency
    Iteration 13/13... 10459 ops/sec, 0.095ms latency
  Redis (non-TLS-Predis): 10350.76¬±299.10 ops/sec (CV: 2.9%), 0.096¬±0.003ms latency, Quality: good
  Final keys in database: 61465
üîê Attempting TLS connection to Redis at 127.0.0.1:6390 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Redis (TLS-Predis)...
  Initial keys in database: 394536
  Flushing database before test...
  Database flushed in 224.52ms. Keys remaining: 0
    Iteration 1/13... 7191 ops/sec, 0.138ms latency
    Iteration 2/13... 7626 ops/sec, 0.131ms latency
    Iteration 3/13... 7871 ops/sec, 0.126ms latency
    Iteration 4/13... 7950 ops/sec, 0.125ms latency
    Iteration 5/13... 7952 ops/sec, 0.125ms latency
    Iteration 6/13... 7969 ops/sec, 0.125ms latency
    Iteration 7/13... 8044 ops/sec, 0.124ms latency
    Iteration 8/13... 8005 ops/sec, 0.124ms latency
    Iteration 9/13... 7992 ops/sec, 0.125ms latency
    Iteration 10/13... 7963 ops/sec, 0.125ms latency
    Iteration 11/13... 8046 ops/sec, 0.124ms latency
    Iteration 12/13... 8060 ops/sec, 0.123ms latency
    Iteration 13/13... 8076 ops/sec, 0.123ms latency
  Redis (TLS-Predis): 7903.31¬±243.35 ops/sec (CV: 3.1%), 0.126¬±0.004ms latency, Quality: good
  Final keys in database: 61377

Testing KeyDB with Predis...
  Configuration: Server Threads: 4
  Running 13 iterations for KeyDB (non-TLS-Predis)...
  Initial keys in database: 394311
  Flushing database before test...
  Database flushed in 228.96ms. Keys remaining: 0
    Iteration 1/13... 11596 ops/sec, 0.086ms latency
    Iteration 2/13... 12311 ops/sec, 0.081ms latency
    Iteration 3/13... 12583 ops/sec, 0.079ms latency
    Iteration 4/13... 12822 ops/sec, 0.077ms latency
    Iteration 5/13... 12933 ops/sec, 0.077ms latency
    Iteration 6/13... 12899 ops/sec, 0.077ms latency
    Iteration 7/13... 12755 ops/sec, 0.078ms latency
    Iteration 8/13... 12882 ops/sec, 0.077ms latency
    Iteration 9/13... 12927 ops/sec, 0.077ms latency
    Iteration 10/13... 12846 ops/sec, 0.077ms latency
    Iteration 11/13... 12879 ops/sec, 0.077ms latency
    Iteration 12/13... 12812 ops/sec, 0.078ms latency
    Iteration 13/13... 12777 ops/sec, 0.078ms latency
  KeyDB (non-TLS-Predis): 12693.98¬±370.84 ops/sec (CV: 2.9%), 0.078¬±0.002ms latency, Quality: good
  Final keys in database: 61499
üîê Attempting TLS connection to KeyDB at 127.0.0.1:6391 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for KeyDB (TLS-Predis)...
  Initial keys in database: 392755
  Flushing database before test...
  Database flushed in 236.57ms. Keys remaining: 0
    Iteration 1/13... 8755 ops/sec, 0.114ms latency
    Iteration 2/13... 9270 ops/sec, 0.107ms latency
    Iteration 3/13... 9478 ops/sec, 0.105ms latency
    Iteration 4/13... 9577 ops/sec, 0.104ms latency
    Iteration 5/13... 9671 ops/sec, 0.103ms latency
    Iteration 6/13... 9673 ops/sec, 0.103ms latency
    Iteration 7/13... 9654 ops/sec, 0.103ms latency
    Iteration 8/13... 9693 ops/sec, 0.103ms latency
    Iteration 9/13... 9645 ops/sec, 0.103ms latency
    Iteration 10/13... 9653 ops/sec, 0.103ms latency
    Iteration 11/13... 9705 ops/sec, 0.102ms latency
    Iteration 12/13... 9687 ops/sec, 0.103ms latency
    Iteration 13/13... 9635 ops/sec, 0.103ms latency
  KeyDB (TLS-Predis): 9545.76¬±265.79 ops/sec (CV: 2.8%), 0.104¬±0.003ms latency, Quality: good
  Final keys in database: 61450

Testing Dragonfly with Predis...
  Configuration: Proactor Threads: 4
  Running 13 iterations for Dragonfly (non-TLS-Predis)...
  Initial keys in database: 390807
  Flushing database before test...
  Database flushed in 21.57ms. Keys remaining: 0
    Iteration 1/13... 9765 ops/sec, 0.102ms latency
    Iteration 2/13... 10407 ops/sec, 0.096ms latency
    Iteration 3/13... 10604 ops/sec, 0.094ms latency
    Iteration 4/13... 10510 ops/sec, 0.095ms latency
    Iteration 5/13... 10610 ops/sec, 0.094ms latency
    Iteration 6/13... 10592 ops/sec, 0.094ms latency
    Iteration 7/13... 10766 ops/sec, 0.092ms latency
    Iteration 8/13... 10801 ops/sec, 0.092ms latency
    Iteration 9/13... 10762 ops/sec, 0.092ms latency
    Iteration 10/13... 10797 ops/sec, 0.092ms latency
    Iteration 11/13... 10807 ops/sec, 0.092ms latency
    Iteration 12/13... 10810 ops/sec, 0.092ms latency
    Iteration 13/13... 10745 ops/sec, 0.092ms latency
  Dragonfly (non-TLS-Predis): 10613.63¬±286.10 ops/sec (CV: 2.7%), 0.094¬±0.003ms latency, Quality: good
  Final keys in database: 61316
üîê Attempting TLS connection to Dragonfly at 127.0.0.1:6392 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üîê Adding Dragonfly authentication to connection parameters...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Dragonfly (TLS-Predis)...
  Initial keys in database: 387748
  Flushing database before test...
  Database flushed in 14.85ms. Keys remaining: 0
    Iteration 1/13... 6884 ops/sec, 0.145ms latency
    Iteration 2/13... 7289 ops/sec, 0.137ms latency
    Iteration 3/13... 7469 ops/sec, 0.133ms latency
    Iteration 4/13... 7606 ops/sec, 0.131ms latency
    Iteration 5/13... 7629 ops/sec, 0.130ms latency
    Iteration 6/13... 7597 ops/sec, 0.131ms latency
    Iteration 7/13... 7624 ops/sec, 0.131ms latency
    Iteration 8/13... 7604 ops/sec, 0.131ms latency
    Iteration 9/13... 7575 ops/sec, 0.131ms latency
    Iteration 10/13... 7558 ops/sec, 0.132ms latency
    Iteration 11/13... 7646 ops/sec, 0.130ms latency
    Iteration 12/13... 7592 ops/sec, 0.131ms latency
    Iteration 13/13... 7627 ops/sec, 0.131ms latency
  Dragonfly (TLS-Predis): 7515.44¬±212.28 ops/sec (CV: 2.8%), 0.133¬±0.004ms latency, Quality: good
  Final keys in database: 61045

Testing Valkey with Predis...
  Configuration: IO Threads: 4
  Running 13 iterations for Valkey (non-TLS-Predis)...
  Initial keys in database: 390588
  Flushing database before test...
  Database flushed in 0.11ms. Keys remaining: 0
    Iteration 1/13... 13559 ops/sec, 0.073ms latency
    Iteration 2/13... 14483 ops/sec, 0.069ms latency
    Iteration 3/13... 14745 ops/sec, 0.067ms latency
    Iteration 4/13... 14868 ops/sec, 0.067ms latency
    Iteration 5/13... 14881 ops/sec, 0.067ms latency
    Iteration 6/13... 14881 ops/sec, 0.067ms latency
    Iteration 7/13... 14967 ops/sec, 0.066ms latency
    Iteration 8/13... 14941 ops/sec, 0.066ms latency
    Iteration 9/13... 14875 ops/sec, 0.067ms latency
    Iteration 10/13... 14954 ops/sec, 0.066ms latency
    Iteration 11/13... 14982 ops/sec, 0.066ms latency
    Iteration 12/13... 15094 ops/sec, 0.066ms latency
    Iteration 13/13... 14992 ops/sec, 0.066ms latency
  Valkey (non-TLS-Predis): 14786.31¬±397.16 ops/sec (CV: 2.7%), 0.067¬±0.002ms latency, Quality: good
  Final keys in database: 61502
üîê Attempting TLS connection to Valkey at 127.0.0.1:6393 (Predis)
  Using custom port scheme: Redis=6390, KeyDB=6391, Dragonfly=6392, Valkey=6393
  Note: Predis uses 'tls' scheme and 'ssl' context array
  üì° Method 1: Predis 'tls' scheme with SSL context...
  üß™ Testing TLS connection with SET/GET commands...
  ‚úÖ TLS connection successful with Predis 'tls' scheme
  Running 13 iterations for Valkey (TLS-Predis)...
  Initial keys in database: 388999
  Flushing database before test...
  Database flushed in 0.14ms. Keys remaining: 0
    Iteration 1/13... 9847 ops/sec, 0.101ms latency
    Iteration 2/13... 10345 ops/sec, 0.096ms latency
    Iteration 3/13... 10533 ops/sec, 0.094ms latency
    Iteration 4/13... 10530 ops/sec, 0.094ms latency
    Iteration 5/13... 10795 ops/sec, 0.092ms latency
    Iteration 6/13... 10822 ops/sec, 0.092ms latency
    Iteration 7/13... 10816 ops/sec, 0.092ms latency
    Iteration 8/13... 10661 ops/sec, 0.093ms latency
    Iteration 9/13... 10646 ops/sec, 0.093ms latency
    Iteration 10/13... 10725 ops/sec, 0.093ms latency
    Iteration 11/13... 10730 ops/sec, 0.093ms latency
    Iteration 12/13... 10706 ops/sec, 0.093ms latency
    Iteration 13/13... 10694 ops/sec, 0.093ms latency
  Valkey (TLS-Predis): 10603.84¬±263.64 ops/sec (CV: 2.5%), 0.094¬±0.002ms latency, Quality: good
  Final keys in database: 61476

Enhanced Predis results saved:
  CSV: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis.csv
  JSON: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis.json
  Markdown: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis.md
  Raw Data: ./benchmarklogs-4t/wordpress_object_cache_test_predis_predis_raw.json
============================================================
Enhanced Predis test suite completed!
Total execution time: 3,175.71 seconds
Total tests run: 8
Statistical iterations per test: 13
Results saved to ./benchmarklogs-4t/
Redis implementation: Predis (pure PHP)

====================================================================================================
ENHANCED STATISTICAL PERFORMANCE SUMMARY (Predis)
Thread Variant: 4 | Iterations per test: 13
====================================================================================================
Rank Database                       Ops/sec   ¬±StdDev      CV%  Latency  Quality     95% CI     Reliable
----------------------------------------------------------------------------------------------------
#1  Valkey (Predis)              14786      397    2.7%  0.067ms üü°good    14,566-15,007      ‚úÖ
#2  KeyDB (Predis)               12694      371    2.9%  0.078ms üü°good    12,488-12,900      ‚úÖ
#3  Dragonfly (Predis)           10614      286    2.7%  0.094ms üü°good    10,455-10,772      ‚úÖ
#4  Valkey (TLS-Predis)          10604      264    2.5%  0.094ms üü°good    10,458-10,750      ‚úÖ
#5  Redis (Predis)               10351      299    2.9%  0.096ms üü°good    10,185-10,517      ‚úÖ
#6  KeyDB (TLS-Predis)            9546      266    2.8%  0.104ms üü°good     9,398-9,693      ‚úÖ
#7  Redis (TLS-Predis)            7903      243    3.1%  0.126ms üü°good     7,768-8,038      ‚úÖ
#8  Dragonfly (TLS-Predis)        7515      212    2.8%  0.133ms üü°good     7,398-7,633      ‚úÖ
====================================================================================================
Implementation: Predis (Pure PHP Redis Client)
üìà Compare with phpredis results to see implementation trade-offs

============================================================
TLS vs NON-TLS PERFORMANCE COMPARISON (Predis)
Thread Variant: 4
============================================================
Redis      | Non-TLS:    10351¬±299  | TLS:     7903¬±243  | Impact: +23.6% *
KeyDB      | Non-TLS:    12694¬±371  | TLS:     9546¬±266  | Impact: +24.8% *
Dragonfly  | Non-TLS:    10614¬±286  | TLS:     7515¬±212  | Impact: +29.2% *
Valkey     | Non-TLS:    14786¬±397  | TLS:    10604¬±264  | Impact: +28.3% *
------------------------------------------------------------
* = Statistically significant difference (95% confidence)
Implementation: Predis (Pure PHP)
============================================================

================================================================================
STATISTICAL INSIGHTS (Predis)
Thread Variant: 4 | Iterations: 13
================================================================================
Measurement Quality Distribution:
  üü° Good      :  8 tests (100.0%)

Coefficient of Variation Analysis:
  Average CV: 2.8% (lower is better)
  Range: 2.5% - 3.1%
  üìä Good measurement consistency with Predis

Predis Implementation Notes:
  üì° Connection management: Automatic (no manual close required)
  üîí TLS handling: Enhanced SSL context support
  üîÑ Error recovery: Built-in retry logic with exponential backoff
  üìä Performance characteristics: Pure PHP (higher latency, more consistent)
================================================================================

================================================================================
PREDIS-SPECIFIC INSIGHTS
Thread Variant: 4 | Implementation: Predis (Pure PHP)
================================================================================
TLS Connection Reliability:
  ‚úÖ Predis TLS connections: 4/4 databases
  üìä All TLS connections established successfully
  üîí SSL context handling: Reliable (Predis manages SSL internally)

Predis Configuration Analysis:
  üîó Connection timeout: 5s
  üì° Read/write timeout: 5s
  üîÑ Connection retry attempts: 3
  ‚ö° TCP keepalive: Enabled
  üîó Persistent connections: Disabled

Performance Characteristics:
  üìà Average non-TLS performance: 12,111 ops/sec
  üîí Average TLS performance: 8,892 ops/sec
  üìä TLS overhead: 26.6%
  ‚ÑπÔ∏è  Note: 25-40% TLS overhead is normal for Redis over SSL

Predis Advantages:
  ‚úÖ Better TLS reliability compared to phpredis extension
  ‚úÖ Enhanced SSL context handling
  ‚úÖ No extension compilation dependencies
  ‚úÖ Consistent behavior across PHP versions
  ‚ö†Ô∏è  Trade-off: Lower raw performance due to pure PHP implementation
================================================================================

======================================================================
‚úÖ Predis WordPress Object Cache test completed successfully!
üìÅ Results saved to: ./benchmarklogs-4t
üìä Implementation: Predis (Pure PHP Redis Client)
üîí TLS Support: Enhanced reliability compared to phpredis

üìÑ Generated files:
  php_wordpress_test_phpredis.log (32KB)
  php_wordpress_test_predis.log (16.8KB)
  wordpress_object_cache_test_predis_predis.csv (1.8KB)
  wordpress_object_cache_test_predis_predis.json (99.6KB)
  wordpress_object_cache_test_predis_predis.md (2.7KB)
  wordpress_object_cache_test_predis_predis_raw.json (87.2KB)
